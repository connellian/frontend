AWSTemplateFormatVersion: "2010-09-09"
Metadata:
    Generator: "former2"
Description: ""
Resources:
    IAMUser:
        Type: "AWS::IAM::User"
        Properties:
            Path: "/"
            UserName: "Atif"
            Groups: 
              - !Ref IAMGroup3
            ManagedPolicyArns: 
              - "arn:aws:iam::aws:policy/IAMUserChangePassword"

    IAMUser2:
        Type: "AWS::IAM::User"
        Properties:
            Path: "/"
            UserName: "aws-nuke"
            ManagedPolicyArns: 
              - "arn:aws:iam::aws:policy/AdministratorAccess"

    IAMUser3:
        Type: "AWS::IAM::User"
        Properties:
            Path: "/"
            UserName: "Former"
            ManagedPolicyArns: 
              - "arn:aws:iam::aws:policy/ReadOnlyAccess"

    IAMUser4:
        Type: "AWS::IAM::User"
        Properties:
            Path: "/"
            UserName: "ian"
            Groups: 
              - !Ref IAMGroup3

    IAMUser5:
        Type: "AWS::IAM::User"
        Properties:
            Path: "/"
            UserName: "Keith"
            Groups: 
              - !Ref IAMGroup3

    IAMUser6:
        Type: "AWS::IAM::User"
        Properties:
            Path: "/"
            UserName: "Lukas"
            Groups: 
              - !Ref IAMGroup3

    IAMUser7:
        Type: "AWS::IAM::User"
        Properties:
            Path: "/"
            UserName: "student"
            ManagedPolicyArns: 
              - "arn:aws:iam::aws:policy/AdministratorAccess"

    IAMGroup:
        Type: "AWS::IAM::Group"
        Properties:
            Path: "/"
            GroupName: "AuthenticatedSiteUsers"
            ManagedPolicyArns: 
              - !Ref IAMManagedPolicy

    IAMGroup2:
        Type: "AWS::IAM::Group"
        Properties:
            Path: "/"
            GroupName: "admins"
            ManagedPolicyArns: 
              - "arn:aws:iam::aws:policy/AdministratorAccess"
              - "arn:aws:iam::aws:policy/job-function/Billing"

    IAMGroup3:
        Type: "AWS::IAM::Group"
        Properties:
            Path: "/"
            GroupName: "TechXProjectAdmins"
            ManagedPolicyArns: 
              - "arn:aws:iam::aws:policy/AdministratorAccess"

    IAMRole:
        Type: "AWS::IAM::Role"
        Properties:
            Path: "/"
            RoleName: "AWS-QuickSetup-StackSet-Local-AdministrationRole"
            AssumeRolePolicyDocument: "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"cloudformation.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}"
            MaxSessionDuration: 3600

    IAMRole2:
        Type: "AWS::IAM::Role"
        Properties:
            Path: "/"
            RoleName: "aws-elasticbeanstalk-ec2-role"
            AssumeRolePolicyDocument: "{\"Version\":\"2008-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}"
            MaxSessionDuration: 3600
            ManagedPolicyArns: 
              - "arn:aws:iam::aws:policy/AWSElasticBeanstalkMulticontainerDocker"
              - "arn:aws:iam::aws:policy/AWSElasticBeanstalkWebTier"
              - "arn:aws:iam::aws:policy/AWSElasticBeanstalkWorkerTier"

    IAMRole3:
        Type: "AWS::IAM::Role"
        Properties:
            Path: "/"
            RoleName: "aws-elasticbeanstalk-service-role"
            AssumeRolePolicyDocument: "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"elasticbeanstalk.amazonaws.com\"},\"Action\":\"sts:AssumeRole\",\"Condition\":{\"StringEquals\":{\"sts:ExternalId\":\"elasticbeanstalk\"}}}]}"
            MaxSessionDuration: 3600
            ManagedPolicyArns: 
              - "arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkEnhancedHealth"
              - "arn:aws:iam::aws:policy/AWSElasticBeanstalkManagedUpdatesCustomerRolePolicy"

    IAMRole4:
        Type: "AWS::IAM::Role"
        Properties:
            Path: "/service-role/"
            RoleName: !Sub "AWSCodePipelineServiceRole-${AWS::Region}-textractjsondynamodb"
            AssumeRolePolicyDocument: "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"codepipeline.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}"
            MaxSessionDuration: 3600
            ManagedPolicyArns: 
              - !Ref IAMManagedPolicy10

    IAMRole5:
        Type: "AWS::IAM::Role"
        Properties:
            Path: "/"
            RoleName: "AWS-QuickSetup-StackSet-Local-ExecutionRole"
            AssumeRolePolicyDocument: !Sub "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::${AWS::AccountId}:role/${IAMRole}\"},\"Action\":\"sts:AssumeRole\"}]}"
            MaxSessionDuration: 3600
            ManagedPolicyArns: 
              - "arn:aws:iam::aws:policy/AdministratorAccess"

    IAMRole6:
        Type: "AWS::IAM::Role"
        Properties:
            Path: "/service-role/"
            RoleName: "codebuild-TestBuild-service-role"
            AssumeRolePolicyDocument: "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"codebuild.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}"
            MaxSessionDuration: 3600
            ManagedPolicyArns: 
              - !Ref IAMManagedPolicy2
              - !Ref IAMManagedPolicy11

    IAMRole7:
        Type: "AWS::IAM::Role"
        Properties:
            Path: "/"
            RoleName: "Cognito_S3UploadUsersUnauth_Role"
            AssumeRolePolicyDocument: !Sub "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"cognito-identity.amazonaws.com\"},\"Action\":\"sts:AssumeRoleWithWebIdentity\",\"Condition\":{\"StringEquals\":{\"cognito-identity.amazonaws.com:aud\":\"${AWS::Region}:7df287ef-92c7-4c5d-a89f-f8f0135c277f\"},\"ForAnyValue:StringLike\":{\"cognito-identity.amazonaws.com:amr\":\"unauthenticated\"}}}]}"
            MaxSessionDuration: 3600

    IAMRole8:
        Type: "AWS::IAM::Role"
        Properties:
            Path: "/service-role/"
            RoleName: "AWSSystemsManagerDefaultEC2InstanceManagementRole"
            AssumeRolePolicyDocument: "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ssm.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}"
            MaxSessionDuration: 3600
            ManagedPolicyArns: 
              - "arn:aws:iam::aws:policy/AmazonSSMManagedEC2InstanceDefaultPolicy"
            Description: "AWS Systems Manager Default EC2 Instance Management Role"

    IAMRole9:
        Type: "AWS::IAM::Role"
        Properties:
            Path: "/"
            RoleName: "Cognito_S3UploadUsersAuth_Role"
            AssumeRolePolicyDocument: !Sub "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"cognito-identity.amazonaws.com\"},\"Action\":\"sts:AssumeRoleWithWebIdentity\",\"Condition\":{\"StringEquals\":{\"cognito-identity.amazonaws.com:aud\":\"${AWS::Region}:7df287ef-92c7-4c5d-a89f-f8f0135c277f\"},\"ForAnyValue:StringLike\":{\"cognito-identity.amazonaws.com:amr\":\"authenticated\"}}}]}"
            MaxSessionDuration: 3600

    IAMRole10:
        Type: "AWS::IAM::Role"
        Properties:
            Path: "/"
            RoleName: "Lambda-S3-Dynamo"
            AssumeRolePolicyDocument: "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}"
            MaxSessionDuration: 3600
            ManagedPolicyArns: 
              - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              - "arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess"
            Description: "Allows Lambda functions to call AWS services on your behalf."

    IAMRole11:
        Type: "AWS::IAM::Role"
        Properties:
            Path: "/"
            RoleName: "LambdaSQS"
            AssumeRolePolicyDocument: "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}"
            MaxSessionDuration: 3600
            ManagedPolicyArns: 
              - !Ref IAMManagedPolicy9
            Description: "Allows Lambda functions to call AWS services on your behalf."

    IAMRole12:
        Type: "AWS::IAM::Role"
        Properties:
            Path: "/"
            RoleName: "OrganizationAccountAccessRole"
            AssumeRolePolicyDocument: "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::457247706586:root\"},\"Action\":\"sts:AssumeRole\",\"Condition\":{}}]}"
            MaxSessionDuration: 3600
            ManagedPolicyArns: 
              - "arn:aws:iam::aws:policy/AdministratorAccess"

    IAMRole13:
        Type: "AWS::IAM::Role"
        Properties:
            Path: "/"
            RoleName: "IAM-TechEx"
            AssumeRolePolicyDocument: "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}"
            MaxSessionDuration: 3600
            ManagedPolicyArns: 
              - !Ref IAMManagedPolicy3
              - "arn:aws:iam::aws:policy/service-role/AWSLambdaDynamoDBExecutionRole"
              - "arn:aws:iam::aws:policy/AWSLambdaInvocation-DynamoDB"
              - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              - "arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess"
              - "arn:aws:iam::aws:policy/AmazonS3FullAccess"
              - "arn:aws:iam::aws:policy/service-role/AmazonS3ObjectLambdaExecutionRolePolicy"
            Description: "Allows Lambda functions to call AWS services on your behalf."

    IAMRole14:
        Type: "AWS::IAM::Role"
        Properties:
            Path: "/service-role/"
            RoleName: !Sub "${LambdaFunction}-role-unz91j5u"
            AssumeRolePolicyDocument: "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}"
            MaxSessionDuration: 3600
            ManagedPolicyArns: 
              - !Ref IAMManagedPolicy7
              - !Ref IAMManagedPolicy6

    IAMRole15:
        Type: "AWS::IAM::Role"
        Properties:
            Path: "/service-role/"
            RoleName: !Sub "${LambdaFunction2}-role-8zhhs6pm"
            AssumeRolePolicyDocument: "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}"
            MaxSessionDuration: 3600
            ManagedPolicyArns: 
              - !Ref IAMManagedPolicy5
              - !Ref IAMManagedPolicy4
              - "arn:aws:iam::aws:policy/AmazonTextractFullAccess"
              - "arn:aws:iam::aws:policy/AWSLambdaExecute"
              - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              - "arn:aws:iam::aws:policy/AmazonSNSFullAccess"
              - "arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess"
              - "arn:aws:iam::aws:policy/AmazonS3FullAccess"
              - "arn:aws:iam::aws:policy/AWSLambda_FullAccess"
              - "arn:aws:iam::aws:policy/service-role/AmazonS3ObjectLambdaExecutionRolePolicy"

    IAMServiceLinkedRole:
        Type: "AWS::IAM::ServiceLinkedRole"
        Properties:
            AWSServiceName: "eks.amazonaws.com"
            Description: "Allows Amazon EKS to call AWS services on your behalf."

    IAMServiceLinkedRole2:
        Type: "AWS::IAM::ServiceLinkedRole"
        Properties:
            AWSServiceName: "ops.apigateway.amazonaws.com"
            Description: "The Service Linked Role is used by Amazon API Gateway."

    IAMServiceLinkedRole3:
        Type: "AWS::IAM::ServiceLinkedRole"
        Properties:
            AWSServiceName: "dynamodb.application-autoscaling.amazonaws.com"

    IAMServiceLinkedRole4:
        Type: "AWS::IAM::ServiceLinkedRole"
        Properties:
            AWSServiceName: "autoscaling.amazonaws.com"
            Description: "Default Service-Linked Role enables access to AWS Services and Resources used or managed by Auto Scaling"

    IAMServiceLinkedRole5:
        Type: "AWS::IAM::ServiceLinkedRole"
        Properties:
            AWSServiceName: "cloud9.amazonaws.com"
            Description: "Service linked role for AWS Cloud9"

    IAMServiceLinkedRole6:
        Type: "AWS::IAM::ServiceLinkedRole"
        Properties:
            AWSServiceName: "elasticloadbalancing.amazonaws.com"
            Description: "Allows ELB to call AWS services on your behalf."

    IAMServiceLinkedRole7:
        Type: "AWS::IAM::ServiceLinkedRole"
        Properties:
            AWSServiceName: "spot.amazonaws.com"
            Description: "Default EC2 Spot Service Linked Role"

    IAMServiceLinkedRole8:
        Type: "AWS::IAM::ServiceLinkedRole"
        Properties:
            AWSServiceName: "organizations.amazonaws.com"
            Description: "Service-linked role used by AWS Organizations to enable integration of other AWS services with Organizations."

    IAMServiceLinkedRole9:
        Type: "AWS::IAM::ServiceLinkedRole"
        Properties:
            AWSServiceName: "rds.amazonaws.com"
            Description: "Allows Amazon RDS to manage AWS resources on your behalf"

    IAMManagedPolicy:
        Type: "AWS::IAM::ManagedPolicy"
        Properties:
            ManagedPolicyName: "UserUpload"
            Path: "/"
            PolicyDocument: !Sub |
                {
                     "Version": "2012-10-17",
                   "Statement": [
                      {
                         "Effect": "Allow",
                         "Action": [
                            "s3:*"
                         ],
                         "Resource": [
                            "arn:aws:s3:::${S3Bucket5}/*"
                         ]
                      }
                   ]
                }

    IAMManagedPolicy2:
        Type: "AWS::IAM::ManagedPolicy"
        Properties:
            ManagedPolicyName: !Sub "CodeBuildCloudWatchLogsPolicy-TestBuild-${AWS::Region}"
            Path: "/service-role/"
            PolicyDocument: !Sub |
                {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Resource": [
                                "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:TestBuild",
                                "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:TestBuild:*"
                            ],
                            "Action": [
                                "logs:CreateLogGroup",
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                            ]
                        }
                    ]
                }

    IAMManagedPolicy3:
        Type: "AWS::IAM::ManagedPolicy"
        Properties:
            ManagedPolicyName: "AWSLambdaLambdaFunctionDestinationExecutionRole-9276bbb3-13c8-48c4-8a84-9b219d50e9aa"
            Path: "/service-role/"
            PolicyDocument: !Sub |
                {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": "lambda:InvokeFunction",
                            "Resource": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${LambdaFunction4}*"
                        }
                    ]
                }

    IAMManagedPolicy4:
        Type: "AWS::IAM::ManagedPolicy"
        Properties:
            ManagedPolicyName: "AWSLambdaBasicExecutionRole-187e1b0b-518c-40c1-909c-c212a3cc5623"
            Path: "/service-role/"
            PolicyDocument: !Sub |
                {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": "logs:CreateLogGroup",
                            "Resource": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*"
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                            ],
                            "Resource": [
                                "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${LambdaFunction2}:*"
                            ]
                        }
                    ]
                }

    IAMManagedPolicy5:
        Type: "AWS::IAM::ManagedPolicy"
        Properties:
            ManagedPolicyName: "AWSLambdaLambdaFunctionDestinationExecutionRole-dbff6dad-a490-420b-8fe3-8647021e8c97"
            Path: "/service-role/"
            PolicyDocument: !Sub |
                {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": "lambda:InvokeFunction",
                            "Resource": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${LambdaFunction2}*"
                        }
                    ]
                }

    IAMManagedPolicy6:
        Type: "AWS::IAM::ManagedPolicy"
        Properties:
            ManagedPolicyName: "AWSLambdaBasicExecutionRole-ca03431d-999c-455b-9fd2-2b0b282b5c0f"
            Path: "/service-role/"
            PolicyDocument: !Sub |
                {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": "logs:CreateLogGroup",
                            "Resource": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*"
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                            ],
                            "Resource": [
                                "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${LambdaFunction}:*"
                            ]
                        }
                    ]
                }

    IAMManagedPolicy7:
        Type: "AWS::IAM::ManagedPolicy"
        Properties:
            ManagedPolicyName: "AWSLambdaLambdaFunctionDestinationExecutionRole-0ccea8f5-3a35-4d16-9db3-febd7029d537"
            Path: "/service-role/"
            PolicyDocument: !Sub |
                {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": "lambda:InvokeFunction",
                            "Resource": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${LambdaFunction}*"
                        }
                    ]
                }

    IAMManagedPolicy8:
        Type: "AWS::IAM::ManagedPolicy"
        Properties:
            ManagedPolicyName: !Sub "${IAMRole11}AdminRights"
            Path: "/"
            PolicyDocument: |
                {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Sid": "VisualEditor0",
                            "Effect": "Allow",
                            "Action": "sqs:*",
                            "Resource": "*"
                        }
                    ]
                }

    IAMManagedPolicy9:
        Type: "AWS::IAM::ManagedPolicy"
        Properties:
            ManagedPolicyName: "LambdaSQS"
            Path: "/"
            PolicyDocument: |
                {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Sid": "VisualEditor0",
                            "Effect": "Allow",
                            "Action": [
                                "sqs:DeleteMessage",
                                "sqs:GetQueueUrl",
                                "sqs:ListQueues",
                                "sqs:ChangeMessageVisibility",
                                "sqs:ReceiveMessage",
                                "sqs:SendMessage",
                                "sqs:GetQueueAttributes",
                                "sqs:ListQueueTags",
                                "sqs:ListDeadLetterSourceQueues",
                                "sqs:PurgeQueue",
                                "sqs:DeleteQueue",
                                "sqs:CreateQueue",
                                "sqs:SetQueueAttributes"
                            ],
                            "Resource": "*"
                        }
                    ]
                }

    IAMManagedPolicy10:
        Type: "AWS::IAM::ManagedPolicy"
        Properties:
            ManagedPolicyName: !Sub "AWSCodePipelineServiceRole-${AWS::Region}-textractjsondynamo"
            Path: "/service-role/"
            PolicyDocument: |
                {
                    "Statement": [
                        {
                            "Action": [
                                "iam:PassRole"
                            ],
                            "Resource": "*",
                            "Effect": "Allow",
                            "Condition": {
                                "StringEqualsIfExists": {
                                    "iam:PassedToService": [
                                        "cloudformation.amazonaws.com",
                                        "elasticbeanstalk.amazonaws.com",
                                        "ec2.amazonaws.com",
                                        "ecs-tasks.amazonaws.com"
                                    ]
                                }
                            }
                        },
                        {
                            "Action": [
                                "codecommit:CancelUploadArchive",
                                "codecommit:GetBranch",
                                "codecommit:GetCommit",
                                "codecommit:GetRepository",
                                "codecommit:GetUploadArchiveStatus",
                                "codecommit:UploadArchive"
                            ],
                            "Resource": "*",
                            "Effect": "Allow"
                        },
                        {
                            "Action": [
                                "codedeploy:CreateDeployment",
                                "codedeploy:GetApplication",
                                "codedeploy:GetApplicationRevision",
                                "codedeploy:GetDeployment",
                                "codedeploy:GetDeploymentConfig",
                                "codedeploy:RegisterApplicationRevision"
                            ],
                            "Resource": "*",
                            "Effect": "Allow"
                        },
                        {
                            "Action": [
                                "codestar-connections:UseConnection"
                            ],
                            "Resource": "*",
                            "Effect": "Allow"
                        },
                        {
                            "Action": [
                                "elasticbeanstalk:*",
                                "ec2:*",
                                "elasticloadbalancing:*",
                                "autoscaling:*",
                                "cloudwatch:*",
                                "s3:*",
                                "sns:*",
                                "cloudformation:*",
                                "rds:*",
                                "sqs:*",
                                "ecs:*"
                            ],
                            "Resource": "*",
                            "Effect": "Allow"
                        },
                        {
                            "Action": [
                                "lambda:InvokeFunction",
                                "lambda:ListFunctions"
                            ],
                            "Resource": "*",
                            "Effect": "Allow"
                        },
                        {
                            "Action": [
                                "opsworks:CreateDeployment",
                                "opsworks:DescribeApps",
                                "opsworks:DescribeCommands",
                                "opsworks:DescribeDeployments",
                                "opsworks:DescribeInstances",
                                "opsworks:DescribeStacks",
                                "opsworks:UpdateApp",
                                "opsworks:UpdateStack"
                            ],
                            "Resource": "*",
                            "Effect": "Allow"
                        },
                        {
                            "Action": [
                                "cloudformation:CreateStack",
                                "cloudformation:DeleteStack",
                                "cloudformation:DescribeStacks",
                                "cloudformation:UpdateStack",
                                "cloudformation:CreateChangeSet",
                                "cloudformation:DeleteChangeSet",
                                "cloudformation:DescribeChangeSet",
                                "cloudformation:ExecuteChangeSet",
                                "cloudformation:SetStackPolicy",
                                "cloudformation:ValidateTemplate"
                            ],
                            "Resource": "*",
                            "Effect": "Allow"
                        },
                        {
                            "Action": [
                                "codebuild:BatchGetBuilds",
                                "codebuild:StartBuild",
                                "codebuild:BatchGetBuildBatches",
                                "codebuild:StartBuildBatch"
                            ],
                            "Resource": "*",
                            "Effect": "Allow"
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "devicefarm:ListProjects",
                                "devicefarm:ListDevicePools",
                                "devicefarm:GetRun",
                                "devicefarm:GetUpload",
                                "devicefarm:CreateUpload",
                                "devicefarm:ScheduleRun"
                            ],
                            "Resource": "*"
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "servicecatalog:ListProvisioningArtifacts",
                                "servicecatalog:CreateProvisioningArtifact",
                                "servicecatalog:DescribeProvisioningArtifact",
                                "servicecatalog:DeleteProvisioningArtifact",
                                "servicecatalog:UpdateProduct"
                            ],
                            "Resource": "*"
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "cloudformation:ValidateTemplate"
                            ],
                            "Resource": "*"
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "ecr:DescribeImages"
                            ],
                            "Resource": "*"
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "states:DescribeExecution",
                                "states:DescribeStateMachine",
                                "states:StartExecution"
                            ],
                            "Resource": "*"
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "appconfig:StartDeployment",
                                "appconfig:StopDeployment",
                                "appconfig:GetDeployment"
                            ],
                            "Resource": "*"
                        }
                    ],
                    "Version": "2012-10-17"
                }

    IAMManagedPolicy11:
        Type: "AWS::IAM::ManagedPolicy"
        Properties:
            ManagedPolicyName: !Sub "CodeBuildBasePolicy-TestBuild-${AWS::Region}"
            Path: "/service-role/"
            PolicyDocument: !Sub |
                {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Resource": [
                                "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/TestBuild",
                                "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/TestBuild:*"
                            ],
                            "Action": [
                                "logs:CreateLogGroup",
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                            ]
                        },
                        {
                            "Effect": "Allow",
                            "Resource": [
                                "arn:aws:s3:::codepipeline-${AWS::Region}-*"
                            ],
                            "Action": [
                                "s3:PutObject",
                                "s3:GetObject",
                                "s3:GetObjectVersion",
                                "s3:GetBucketAcl",
                                "s3:GetBucketLocation"
                            ]
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "codebuild:CreateReportGroup",
                                "codebuild:CreateReport",
                                "codebuild:UpdateReport",
                                "codebuild:BatchPutTestCases",
                                "codebuild:BatchPutCodeCoverages"
                            ],
                            "Resource": [
                                "arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:report-group/TestBuild-*"
                            ]
                        }
                    ]
                }

    IAMPolicy:
        Type: "AWS::IAM::Policy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"sts:AssumeRole\"],\"Resource\":[\"arn:*:iam::*:role/${IAMRole5}\"],\"Effect\":\"Allow\"}]}"
            Roles: 
              - !Ref IAMRole
            PolicyName: !Sub "AssumeRole-${IAMRole5}"

    IAMPolicy2:
        Type: "AWS::IAM::Policy"
        Properties:
            PolicyDocument: |
                {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "mobileanalytics:PutEvents",
                        "cognito-sync:*",
                        "cognito-identity:*"
                      ],
                      "Resource": [
                        "*"
                      ]
                    }
                  ]
                }
            Roles: 
              - !Ref IAMRole9
            PolicyName: !Sub "oneClick_${IAMRole9}_1677167492781"

    IAMPolicy3:
        Type: "AWS::IAM::Policy"
        Properties:
            PolicyDocument: |
                {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "mobileanalytics:PutEvents",
                        "cognito-sync:*"
                      ],
                      "Resource": [
                        "*"
                      ]
                    }
                  ]
                }
            Roles: 
              - !Ref IAMRole7
            PolicyName: !Sub "oneClick_${IAMRole7}_1677167492782"

    IAMPolicy4:
        Type: "AWS::IAM::Policy"
        Properties:
            PolicyDocument: |
                {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Sid": "VisualEditor0",
                            "Effect": "Allow",
                            "Action": "s3:*",
                            "Resource": "*"
                        }
                    ]
                }
            Roles: 
              - !Ref IAMRole9
            PolicyName: "S3AccessforCognitoAuthenticatedUsers"

    IAMPolicy5:
        Type: "AWS::IAM::Policy"
        Properties:
            PolicyDocument: !Sub |
                {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Sid": "S3Access",
                            "Effect": "Allow",
                            "Action": "s3:GetObject",
                            "Resource": "arn:aws:s3:::${S3Bucket5}/Import/*"
                        }
                    ]
                }
            Roles: 
              - !Ref IAMRole14
            PolicyName: "S3Bucket-access"

    IAMPolicy6:
        Type: "AWS::IAM::Policy"
        Properties:
            PolicyDocument: |
                {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Action": "textract:DetectDocumentText",
                            "Resource": "*",
                            "Effect": "Allow",
                            "Sid": "DetectDocumentText"
                        }
                    ]
                }
            Roles: 
              - !Ref IAMRole14
            PolicyName: "DetectDocumentText-access"

    IAMPolicy7:
        Type: "AWS::IAM::Policy"
        Properties:
            PolicyDocument: !Sub |
                {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Sid": "VisualEditor0",
                            "Effect": "Allow",
                            "Action": "lambda:InvokeFunction",
                            "Resource": "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${LambdaFunction}"
                        }
                    ]
                }
            Users: 
              - "Atif"
            PolicyName: "AtifLambdaPolicy"

    IAMInstanceProfile:
        Type: "AWS::IAM::InstanceProfile"
        Properties:
            Path: "/"
            InstanceProfileName: !Ref IAMRole2
            Roles: 
              - !Ref IAMRole2

    IAMAccessKey:
        Type: "AWS::IAM::AccessKey"
        Properties:
            Status: "Active"
            UserName: "aws-nuke"

    IAMAccessKey2:
        Type: "AWS::IAM::AccessKey"
        Properties:
            Status: "Active"
            UserName: "Former"

    IAMAccessKey3:
        Type: "AWS::IAM::AccessKey"
        Properties:
            Status: "Active"
            UserName: "student"

    EC2DHCPOptions:
        Type: "AWS::EC2::DHCPOptions"
        Properties:
            DomainName: !Sub "${AWS::Region}.compute.internal"

    EC2Instance:
        Type: "AWS::EC2::Instance"
        Properties:
            ImageId: "ami-0b71f75b9b4d041a4"
            InstanceType: "t2.micro"
            AvailabilityZone: !Sub "${AWS::Region}a"
            Tenancy: "default"
            SubnetId: "subnet-03f509d884da4b4b2"
            EbsOptimized: false
            SecurityGroupIds: 
              - !Ref EC2SecurityGroup2
            SourceDestCheck: true
            BlockDeviceMappings: 
              - 
                DeviceName: "/dev/xvda"
                Ebs: 
                    Encrypted: false
                    VolumeSize: 8
                    SnapshotId: "snap-0590e1e982822d830"
                    VolumeType: "gp2"
                    DeleteOnTermination: true
            UserData: "Q29udGVudC1UeXBlOiBtdWx0aXBhcnQvbWl4ZWQ7IGJvdW5kYXJ5PSI9PT09PT09PT09PT09PT01MTg5MDY1Mzc3MjIyODk4NDA3PT0iCk1JTUUtVmVyc2lvbjogMS4wCgotLT09PT09PT09PT09PT09PTUxODkwNjUzNzcyMjI4OTg0MDc9PQpDb250ZW50LVR5cGU6IHRleHQvY2xvdWQtY29uZmlnOyBjaGFyc2V0PSJ1cy1hc2NpaSIKTUlNRS1WZXJzaW9uOiAxLjAKQ29udGVudC1UcmFuc2Zlci1FbmNvZGluZzogN2JpdApDb250ZW50LURpc3Bvc2l0aW9uOiBhdHRhY2htZW50OyBmaWxlbmFtZT0iY2xvdWQtY29uZmlnLnR4dCIKCiNjbG91ZC1jb25maWcKcmVwb191cGdyYWRlOiBub25lCnJlcG9fcmVsZWFzZXZlcjogMi4wCmNsb3VkX2ZpbmFsX21vZHVsZXM6CiAtIFtzY3JpcHRzLXVzZXIsIGFsd2F5c10KCi0tPT09PT09PT09PT09PT09NTE4OTA2NTM3NzIyMjg5ODQwNz09CkNvbnRlbnQtVHlwZTogdGV4dC94LXNoZWxsc2NyaXB0OyBjaGFyc2V0PSJ1cy1hc2NpaSIKTUlNRS1WZXJzaW9uOiAxLjAKQ29udGVudC1UcmFuc2Zlci1FbmNvZGluZzogN2JpdApDb250ZW50LURpc3Bvc2l0aW9uOiBhdHRhY2htZW50OyBmaWxlbmFtZT0idXNlci1kYXRhLnR4dCIKCiMhL2Jpbi9iYXNoCmV4ZWMgPiA+KHRlZSAtYSAvdmFyL2xvZy9lYi1jZm4taW5pdC5sb2d8bG9nZ2VyIC10IFtlYi1jZm4taW5pdF0gLXMgMj4vZGV2L2NvbnNvbGUpIDI+JjEKZWNobyBbYGRhdGUgLXUgKyIlWS0lbS0lZFQlSDolTTolU1oiYF0gU3RhcnRlZCBFQiBVc2VyIERhdGEKc2V0IC14CgoKZnVuY3Rpb24gc2xlZXBfZGVsYXkgCnsKICBpZiAoKCAkU0xFRVBfVElNRSA8ICRTTEVFUF9USU1FX01BWCApKTsgdGhlbiAKICAgIGVjaG8gU2xlZXBpbmcgJFNMRUVQX1RJTUUKICAgIHNsZWVwICRTTEVFUF9USU1FICAKICAgIFNMRUVQX1RJTUU9JCgoJFNMRUVQX1RJTUUgKiAyKSkgCiAgZWxzZSAKICAgIGVjaG8gU2xlZXBpbmcgJFNMRUVQX1RJTUVfTUFYICAKICAgIHNsZWVwICRTTEVFUF9USU1FX01BWCAgCiAgZmkKfQoKIyBFeGVjdXRpbmcgYm9vdHN0cmFwIHNjcmlwdApTTEVFUF9USU1FPTIKU0xFRVBfVElNRV9NQVg9MzYwMAp3aGlsZSB0cnVlOyBkbyAKICBjdXJsIGh0dHBzOi8vZWxhc3RpY2JlYW5zdGFsay1wbGF0Zm9ybS1hc3NldHMtdXMtd2VzdC0yLnMzLnVzLXdlc3QtMi5hbWF6b25hd3MuY29tL3N0YWxrcy9lYl9ub2RlanMxNl9hbWF6b25fbGludXhfMl8xLjAuMTg1NC4wXzIwMjMwMTI3MDIwODA2L2xpYi9Vc2VyRGF0YVNjcmlwdC5zaCA+IC90bXAvZWJib290c3RyYXAuc2ggCiAgUkVTVUxUPSQ/CiAgaWYgW1sgIiRSRVNVTFQiIC1uZSAwIF1dOyB0aGVuIAogICAgc2xlZXBfZGVsYXkgCiAgZWxzZQogICAgL2Jpbi9iYXNoIC90bXAvZWJib290c3RyYXAuc2ggICAgICdodHRwczovL2Nsb3VkZm9ybWF0aW9uLXdhaXRjb25kaXRpb24tdXMtd2VzdC0yLnMzLXVzLXdlc3QtMi5hbWF6b25hd3MuY29tL2FybiUzQWF3cyUzQWNsb3VkZm9ybWF0aW9uJTNBdXMtd2VzdC0yJTNBNzYzODg4ODIzMTM1JTNBc3RhY2svYXdzZWItZS1ueW0yOGhldjhqLXN0YWNrLzk0OTI2ZWUwLWI2ZDQtMTFlZC1iNmZiLTBhMjIxNGNhYWU4Yi9BV1NFQkluc3RhbmNlTGF1bmNoV2FpdEhhbmRsZT9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1EYXRlPTIwMjMwMjI3VDE5MjYxM1omWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JlgtQW16LUV4cGlyZXM9ODYzOTkmWC1BbXotQ3JlZGVudGlhbD1BS0lBSkJKU1dTVzZOTFI2N042QSUyRjIwMjMwMjI3JTJGdXMtd2VzdC0yJTJGczMlMkZhd3M0X3JlcXVlc3QmWC1BbXotU2lnbmF0dXJlPWUzN2E2NTNlZjkwZjFiOWRjMTc5YzJjMDRiNGFkZjNhZjZiMTBiNmEwOWU0ZTgyNWYwNDAyNWZhZDdiZTYzNWInICAgICdhcm46YXdzOmNsb3VkZm9ybWF0aW9uOnVzLXdlc3QtMjo3NjM4ODg4MjMxMzU6c3RhY2svYXdzZWItZS1ueW0yOGhldjhqLXN0YWNrLzk0OTI2ZWUwLWI2ZDQtMTFlZC1iNmZiLTBhMjIxNGNhYWU4YicgICAgJzkzOGY1Yzg5LWE3YjQtNDdlMy04NzQxLTEzM2JhYWZkODZlNicgICAgJ2h0dHBzOi8vZWxhc3RpY2JlYW5zdGFsay1oZWFsdGgudXMtd2VzdC0yLmFtYXpvbmF3cy5jb20nICAgICcnICAgICdodHRwczovL2VsYXN0aWNiZWFuc3RhbGstcGxhdGZvcm0tYXNzZXRzLXVzLXdlc3QtMi5zMy51cy13ZXN0LTIuYW1hem9uYXdzLmNvbS9zdGFsa3MvZWJfbm9kZWpzMTZfYW1hem9uX2xpbnV4XzJfMS4wLjE4NTQuMF8yMDIzMDEyNzAyMDgwNicgICAgJ3VzLXdlc3QtMicKICAgIFJFU1VMVD0kPwogICAgaWYgW1sgIiRSRVNVTFQiIC1uZSAwIF1dOyB0aGVuIAogICAgICBzbGVlcF9kZWxheSAKICAgIGVsc2UgCiAgICAgIGV4aXQgMCAgCiAgICBmaSAKICBmaSAKZG9uZQoKLS09PT09PT09PT09PT09PT01MTg5MDY1Mzc3MjIyODk4NDA3PT0tLSA="
            IamInstanceProfile: !Ref IAMRole2
            Tags: 
              - 
                Key: "elasticbeanstalk:environment-id"
                Value: "e-nym28hev8j"
              - 
                Key: "elasticbeanstalk:environment-name"
                Value: "Nodetest-env"
              - 
                Key: "Name"
                Value: "Nodetest-env"
            HibernationOptions: 
                Configured: false
            EnclaveOptions: 
                Enabled: false

    EC2Instance2:
        Type: "AWS::EC2::Instance"
        Properties:
            ImageId: "ami-0f1a5f5ada0e7da53"
            InstanceType: "t2.micro"
            KeyName: "WebServerTest"
            AvailabilityZone: !Sub "${AWS::Region}b"
            Tenancy: "default"
            SubnetId: "subnet-0b878d962b66b34e2"
            EbsOptimized: false
            SecurityGroupIds: 
              - !Ref EC2SecurityGroup3
            SourceDestCheck: true
            BlockDeviceMappings: 
              - 
                DeviceName: "/dev/xvda"
                Ebs: 
                    Encrypted: false
                    VolumeSize: 8
                    SnapshotId: "snap-085f2938a03cd4a46"
                    VolumeType: "gp2"
                    DeleteOnTermination: true
            UserData: "IyEvYmluL2Jhc2gKIyBVc2UgdGhpcyBmb3IgeW91ciB1c2VyIGRhdGEgKHNjcmlwdCBmcm9tIHRvcCB0byBib3R0b20pCiMgaW5zdGFsbCBodHRwZCAoTGludXggMiB2ZXJzaW9uKQp5dW0gdXBkYXRlIC15Cnl1bSBpbnN0YWxsIC15IGh0dHBkCnN5c3RlbWN0bCBzdGFydCBodHRwZApzeXN0ZW1jdGwgZW5hYmxlIGh0dHBk"
            Tags: 
              - 
                Key: "Name"
                Value: "WebServer"
            HibernationOptions: 
                Configured: false
            EnclaveOptions: 
                Enabled: false

    ElasticLoadBalancingV2LoadBalancer:
        Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
        Properties:
            Name: "awseb-AWSEB-CPBFL2EFLK6Q"
            Scheme: "internet-facing"
            Type: "application"
            Subnets: 
              - "subnet-007a328c5f662259c"
              - "subnet-03f509d884da4b4b2"
              - "subnet-0b878d962b66b34e2"
              - "subnet-0cd80ac23c22f34c6"
            SecurityGroups: 
              - !Ref EC2SecurityGroup
            IpAddressType: "ipv4"
            LoadBalancerAttributes: 
              - 
                Key: "access_logs.s3.enabled"
                Value: "false"
              - 
                Key: "idle_timeout.timeout_seconds"
                Value: "60"
              - 
                Key: "deletion_protection.enabled"
                Value: "false"
              - 
                Key: "routing.http2.enabled"
                Value: "true"
              - 
                Key: "routing.http.drop_invalid_header_fields.enabled"
                Value: "false"
              - 
                Key: "routing.http.xff_client_port.enabled"
                Value: "false"
              - 
                Key: "routing.http.preserve_host_header.enabled"
                Value: "false"
              - 
                Key: "routing.http.xff_header_processing.mode"
                Value: "append"
              - 
                Key: "load_balancing.cross_zone.enabled"
                Value: "true"
              - 
                Key: "routing.http.desync_mitigation_mode"
                Value: "defensive"
              - 
                Key: "waf.fail_open.enabled"
                Value: "false"
              - 
                Key: "routing.http.x_amzn_tls_version_and_cipher_suite.enabled"
                Value: "false"

    ElasticLoadBalancingV2Listener:
        Type: "AWS::ElasticLoadBalancingV2::Listener"
        Properties:
            LoadBalancerArn: !Ref ElasticLoadBalancingV2LoadBalancer
            Port: 80
            Protocol: "HTTP"
            DefaultActions: 
              - 
                TargetGroupArn: !Ref ElasticLoadBalancingV2TargetGroup
                Type: "forward"

    AutoScalingAutoScalingGroup:
        Type: "AWS::AutoScaling::AutoScalingGroup"
        Properties:
            AutoScalingGroupName: "awseb-e-nym28hev8j-stack-AWSEBAutoScalingGroup-30K8PVDX5GIK"
            LaunchTemplate: 
                LaunchTemplateId: !Ref EC2LaunchTemplate
                LaunchTemplateName: "AWSEBEC2LaunchTemplate_GcFGjt6MEi0c"
                Version: "1"
            MinSize: 1
            MaxSize: 4
            DesiredCapacity: 1
            Cooldown: 360
            AvailabilityZones: 
              - !GetAtt EC2Instance.AvailabilityZone
              - !GetAtt EC2Instance2.AvailabilityZone
              - !Sub "${AWS::Region}c"
            TargetGroupARNs: 
              - !Ref ElasticLoadBalancingV2TargetGroup
            HealthCheckType: "EC2"
            HealthCheckGracePeriod: 0
            VPCZoneIdentifier: 
              - ""
            TerminationPolicies: 
              - "Default"
            ServiceLinkedRoleARN: !Sub "arn:aws:iam::${AWS::AccountId}:role/aws-service-role/autoscaling.amazonaws.com/AWSServiceRoleForAutoScaling"
            Tags: 
              - 
                Key: "Name"
                Value: "Nodetest-env"
                PropagateAtLaunch: true
              - 
                Key: "elasticbeanstalk:environment-id"
                Value: "e-nym28hev8j"
                PropagateAtLaunch: true
              - 
                Key: "elasticbeanstalk:environment-name"
                Value: "Nodetest-env"
                PropagateAtLaunch: true
            NewInstancesProtectedFromScaleIn: false
            CapacityRebalance: false

    AutoScalingScalingPolicy:
        Type: "AWS::AutoScaling::ScalingPolicy"
        Properties:
            AutoScalingGroupName: !Ref AutoScalingAutoScalingGroup
            PolicyType: "SimpleScaling"
            AdjustmentType: "ChangeInCapacity"
            ScalingAdjustment: -1

    AutoScalingScalingPolicy2:
        Type: "AWS::AutoScaling::ScalingPolicy"
        Properties:
            AutoScalingGroupName: !Ref AutoScalingAutoScalingGroup
            PolicyType: "SimpleScaling"
            AdjustmentType: "ChangeInCapacity"
            ScalingAdjustment: 1

    EC2SecurityGroup:
        Type: "AWS::EC2::SecurityGroup"
        Properties:
            GroupDescription: "Elastic Beanstalk created security group used when no ELB security groups are specified during ELB creation"
            GroupName: "awseb-e-nym28hev8j-stack-AWSEBLoadBalancerSecurityGroup-1ANVQULU9NJFP"
            Tags: 
              - 
                Key: "Name"
                Value: "Nodetest-env"
              - 
                Key: "elasticbeanstalk:environment-id"
                Value: "e-nym28hev8j"
              - 
                Key: "elasticbeanstalk:environment-name"
                Value: "Nodetest-env"
            VpcId: "vpc-0a3ca9b48fdee1bde"
            SecurityGroupIngress: 
              - 
                CidrIp: "0.0.0.0/0"
                FromPort: 80
                IpProtocol: "tcp"
                ToPort: 80
            SecurityGroupEgress: 
              - 
                CidrIp: "0.0.0.0/0"
                FromPort: 80
                IpProtocol: "tcp"
                ToPort: 80

    EC2SecurityGroup2:
        Type: "AWS::EC2::SecurityGroup"
        Properties:
            GroupDescription: "SecurityGroup for ElasticBeanstalk environment."
            GroupName: "awseb-e-nym28hev8j-stack-AWSEBSecurityGroup-11EQYAV8WOXN7"
            Tags: 
              - 
                Key: "elasticbeanstalk:environment-name"
                Value: "Nodetest-env"
              - 
                Key: "Name"
                Value: "Nodetest-env"
              - 
                Key: "elasticbeanstalk:environment-id"
                Value: "e-nym28hev8j"
            VpcId: "vpc-0a3ca9b48fdee1bde"
            SecurityGroupIngress: 
              - 
                SourceSecurityGroupId: !Sub "${ElasticLoadBalancingV2LoadBalancer.SecurityGroups}"
                SourceSecurityGroupOwnerId: !Ref AWS::AccountId
                FromPort: 80
                IpProtocol: "tcp"
                ToPort: 80
            SecurityGroupEgress: 
              - 
                CidrIp: "0.0.0.0/0"
                IpProtocol: "-1"

    EC2SecurityGroup3:
        Type: "AWS::EC2::SecurityGroup"
        Properties:
            GroupDescription: "launch-wizard-1 created 2023-02-21T20:24:28.323Z"
            GroupName: "launch-wizard-1"
            VpcId: "vpc-0a3ca9b48fdee1bde"
            SecurityGroupIngress: 
              - 
                CidrIp: "0.0.0.0/0"
                FromPort: 80
                IpProtocol: "tcp"
                ToPort: 80
              - 
                CidrIp: "0.0.0.0/0"
                FromPort: 22
                IpProtocol: "tcp"
                ToPort: 22
              - 
                CidrIp: "0.0.0.0/0"
                FromPort: 443
                IpProtocol: "tcp"
                ToPort: 443
            SecurityGroupEgress: 
              - 
                CidrIp: "0.0.0.0/0"
                IpProtocol: "-1"

    EC2LaunchTemplate:
        Type: "AWS::EC2::LaunchTemplate"
        Properties:
            LaunchTemplateName: "AWSEBEC2LaunchTemplate_GcFGjt6MEi0c"
            LaunchTemplateData: 
                SecurityGroups: 
                  - "awseb-e-nym28hev8j-stack-AWSEBSecurityGroup-11EQYAV8WOXN7"
                UserData: "Q29udGVudC1UeXBlOiBtdWx0aXBhcnQvbWl4ZWQ7IGJvdW5kYXJ5PSI9PT09PT09PT09PT09PT01MTg5MDY1Mzc3MjIyODk4NDA3PT0iCk1JTUUtVmVyc2lvbjogMS4wCgotLT09PT09PT09PT09PT09PTUxODkwNjUzNzcyMjI4OTg0MDc9PQpDb250ZW50LVR5cGU6IHRleHQvY2xvdWQtY29uZmlnOyBjaGFyc2V0PSJ1cy1hc2NpaSIKTUlNRS1WZXJzaW9uOiAxLjAKQ29udGVudC1UcmFuc2Zlci1FbmNvZGluZzogN2JpdApDb250ZW50LURpc3Bvc2l0aW9uOiBhdHRhY2htZW50OyBmaWxlbmFtZT0iY2xvdWQtY29uZmlnLnR4dCIKCiNjbG91ZC1jb25maWcKcmVwb191cGdyYWRlOiBub25lCnJlcG9fcmVsZWFzZXZlcjogMi4wCmNsb3VkX2ZpbmFsX21vZHVsZXM6CiAtIFtzY3JpcHRzLXVzZXIsIGFsd2F5c10KCi0tPT09PT09PT09PT09PT09NTE4OTA2NTM3NzIyMjg5ODQwNz09CkNvbnRlbnQtVHlwZTogdGV4dC94LXNoZWxsc2NyaXB0OyBjaGFyc2V0PSJ1cy1hc2NpaSIKTUlNRS1WZXJzaW9uOiAxLjAKQ29udGVudC1UcmFuc2Zlci1FbmNvZGluZzogN2JpdApDb250ZW50LURpc3Bvc2l0aW9uOiBhdHRhY2htZW50OyBmaWxlbmFtZT0idXNlci1kYXRhLnR4dCIKCiMhL2Jpbi9iYXNoCmV4ZWMgPiA+KHRlZSAtYSAvdmFyL2xvZy9lYi1jZm4taW5pdC5sb2d8bG9nZ2VyIC10IFtlYi1jZm4taW5pdF0gLXMgMj4vZGV2L2NvbnNvbGUpIDI+JjEKZWNobyBbYGRhdGUgLXUgKyIlWS0lbS0lZFQlSDolTTolU1oiYF0gU3RhcnRlZCBFQiBVc2VyIERhdGEKc2V0IC14CgoKZnVuY3Rpb24gc2xlZXBfZGVsYXkgCnsKICBpZiAoKCAkU0xFRVBfVElNRSA8ICRTTEVFUF9USU1FX01BWCApKTsgdGhlbiAKICAgIGVjaG8gU2xlZXBpbmcgJFNMRUVQX1RJTUUKICAgIHNsZWVwICRTTEVFUF9USU1FICAKICAgIFNMRUVQX1RJTUU9JCgoJFNMRUVQX1RJTUUgKiAyKSkgCiAgZWxzZSAKICAgIGVjaG8gU2xlZXBpbmcgJFNMRUVQX1RJTUVfTUFYICAKICAgIHNsZWVwICRTTEVFUF9USU1FX01BWCAgCiAgZmkKfQoKIyBFeGVjdXRpbmcgYm9vdHN0cmFwIHNjcmlwdApTTEVFUF9USU1FPTIKU0xFRVBfVElNRV9NQVg9MzYwMAp3aGlsZSB0cnVlOyBkbyAKICBjdXJsIGh0dHBzOi8vZWxhc3RpY2JlYW5zdGFsay1wbGF0Zm9ybS1hc3NldHMtdXMtd2VzdC0yLnMzLnVzLXdlc3QtMi5hbWF6b25hd3MuY29tL3N0YWxrcy9lYl9ub2RlanMxNl9hbWF6b25fbGludXhfMl8xLjAuMTg1NC4wXzIwMjMwMTI3MDIwODA2L2xpYi9Vc2VyRGF0YVNjcmlwdC5zaCA+IC90bXAvZWJib290c3RyYXAuc2ggCiAgUkVTVUxUPSQ/CiAgaWYgW1sgIiRSRVNVTFQiIC1uZSAwIF1dOyB0aGVuIAogICAgc2xlZXBfZGVsYXkgCiAgZWxzZQogICAgL2Jpbi9iYXNoIC90bXAvZWJib290c3RyYXAuc2ggICAgICdodHRwczovL2Nsb3VkZm9ybWF0aW9uLXdhaXRjb25kaXRpb24tdXMtd2VzdC0yLnMzLXVzLXdlc3QtMi5hbWF6b25hd3MuY29tL2FybiUzQWF3cyUzQWNsb3VkZm9ybWF0aW9uJTNBdXMtd2VzdC0yJTNBNzYzODg4ODIzMTM1JTNBc3RhY2svYXdzZWItZS1ueW0yOGhldjhqLXN0YWNrLzk0OTI2ZWUwLWI2ZDQtMTFlZC1iNmZiLTBhMjIxNGNhYWU4Yi9BV1NFQkluc3RhbmNlTGF1bmNoV2FpdEhhbmRsZT9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1EYXRlPTIwMjMwMjI3VDE5MjYxM1omWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JlgtQW16LUV4cGlyZXM9ODYzOTkmWC1BbXotQ3JlZGVudGlhbD1BS0lBSkJKU1dTVzZOTFI2N042QSUyRjIwMjMwMjI3JTJGdXMtd2VzdC0yJTJGczMlMkZhd3M0X3JlcXVlc3QmWC1BbXotU2lnbmF0dXJlPWUzN2E2NTNlZjkwZjFiOWRjMTc5YzJjMDRiNGFkZjNhZjZiMTBiNmEwOWU0ZTgyNWYwNDAyNWZhZDdiZTYzNWInICAgICdhcm46YXdzOmNsb3VkZm9ybWF0aW9uOnVzLXdlc3QtMjo3NjM4ODg4MjMxMzU6c3RhY2svYXdzZWItZS1ueW0yOGhldjhqLXN0YWNrLzk0OTI2ZWUwLWI2ZDQtMTFlZC1iNmZiLTBhMjIxNGNhYWU4YicgICAgJzkzOGY1Yzg5LWE3YjQtNDdlMy04NzQxLTEzM2JhYWZkODZlNicgICAgJ2h0dHBzOi8vZWxhc3RpY2JlYW5zdGFsay1oZWFsdGgudXMtd2VzdC0yLmFtYXpvbmF3cy5jb20nICAgICcnICAgICdodHRwczovL2VsYXN0aWNiZWFuc3RhbGstcGxhdGZvcm0tYXNzZXRzLXVzLXdlc3QtMi5zMy51cy13ZXN0LTIuYW1hem9uYXdzLmNvbS9zdGFsa3MvZWJfbm9kZWpzMTZfYW1hem9uX2xpbnV4XzJfMS4wLjE4NTQuMF8yMDIzMDEyNzAyMDgwNicgICAgJ3VzLXdlc3QtMicKICAgIFJFU1VMVD0kPwogICAgaWYgW1sgIiRSRVNVTFQiIC1uZSAwIF1dOyB0aGVuIAogICAgICBzbGVlcF9kZWxheSAKICAgIGVsc2UgCiAgICAgIGV4aXQgMCAgCiAgICBmaSAKICBmaSAKZG9uZQoKLS09PT09PT09PT09PT09PT01MTg5MDY1Mzc3MjIyODk4NDA3PT0tLSA="
                IamInstanceProfile: 
                    Name: !Ref IAMRole2
                ImageId: "ami-0b71f75b9b4d041a4"
                InstanceType: "t2.micro"
                Monitoring: 
                    Enabled: false
                MetadataOptions: 
                    HttpPutResponseHopLimit: 1
                    HttpTokens: "required"

    ElasticLoadBalancingV2TargetGroup:
        Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
        Properties:
            HealthCheckIntervalSeconds: 15
            HealthCheckPath: "/"
            Port: 80
            Protocol: "HTTP"
            HealthCheckPort: "traffic-port"
            HealthCheckProtocol: "HTTP"
            HealthCheckTimeoutSeconds: 5
            UnhealthyThresholdCount: 5
            TargetType: "instance"
            Matcher: 
                HttpCode: "200"
            HealthyThresholdCount: 3
            VpcId: "vpc-0a3ca9b48fdee1bde"
            Name: "awseb-AWSEB-DGYFOA4ETZXJ"
            HealthCheckEnabled: true
            TargetGroupAttributes: 
              - 
                Key: "target_group_health.unhealthy_state_routing.minimum_healthy_targets.count"
                Value: "1"
              - 
                Key: "stickiness.enabled"
                Value: "false"
              - 
                Key: "target_group_health.unhealthy_state_routing.minimum_healthy_targets.percentage"
                Value: "off"
              - 
                Key: "deregistration_delay.timeout_seconds"
                Value: "20"
              - 
                Key: "target_group_health.dns_failover.minimum_healthy_targets.count"
                Value: "1"
              - 
                Key: "stickiness.app_cookie.cookie_name"
                Value: ""
              - 
                Key: "stickiness.type"
                Value: "lb_cookie"
              - 
                Key: "stickiness.lb_cookie.duration_seconds"
                Value: "86400"
              - 
                Key: "slow_start.duration_seconds"
                Value: "0"
              - 
                Key: "stickiness.app_cookie.duration_seconds"
                Value: "86400"
              - 
                Key: "target_group_health.dns_failover.minimum_healthy_targets.percentage"
                Value: "off"
              - 
                Key: "load_balancing.cross_zone.enabled"
                Value: "use_load_balancer_configuration"
              - 
                Key: "load_balancing.algorithm.type"
                Value: "round_robin"
            Targets: 
              - 
                Id: !Ref EC2Instance
                Port: 80

    EC2Volume:
        Type: "AWS::EC2::Volume"
        Properties:
            AvailabilityZone: !GetAtt EC2Instance.AvailabilityZone
            Encrypted: false
            Size: 8
            VolumeType: "gp2"
            SnapshotId: "snap-0590e1e982822d830"
            MultiAttachEnabled: false

    EC2Volume2:
        Type: "AWS::EC2::Volume"
        Properties:
            AvailabilityZone: !GetAtt EC2Instance2.AvailabilityZone
            Encrypted: false
            Size: 8
            VolumeType: "gp2"
            SnapshotId: "snap-085f2938a03cd4a46"
            MultiAttachEnabled: false

    EC2VolumeAttachment:
        Type: "AWS::EC2::VolumeAttachment"
        Properties:
            VolumeId: !Ref EC2Volume
            InstanceId: !Ref EC2Instance
            Device: "/dev/xvda"

    EC2VolumeAttachment2:
        Type: "AWS::EC2::VolumeAttachment"
        Properties:
            VolumeId: !Ref EC2Volume2
            InstanceId: !Ref EC2Instance2
            Device: "/dev/xvda"

    EC2NetworkInterface:
        Type: "AWS::EC2::NetworkInterface"
        Properties:
            Description: !Sub "ELB app/${ElasticLoadBalancingV2LoadBalancer.LoadBalancerName}/19c8f5851a7f4cba"
            PrivateIpAddress: "172.31.9.169"
            PrivateIpAddresses: 
              - 
                PrivateIpAddress: "172.31.9.169"
                Primary: true
            SubnetId: "subnet-0cd80ac23c22f34c6"
            SourceDestCheck: true
            GroupSet: 
              - !Sub "${ElasticLoadBalancingV2LoadBalancer.SecurityGroups}"

    EC2NetworkInterface2:
        Type: "AWS::EC2::NetworkInterface"
        Properties:
            Description: ""
            PrivateIpAddress: !GetAtt EC2Instance2.PrivateIp
            PrivateIpAddresses: 
              - 
                PrivateIpAddress: !GetAtt EC2Instance2.PrivateIp
                Primary: true
            SubnetId: "subnet-0b878d962b66b34e2"
            SourceDestCheck: true
            GroupSet: 
              - !Ref EC2SecurityGroup3

    EC2NetworkInterface3:
        Type: "AWS::EC2::NetworkInterface"
        Properties:
            Description: !Sub "ELB app/${ElasticLoadBalancingV2LoadBalancer.LoadBalancerName}/19c8f5851a7f4cba"
            PrivateIpAddress: "172.31.37.20"
            PrivateIpAddresses: 
              - 
                PrivateIpAddress: "172.31.37.20"
                Primary: true
            SubnetId: "subnet-03f509d884da4b4b2"
            SourceDestCheck: true
            GroupSet: 
              - !Sub "${ElasticLoadBalancingV2LoadBalancer.SecurityGroups}"

    EC2NetworkInterface4:
        Type: "AWS::EC2::NetworkInterface"
        Properties:
            Description: ""
            PrivateIpAddress: !GetAtt EC2Instance.PrivateIp
            PrivateIpAddresses: 
              - 
                PrivateIpAddress: !GetAtt EC2Instance.PrivateIp
                Primary: true
            SubnetId: "subnet-03f509d884da4b4b2"
            SourceDestCheck: true
            GroupSet: 
              - !Ref EC2SecurityGroup2

    EC2NetworkInterfaceAttachment:
        Type: "AWS::EC2::NetworkInterfaceAttachment"
        Properties:
            NetworkInterfaceId: "eni-01e628041f0868671"
            DeviceIndex: 0
            InstanceId: !Ref EC2Instance2
            DeleteOnTermination: true

    EC2NetworkInterfaceAttachment2:
        Type: "AWS::EC2::NetworkInterfaceAttachment"
        Properties:
            NetworkInterfaceId: "eni-0946a4c91af7aece8"
            DeviceIndex: 0
            InstanceId: !Ref EC2Instance
            DeleteOnTermination: true

    EC2KeyPair:
        Type: "AWS::EC2::KeyPair"
        Properties:
            KeyName: "WebServerTest"
            KeyType: "rsa"

    LambdaFunction:
        Type: "AWS::Lambda::Function"
        Properties:
            Description: ""
            FunctionName: "Textrack2"
            Handler: "lambda_function.lambda_handler"
            Architectures: 
              - "x86_64"
            Code: 
                S3Bucket: !Sub "awslambda-${AWS::Region}-tasks"
                S3Key: !Sub "/snapshots/${AWS::AccountId}/Textrack2-10764f5a-24ed-4f2d-a37b-66610218fbf4"
                S3ObjectVersion: "msG2g14a5A6NPNUiEQUHkeyH3CgbYyhF"
            MemorySize: 128
            Role: !Sub "arn:aws:iam::${AWS::AccountId}:role/service-role/Textrack2-role-unz91j5u"
            Runtime: "python3.9"
            Timeout: 3
            TracingConfig: 
                Mode: "PassThrough"
            EphemeralStorage: 
                Size: 512

    LambdaFunction2:
        Type: "AWS::Lambda::Function"
        Properties:
            Description: "An Amazon S3 trigger that retrieves metadata for the object that has been updated."
            FunctionName: "textract-s3-to-json-function"
            Handler: "lambda_function.lambda_handler"
            Architectures: 
              - "x86_64"
            Code: 
                S3Bucket: !Sub "awslambda-${AWS::Region}-tasks"
                S3Key: !Sub "/snapshots/${AWS::AccountId}/textract-s3-to-json-function-297ba220-eaf1-4b19-b4f6-b669f5b41453"
                S3ObjectVersion: "X3boYqh8lvQOGEQ1QL4yXAS.CRcxPGmi"
            MemorySize: 128
            Role: !Sub "arn:aws:iam::${AWS::AccountId}:role/service-role/textract-s3-to-json-function-role-8zhhs6pm"
            Runtime: "python3.7"
            Timeout: 3
            TracingConfig: 
                Mode: "PassThrough"
            Layers: 
              - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:boto3-layer:5"
            EphemeralStorage: 
                Size: 512
            Tags: 
              - 
                Key: "lambda-console:blueprint"
                Value: "s3-get-object-python"

    LambdaFunction3:
        Type: "AWS::Lambda::Function"
        Properties:
            Description: ""
            FunctionName: "textractjsonv2"
            Handler: "lambda_function.lambda_handler"
            Architectures: 
              - "x86_64"
            Code: 
                S3Bucket: !Sub "awslambda-${AWS::Region}-tasks"
                S3Key: !Sub "/snapshots/${AWS::AccountId}/textractjsonv2-86387bf7-c16b-4692-8074-b63a8d3c9a84"
                S3ObjectVersion: "7DrXgx8hpEBvLEMT6F8.DwBZqZ1Xcy35"
            MemorySize: 128
            Role: !GetAtt IAMRole15.Arn
            Runtime: "python3.7"
            Timeout: 30
            TracingConfig: 
                Mode: "PassThrough"
            EphemeralStorage: 
                Size: 512

    LambdaFunction4:
        Type: "AWS::Lambda::Function"
        Properties:
            Description: "An Amazon S3 trigger that retrieves metadata for the object that has been updated."
            FunctionName: "s3-json-bulkinset-dynamodb"
            Handler: "lambda_function.lambda_handler"
            Architectures: 
              - "x86_64"
            Code: 
                S3Bucket: !Sub "awslambda-${AWS::Region}-tasks"
                S3Key: !Sub "/snapshots/${AWS::AccountId}/s3-json-bulkinset-dynamodb-15f2172d-35e5-49b9-bf42-48687e089354"
                S3ObjectVersion: "z_8uIpITbcpHanc1YH2_QPuMGUknsXUr"
            MemorySize: 128
            Role: !Sub "arn:aws:iam::${AWS::AccountId}:role/IAM-TechEx"
            Runtime: "python3.9"
            Timeout: 30
            TracingConfig: 
                Mode: "PassThrough"
            EphemeralStorage: 
                Size: 512
            Tags: 
              - 
                Key: "lambda-console:blueprint"
                Value: "s3-get-object-python"

    LambdaPermission:
        Type: "AWS::Lambda::Permission"
        Properties:
            Action: "lambda:InvokeFunction"
            FunctionName: !GetAtt LambdaFunction4.Arn
            Principal: "s3.amazonaws.com"
            SourceArn: !Sub "arn:aws:s3:::${S3Bucket3}"

    LambdaPermission2:
        Type: "AWS::Lambda::Permission"
        Properties:
            Action: "lambda:InvokeFunction"
            FunctionName: !GetAtt LambdaFunction3.Arn
            Principal: "s3.amazonaws.com"
            SourceArn: !Sub "arn:aws:s3:::${S3Bucket5}"

    LambdaLayerVersion:
        Type: "AWS::Lambda::LayerVersion"
        Properties:
            Description: ""
            CompatibleRuntimes: 
              - "python3.7"
            LayerName: "boto3-layer"
            Content: 
                S3Bucket: !Sub "awslambda-${AWS::Region}-layers"
                S3Key: !Sub "/snapshots/${AWS::AccountId}/boto3-layer-a19a505d-c8ba-4959-bb32-90c0686c983e"

    LambdaLayerVersion2:
        Type: "AWS::Lambda::LayerVersion"
        Properties:
            Description: ""
            CompatibleRuntimes: 
              - "python3.7"
            LayerName: "boto3-layer"
            Content: 
                S3Bucket: !Sub "awslambda-${AWS::Region}-layers"
                S3Key: !Sub "/snapshots/${AWS::AccountId}/boto3-layer-6367cf7d-5fba-49bd-9b92-1b7f81e92fb5"

    S3Bucket:
        Type: "AWS::S3::Bucket"
        Properties:
            BucketName: "codepipeline-artifact-stores"
            BucketEncryption: 
                ServerSideEncryptionConfiguration: 
                  - 
                    ServerSideEncryptionByDefault: 
                        SSEAlgorithm: "AES256"
                    BucketKeyEnabled: true

    S3Bucket2:
        Type: "AWS::S3::Bucket"
        Properties:
            BucketName: "s3-json-input-bucket-02"
            BucketEncryption: 
                ServerSideEncryptionConfiguration: 
                  - 
                    ServerSideEncryptionByDefault: 
                        SSEAlgorithm: "AES256"
                    BucketKeyEnabled: true

    S3Bucket3:
        Type: "AWS::S3::Bucket"
        Properties:
            BucketName: "s3-json-output-bucket-01"
            Tags: 
              - 
                Key: "Resource"
                Value: "s3 bucket"
            BucketEncryption: 
                ServerSideEncryptionConfiguration: 
                  - 
                    ServerSideEncryptionByDefault: 
                        SSEAlgorithm: "AES256"
                    BucketKeyEnabled: true
            NotificationConfiguration: 
                LambdaConfigurations: 
                  - 
                    Event: "s3:ObjectCreated:Put"
                    Filter: 
                        S3Key: 
                            Rules: 
                              - 
                                Name: "Suffix"
                                Value: ".json"
                    Function: !GetAtt LambdaFunction4.Arn

    S3Bucket4:
        Type: "AWS::S3::Bucket"
        Properties:
            BucketName: !Sub "elasticbeanstalk-${AWS::Region}-${AWS::AccountId}"
            BucketEncryption: 
                ServerSideEncryptionConfiguration: 
                  - 
                    ServerSideEncryptionByDefault: 
                        SSEAlgorithm: "AES256"
                    BucketKeyEnabled: false

    S3Bucket5:
        Type: "AWS::S3::Bucket"
        Properties:
            BucketName: "s3-json-input-bucket-01"
            Tags: 
              - 
                Key: "Resource"
                Value: "s3 bucket "
            BucketEncryption: 
                ServerSideEncryptionConfiguration: 
                  - 
                    ServerSideEncryptionByDefault: 
                        SSEAlgorithm: "AES256"
                    BucketKeyEnabled: true
            CorsConfiguration: 
                CorsRules: 
                  - 
                    AllowedHeaders: 
                      - "*"
                    AllowedMethods: 
                      - "PUT"
                      - "GET"
                      - "POST"
                      - "DELETE"
                      - "HEAD"
                    AllowedOrigins: 
                      - "*"
            NotificationConfiguration: 
                LambdaConfigurations: 
                  - 
                    Event: "s3:ObjectCreated:*"
                    Function: !GetAtt LambdaFunction3.Arn

    S3BucketPolicy:
        Type: "AWS::S3::BucketPolicy"
        Properties:
            Bucket: !Ref S3Bucket4
            PolicyDocument: 
                Version: "2008-10-17"
                Statement: 
                  - 
                    Sid: "eb-ad78f54a-f239-4c90-adda-49e5f56cb51e"
                    Effect: "Allow"
                    Principal: 
                        AWS: !GetAtt IAMRole2.Arn
                    Action: "s3:PutObject"
                    Resource: !Sub "arn:aws:s3:::${S3Bucket4}/resources/environments/logs/*"
                  - 
                    Sid: "eb-af163bf3-d27b-4712-b795-d1e33e331ca4"
                    Effect: "Allow"
                    Principal: 
                        AWS: !GetAtt IAMRole2.Arn
                    Action: 
                      - "s3:ListBucket"
                      - "s3:ListBucketVersions"
                      - "s3:GetObject"
                      - "s3:GetObjectVersion"
                    Resource: 
                      - !Sub "arn:aws:s3:::${S3Bucket4}"
                      - !Sub "arn:aws:s3:::${S3Bucket4}/resources/environments/*"
                  - 
                    Sid: "eb-58950a8c-feb6-11e2-89e0-0800277d041b"
                    Effect: "Deny"
                    Principal: 
                        AWS: "*"
                    Action: "s3:DeleteBucket"
                    Resource: !Sub "arn:aws:s3:::${S3Bucket4}"

    ElastiCacheUser:
        Type: "AWS::ElastiCache::User"
        Properties:
            UserId: "default"
            UserName: "default"
            Engine: "redis"
            AccessString: "on ~* +@all"
            NoPasswordRequired: true

    OpsWorksUserProfile:
        Type: "AWS::OpsWorks::UserProfile"
        Properties:
            AllowSelfManagement: false
            IamUserArn: !Sub "arn:aws:iam::${AWS::AccountId}:user/aws-nuke"
            SshUsername: "aws-nuke"

    OpsWorksUserProfile2:
        Type: "AWS::OpsWorks::UserProfile"
        Properties:
            AllowSelfManagement: false
            IamUserArn: !Sub "arn:aws:iam::${AWS::AccountId}:user/Former"
            SshUsername: "former"

    SNSTopic:
        Type: "AWS::SNS::Topic"
        Properties:
            DisplayName: ""
            TopicName: "AmazonTextractTopic1677186234790"

    SNSTopic2:
        Type: "AWS::SNS::Topic"
        Properties:
            DisplayName: ""
            TopicName: "AmazonTextractTopic1677186300877"

    SNSTopic3:
        Type: "AWS::SNS::Topic"
        Properties:
            DisplayName: ""
            TopicName: "AmazonTextractTopic1677186421191"

    SNSTopic4:
        Type: "AWS::SNS::Topic"
        Properties:
            DisplayName: ""
            TopicName: "AmazonTextractTopic1677269173347"

    SNSTopic5:
        Type: "AWS::SNS::Topic"
        Properties:
            DisplayName: ""
            TopicName: "AmazonTextractTopic1677269233606"

    SNSTopic6:
        Type: "AWS::SNS::Topic"
        Properties:
            DisplayName: ""
            TopicName: "AmazonTextractTopic1677271604840"

    SNSTopic7:
        Type: "AWS::SNS::Topic"
        Properties:
            DisplayName: ""
            TopicName: "AmazonTextractTopic1677269344682"

    SNSTopic8:
        Type: "AWS::SNS::Topic"
        Properties:
            DisplayName: ""
            TopicName: "AmazonTextractTopic1677271662006"

    SNSTopic9:
        Type: "AWS::SNS::Topic"
        Properties:
            DisplayName: ""
            TopicName: "AmazonTextractTopic1677271785961"

    SNSTopic10:
        Type: "AWS::SNS::Topic"
        Properties:
            DisplayName: ""
            TopicName: "AmazonTextractTopic1677373580576"

    SNSTopic11:
        Type: "AWS::SNS::Topic"
        Properties:
            DisplayName: ""
            TopicName: "AmazonTextractTopic1677373635830"

    SNSTopic12:
        Type: "AWS::SNS::Topic"
        Properties:
            DisplayName: ""
            TopicName: "AmazonTextractTopic1677373755858"

    SNSTopic13:
        Type: "AWS::SNS::Topic"
        Properties:
            DisplayName: ""
            TopicName: "AmazonTextractTopic1677380439647"

    SNSTopic14:
        Type: "AWS::SNS::Topic"
        Properties:
            DisplayName: ""
            TopicName: "AmazonTextractTopic1677380507928"

    SNSTopic15:
        Type: "AWS::SNS::Topic"
        Properties:
            DisplayName: ""
            TopicName: "AmazonTextractTopic1677380622207"

    SNSTopic16:
        Type: "AWS::SNS::Topic"
        Properties:
            DisplayName: ""
            TopicName: "AmazonTextractTopic1677381670186"

    SNSTopic17:
        Type: "AWS::SNS::Topic"
        Properties:
            DisplayName: ""
            TopicName: "AmazonTextractTopic1677381841422"

    SNSTopic18:
        Type: "AWS::SNS::Topic"
        Properties:
            DisplayName: ""
            TopicName: "AmazonTextractTopic1677381731440"

    SNSTopic19:
        Type: "AWS::SNS::Topic"
        Properties:
            DisplayName: ""
            TopicName: "AmazonTextractTopic1677469341685"

    SNSTopic20:
        Type: "AWS::SNS::Topic"
        Properties:
            DisplayName: ""
            TopicName: "AmazonTextractTopic1677469522057"

    SNSTopic21:
        Type: "AWS::SNS::Topic"
        Properties:
            DisplayName: ""
            TopicName: "AmazonTextractTopic1677520620108"

    SNSTopic22:
        Type: "AWS::SNS::Topic"
        Properties:
            DisplayName: ""
            TopicName: "AmazonTextractTopic1677469395871"

    SNSTopic23:
        Type: "AWS::SNS::Topic"
        Properties:
            DisplayName: ""
            TopicName: "AmazonTextractTopic1677520682842"

    SNSTopic24:
        Type: "AWS::SNS::Topic"
        Properties:
            DisplayName: ""
            TopicName: "AmazonTextractTopic1677520823020"

    SNSTopic25:
        Type: "AWS::SNS::Topic"
        Properties:
            DisplayName: ""
            TopicName: "AmazonTextractTopic1677520843400"

    SNSTopic26:
        Type: "AWS::SNS::Topic"
        Properties:
            DisplayName: ""
            TopicName: "AmazonTextractTopic1677520909450"

    SNSTopic27:
        Type: "AWS::SNS::Topic"
        Properties:
            DisplayName: ""
            TopicName: "AmazonTextractTopic1677520930309"

    SNSTopic28:
        Type: "AWS::SNS::Topic"
        Properties:
            DisplayName: ""
            TopicName: "AmazonTextractTopic1677521024658"

    SNSTopic29:
        Type: "AWS::SNS::Topic"
        Properties:
            DisplayName: ""
            TopicName: "AmazonTextractTopic1677522042704"

    SNSTopic30:
        Type: "AWS::SNS::Topic"
        Properties:
            DisplayName: ""
            TopicName: "AmazonTextractTopic1677522103892"

    SNSTopic31:
        Type: "AWS::SNS::Topic"
        Properties:
            DisplayName: ""
            TopicName: "AmazonTextractTopic1677522230963"

    SNSTopic32:
        Type: "AWS::SNS::Topic"
        Properties:
            DisplayName: ""
            TopicName: "AmazonTextractTopic1677522778661"

    SNSTopic33:
        Type: "AWS::SNS::Topic"
        Properties:
            DisplayName: ""
            TopicName: "AmazonTextractTopic1677522838860"

    SNSTopic34:
        Type: "AWS::SNS::Topic"
        Properties:
            DisplayName: ""
            TopicName: "AmazonTextractTopic1677522967825"

    SNSTopic35:
        Type: "AWS::SNS::Topic"
        Properties:
            DisplayName: ""
            TopicName: "AmazonTextractTopic1677523330413"

    SNSTopic36:
        Type: "AWS::SNS::Topic"
        Properties:
            DisplayName: ""
            TopicName: "AmazonTextractTopic1677523385694"

    SNSTopic37:
        Type: "AWS::SNS::Topic"
        Properties:
            DisplayName: ""
            TopicName: "AmazonTextractTopic1677523519807"

    SNSTopic38:
        Type: "AWS::SNS::Topic"
        Properties:
            DisplayName: ""
            TopicName: "AmazonTextractTopic1677524221585"

    SNSTopic39:
        Type: "AWS::SNS::Topic"
        Properties:
            DisplayName: ""
            TopicName: "AmazonTextractTopic1677524280870"

    SNSTopic40:
        Type: "AWS::SNS::Topic"
        Properties:
            DisplayName: ""
            TopicName: "AmazonTextractTopic1677524392910"

    SNSTopicPolicy:
        Type: "AWS::SNS::TopicPolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2008-10-17\",\"Id\":\"__default_policy_ID\",\"Statement\":[{\"Sid\":\"__default_statement_ID\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":[\"SNS:GetTopicAttributes\",\"SNS:SetTopicAttributes\",\"SNS:AddPermission\",\"SNS:RemovePermission\",\"SNS:DeleteTopic\",\"SNS:Subscribe\",\"SNS:ListSubscriptionsByTopic\",\"SNS:Publish\"],\"Resource\":\"${SNSTopic}\",\"Condition\":{\"StringEquals\":{\"AWS:SourceOwner\":\"${AWS::AccountId}\"}}}]}"
            Topics: 
              - !Ref SNSTopic

    SNSTopicPolicy2:
        Type: "AWS::SNS::TopicPolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2008-10-17\",\"Id\":\"__default_policy_ID\",\"Statement\":[{\"Sid\":\"__default_statement_ID\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":[\"SNS:GetTopicAttributes\",\"SNS:SetTopicAttributes\",\"SNS:AddPermission\",\"SNS:RemovePermission\",\"SNS:DeleteTopic\",\"SNS:Subscribe\",\"SNS:ListSubscriptionsByTopic\",\"SNS:Publish\"],\"Resource\":\"${SNSTopic2}\",\"Condition\":{\"StringEquals\":{\"AWS:SourceOwner\":\"${AWS::AccountId}\"}}}]}"
            Topics: 
              - !Ref SNSTopic2

    SNSTopicPolicy3:
        Type: "AWS::SNS::TopicPolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2008-10-17\",\"Id\":\"__default_policy_ID\",\"Statement\":[{\"Sid\":\"__default_statement_ID\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":[\"SNS:GetTopicAttributes\",\"SNS:SetTopicAttributes\",\"SNS:AddPermission\",\"SNS:RemovePermission\",\"SNS:DeleteTopic\",\"SNS:Subscribe\",\"SNS:ListSubscriptionsByTopic\",\"SNS:Publish\"],\"Resource\":\"${SNSTopic3}\",\"Condition\":{\"StringEquals\":{\"AWS:SourceOwner\":\"${AWS::AccountId}\"}}}]}"
            Topics: 
              - !Ref SNSTopic3

    SNSTopicPolicy4:
        Type: "AWS::SNS::TopicPolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2008-10-17\",\"Id\":\"__default_policy_ID\",\"Statement\":[{\"Sid\":\"__default_statement_ID\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":[\"SNS:GetTopicAttributes\",\"SNS:SetTopicAttributes\",\"SNS:AddPermission\",\"SNS:RemovePermission\",\"SNS:DeleteTopic\",\"SNS:Subscribe\",\"SNS:ListSubscriptionsByTopic\",\"SNS:Publish\"],\"Resource\":\"${SNSTopic4}\",\"Condition\":{\"StringEquals\":{\"AWS:SourceOwner\":\"${AWS::AccountId}\"}}}]}"
            Topics: 
              - !Ref SNSTopic4

    SNSTopicPolicy5:
        Type: "AWS::SNS::TopicPolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2008-10-17\",\"Id\":\"__default_policy_ID\",\"Statement\":[{\"Sid\":\"__default_statement_ID\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":[\"SNS:GetTopicAttributes\",\"SNS:SetTopicAttributes\",\"SNS:AddPermission\",\"SNS:RemovePermission\",\"SNS:DeleteTopic\",\"SNS:Subscribe\",\"SNS:ListSubscriptionsByTopic\",\"SNS:Publish\"],\"Resource\":\"${SNSTopic5}\",\"Condition\":{\"StringEquals\":{\"AWS:SourceOwner\":\"${AWS::AccountId}\"}}}]}"
            Topics: 
              - !Ref SNSTopic5

    SNSTopicPolicy6:
        Type: "AWS::SNS::TopicPolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2008-10-17\",\"Id\":\"__default_policy_ID\",\"Statement\":[{\"Sid\":\"__default_statement_ID\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":[\"SNS:GetTopicAttributes\",\"SNS:SetTopicAttributes\",\"SNS:AddPermission\",\"SNS:RemovePermission\",\"SNS:DeleteTopic\",\"SNS:Subscribe\",\"SNS:ListSubscriptionsByTopic\",\"SNS:Publish\"],\"Resource\":\"${SNSTopic6}\",\"Condition\":{\"StringEquals\":{\"AWS:SourceOwner\":\"${AWS::AccountId}\"}}}]}"
            Topics: 
              - !Ref SNSTopic6

    SNSTopicPolicy7:
        Type: "AWS::SNS::TopicPolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2008-10-17\",\"Id\":\"__default_policy_ID\",\"Statement\":[{\"Sid\":\"__default_statement_ID\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":[\"SNS:GetTopicAttributes\",\"SNS:SetTopicAttributes\",\"SNS:AddPermission\",\"SNS:RemovePermission\",\"SNS:DeleteTopic\",\"SNS:Subscribe\",\"SNS:ListSubscriptionsByTopic\",\"SNS:Publish\"],\"Resource\":\"${SNSTopic7}\",\"Condition\":{\"StringEquals\":{\"AWS:SourceOwner\":\"${AWS::AccountId}\"}}}]}"
            Topics: 
              - !Ref SNSTopic7

    SNSTopicPolicy8:
        Type: "AWS::SNS::TopicPolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2008-10-17\",\"Id\":\"__default_policy_ID\",\"Statement\":[{\"Sid\":\"__default_statement_ID\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":[\"SNS:GetTopicAttributes\",\"SNS:SetTopicAttributes\",\"SNS:AddPermission\",\"SNS:RemovePermission\",\"SNS:DeleteTopic\",\"SNS:Subscribe\",\"SNS:ListSubscriptionsByTopic\",\"SNS:Publish\"],\"Resource\":\"${SNSTopic8}\",\"Condition\":{\"StringEquals\":{\"AWS:SourceOwner\":\"${AWS::AccountId}\"}}}]}"
            Topics: 
              - !Ref SNSTopic8

    SNSTopicPolicy9:
        Type: "AWS::SNS::TopicPolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2008-10-17\",\"Id\":\"__default_policy_ID\",\"Statement\":[{\"Sid\":\"__default_statement_ID\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":[\"SNS:GetTopicAttributes\",\"SNS:SetTopicAttributes\",\"SNS:AddPermission\",\"SNS:RemovePermission\",\"SNS:DeleteTopic\",\"SNS:Subscribe\",\"SNS:ListSubscriptionsByTopic\",\"SNS:Publish\"],\"Resource\":\"${SNSTopic9}\",\"Condition\":{\"StringEquals\":{\"AWS:SourceOwner\":\"${AWS::AccountId}\"}}}]}"
            Topics: 
              - !Ref SNSTopic9

    SNSTopicPolicy10:
        Type: "AWS::SNS::TopicPolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2008-10-17\",\"Id\":\"__default_policy_ID\",\"Statement\":[{\"Sid\":\"__default_statement_ID\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":[\"SNS:GetTopicAttributes\",\"SNS:SetTopicAttributes\",\"SNS:AddPermission\",\"SNS:RemovePermission\",\"SNS:DeleteTopic\",\"SNS:Subscribe\",\"SNS:ListSubscriptionsByTopic\",\"SNS:Publish\"],\"Resource\":\"${SNSTopic10}\",\"Condition\":{\"StringEquals\":{\"AWS:SourceOwner\":\"${AWS::AccountId}\"}}}]}"
            Topics: 
              - !Ref SNSTopic10

    SNSTopicPolicy11:
        Type: "AWS::SNS::TopicPolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2008-10-17\",\"Id\":\"__default_policy_ID\",\"Statement\":[{\"Sid\":\"__default_statement_ID\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":[\"SNS:GetTopicAttributes\",\"SNS:SetTopicAttributes\",\"SNS:AddPermission\",\"SNS:RemovePermission\",\"SNS:DeleteTopic\",\"SNS:Subscribe\",\"SNS:ListSubscriptionsByTopic\",\"SNS:Publish\"],\"Resource\":\"${SNSTopic11}\",\"Condition\":{\"StringEquals\":{\"AWS:SourceOwner\":\"${AWS::AccountId}\"}}}]}"
            Topics: 
              - !Ref SNSTopic11

    SNSTopicPolicy12:
        Type: "AWS::SNS::TopicPolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2008-10-17\",\"Id\":\"__default_policy_ID\",\"Statement\":[{\"Sid\":\"__default_statement_ID\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":[\"SNS:GetTopicAttributes\",\"SNS:SetTopicAttributes\",\"SNS:AddPermission\",\"SNS:RemovePermission\",\"SNS:DeleteTopic\",\"SNS:Subscribe\",\"SNS:ListSubscriptionsByTopic\",\"SNS:Publish\"],\"Resource\":\"${SNSTopic12}\",\"Condition\":{\"StringEquals\":{\"AWS:SourceOwner\":\"${AWS::AccountId}\"}}}]}"
            Topics: 
              - !Ref SNSTopic12

    SNSTopicPolicy13:
        Type: "AWS::SNS::TopicPolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2008-10-17\",\"Id\":\"__default_policy_ID\",\"Statement\":[{\"Sid\":\"__default_statement_ID\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":[\"SNS:GetTopicAttributes\",\"SNS:SetTopicAttributes\",\"SNS:AddPermission\",\"SNS:RemovePermission\",\"SNS:DeleteTopic\",\"SNS:Subscribe\",\"SNS:ListSubscriptionsByTopic\",\"SNS:Publish\"],\"Resource\":\"${SNSTopic13}\",\"Condition\":{\"StringEquals\":{\"AWS:SourceOwner\":\"${AWS::AccountId}\"}}}]}"
            Topics: 
              - !Ref SNSTopic13

    SNSTopicPolicy14:
        Type: "AWS::SNS::TopicPolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2008-10-17\",\"Id\":\"__default_policy_ID\",\"Statement\":[{\"Sid\":\"__default_statement_ID\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":[\"SNS:GetTopicAttributes\",\"SNS:SetTopicAttributes\",\"SNS:AddPermission\",\"SNS:RemovePermission\",\"SNS:DeleteTopic\",\"SNS:Subscribe\",\"SNS:ListSubscriptionsByTopic\",\"SNS:Publish\"],\"Resource\":\"${SNSTopic14}\",\"Condition\":{\"StringEquals\":{\"AWS:SourceOwner\":\"${AWS::AccountId}\"}}}]}"
            Topics: 
              - !Ref SNSTopic14

    SNSTopicPolicy15:
        Type: "AWS::SNS::TopicPolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2008-10-17\",\"Id\":\"__default_policy_ID\",\"Statement\":[{\"Sid\":\"__default_statement_ID\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":[\"SNS:GetTopicAttributes\",\"SNS:SetTopicAttributes\",\"SNS:AddPermission\",\"SNS:RemovePermission\",\"SNS:DeleteTopic\",\"SNS:Subscribe\",\"SNS:ListSubscriptionsByTopic\",\"SNS:Publish\"],\"Resource\":\"${SNSTopic15}\",\"Condition\":{\"StringEquals\":{\"AWS:SourceOwner\":\"${AWS::AccountId}\"}}}]}"
            Topics: 
              - !Ref SNSTopic15

    SNSTopicPolicy16:
        Type: "AWS::SNS::TopicPolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2008-10-17\",\"Id\":\"__default_policy_ID\",\"Statement\":[{\"Sid\":\"__default_statement_ID\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":[\"SNS:GetTopicAttributes\",\"SNS:SetTopicAttributes\",\"SNS:AddPermission\",\"SNS:RemovePermission\",\"SNS:DeleteTopic\",\"SNS:Subscribe\",\"SNS:ListSubscriptionsByTopic\",\"SNS:Publish\"],\"Resource\":\"${SNSTopic16}\",\"Condition\":{\"StringEquals\":{\"AWS:SourceOwner\":\"${AWS::AccountId}\"}}}]}"
            Topics: 
              - !Ref SNSTopic16

    SNSTopicPolicy17:
        Type: "AWS::SNS::TopicPolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2008-10-17\",\"Id\":\"__default_policy_ID\",\"Statement\":[{\"Sid\":\"__default_statement_ID\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":[\"SNS:GetTopicAttributes\",\"SNS:SetTopicAttributes\",\"SNS:AddPermission\",\"SNS:RemovePermission\",\"SNS:DeleteTopic\",\"SNS:Subscribe\",\"SNS:ListSubscriptionsByTopic\",\"SNS:Publish\"],\"Resource\":\"${SNSTopic17}\",\"Condition\":{\"StringEquals\":{\"AWS:SourceOwner\":\"${AWS::AccountId}\"}}}]}"
            Topics: 
              - !Ref SNSTopic17

    SNSTopicPolicy18:
        Type: "AWS::SNS::TopicPolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2008-10-17\",\"Id\":\"__default_policy_ID\",\"Statement\":[{\"Sid\":\"__default_statement_ID\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":[\"SNS:GetTopicAttributes\",\"SNS:SetTopicAttributes\",\"SNS:AddPermission\",\"SNS:RemovePermission\",\"SNS:DeleteTopic\",\"SNS:Subscribe\",\"SNS:ListSubscriptionsByTopic\",\"SNS:Publish\"],\"Resource\":\"${SNSTopic18}\",\"Condition\":{\"StringEquals\":{\"AWS:SourceOwner\":\"${AWS::AccountId}\"}}}]}"
            Topics: 
              - !Ref SNSTopic18

    SNSTopicPolicy19:
        Type: "AWS::SNS::TopicPolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2008-10-17\",\"Id\":\"__default_policy_ID\",\"Statement\":[{\"Sid\":\"__default_statement_ID\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":[\"SNS:GetTopicAttributes\",\"SNS:SetTopicAttributes\",\"SNS:AddPermission\",\"SNS:RemovePermission\",\"SNS:DeleteTopic\",\"SNS:Subscribe\",\"SNS:ListSubscriptionsByTopic\",\"SNS:Publish\"],\"Resource\":\"${SNSTopic19}\",\"Condition\":{\"StringEquals\":{\"AWS:SourceOwner\":\"${AWS::AccountId}\"}}}]}"
            Topics: 
              - !Ref SNSTopic19

    SNSTopicPolicy20:
        Type: "AWS::SNS::TopicPolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2008-10-17\",\"Id\":\"__default_policy_ID\",\"Statement\":[{\"Sid\":\"__default_statement_ID\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":[\"SNS:GetTopicAttributes\",\"SNS:SetTopicAttributes\",\"SNS:AddPermission\",\"SNS:RemovePermission\",\"SNS:DeleteTopic\",\"SNS:Subscribe\",\"SNS:ListSubscriptionsByTopic\",\"SNS:Publish\"],\"Resource\":\"${SNSTopic20}\",\"Condition\":{\"StringEquals\":{\"AWS:SourceOwner\":\"${AWS::AccountId}\"}}}]}"
            Topics: 
              - !Ref SNSTopic20

    SNSTopicPolicy21:
        Type: "AWS::SNS::TopicPolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2008-10-17\",\"Id\":\"__default_policy_ID\",\"Statement\":[{\"Sid\":\"__default_statement_ID\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":[\"SNS:GetTopicAttributes\",\"SNS:SetTopicAttributes\",\"SNS:AddPermission\",\"SNS:RemovePermission\",\"SNS:DeleteTopic\",\"SNS:Subscribe\",\"SNS:ListSubscriptionsByTopic\",\"SNS:Publish\"],\"Resource\":\"${SNSTopic21}\",\"Condition\":{\"StringEquals\":{\"AWS:SourceOwner\":\"${AWS::AccountId}\"}}}]}"
            Topics: 
              - !Ref SNSTopic21

    SNSTopicPolicy22:
        Type: "AWS::SNS::TopicPolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2008-10-17\",\"Id\":\"__default_policy_ID\",\"Statement\":[{\"Sid\":\"__default_statement_ID\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":[\"SNS:GetTopicAttributes\",\"SNS:SetTopicAttributes\",\"SNS:AddPermission\",\"SNS:RemovePermission\",\"SNS:DeleteTopic\",\"SNS:Subscribe\",\"SNS:ListSubscriptionsByTopic\",\"SNS:Publish\"],\"Resource\":\"${SNSTopic22}\",\"Condition\":{\"StringEquals\":{\"AWS:SourceOwner\":\"${AWS::AccountId}\"}}}]}"
            Topics: 
              - !Ref SNSTopic22

    SNSTopicPolicy23:
        Type: "AWS::SNS::TopicPolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2008-10-17\",\"Id\":\"__default_policy_ID\",\"Statement\":[{\"Sid\":\"__default_statement_ID\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":[\"SNS:GetTopicAttributes\",\"SNS:SetTopicAttributes\",\"SNS:AddPermission\",\"SNS:RemovePermission\",\"SNS:DeleteTopic\",\"SNS:Subscribe\",\"SNS:ListSubscriptionsByTopic\",\"SNS:Publish\"],\"Resource\":\"${SNSTopic23}\",\"Condition\":{\"StringEquals\":{\"AWS:SourceOwner\":\"${AWS::AccountId}\"}}}]}"
            Topics: 
              - !Ref SNSTopic23

    SNSTopicPolicy24:
        Type: "AWS::SNS::TopicPolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2008-10-17\",\"Id\":\"__default_policy_ID\",\"Statement\":[{\"Sid\":\"__default_statement_ID\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":[\"SNS:GetTopicAttributes\",\"SNS:SetTopicAttributes\",\"SNS:AddPermission\",\"SNS:RemovePermission\",\"SNS:DeleteTopic\",\"SNS:Subscribe\",\"SNS:ListSubscriptionsByTopic\",\"SNS:Publish\"],\"Resource\":\"${SNSTopic24}\",\"Condition\":{\"StringEquals\":{\"AWS:SourceOwner\":\"${AWS::AccountId}\"}}}]}"
            Topics: 
              - !Ref SNSTopic24

    SNSTopicPolicy25:
        Type: "AWS::SNS::TopicPolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2008-10-17\",\"Id\":\"__default_policy_ID\",\"Statement\":[{\"Sid\":\"__default_statement_ID\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":[\"SNS:GetTopicAttributes\",\"SNS:SetTopicAttributes\",\"SNS:AddPermission\",\"SNS:RemovePermission\",\"SNS:DeleteTopic\",\"SNS:Subscribe\",\"SNS:ListSubscriptionsByTopic\",\"SNS:Publish\"],\"Resource\":\"${SNSTopic25}\",\"Condition\":{\"StringEquals\":{\"AWS:SourceOwner\":\"${AWS::AccountId}\"}}}]}"
            Topics: 
              - !Ref SNSTopic25

    SNSTopicPolicy26:
        Type: "AWS::SNS::TopicPolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2008-10-17\",\"Id\":\"__default_policy_ID\",\"Statement\":[{\"Sid\":\"__default_statement_ID\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":[\"SNS:GetTopicAttributes\",\"SNS:SetTopicAttributes\",\"SNS:AddPermission\",\"SNS:RemovePermission\",\"SNS:DeleteTopic\",\"SNS:Subscribe\",\"SNS:ListSubscriptionsByTopic\",\"SNS:Publish\"],\"Resource\":\"${SNSTopic26}\",\"Condition\":{\"StringEquals\":{\"AWS:SourceOwner\":\"${AWS::AccountId}\"}}}]}"
            Topics: 
              - !Ref SNSTopic26

    SNSTopicPolicy27:
        Type: "AWS::SNS::TopicPolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2008-10-17\",\"Id\":\"__default_policy_ID\",\"Statement\":[{\"Sid\":\"__default_statement_ID\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":[\"SNS:GetTopicAttributes\",\"SNS:SetTopicAttributes\",\"SNS:AddPermission\",\"SNS:RemovePermission\",\"SNS:DeleteTopic\",\"SNS:Subscribe\",\"SNS:ListSubscriptionsByTopic\",\"SNS:Publish\"],\"Resource\":\"${SNSTopic27}\",\"Condition\":{\"StringEquals\":{\"AWS:SourceOwner\":\"${AWS::AccountId}\"}}}]}"
            Topics: 
              - !Ref SNSTopic27

    SNSTopicPolicy28:
        Type: "AWS::SNS::TopicPolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2008-10-17\",\"Id\":\"__default_policy_ID\",\"Statement\":[{\"Sid\":\"__default_statement_ID\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":[\"SNS:GetTopicAttributes\",\"SNS:SetTopicAttributes\",\"SNS:AddPermission\",\"SNS:RemovePermission\",\"SNS:DeleteTopic\",\"SNS:Subscribe\",\"SNS:ListSubscriptionsByTopic\",\"SNS:Publish\"],\"Resource\":\"${SNSTopic28}\",\"Condition\":{\"StringEquals\":{\"AWS:SourceOwner\":\"${AWS::AccountId}\"}}}]}"
            Topics: 
              - !Ref SNSTopic28

    SNSTopicPolicy29:
        Type: "AWS::SNS::TopicPolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2008-10-17\",\"Id\":\"__default_policy_ID\",\"Statement\":[{\"Sid\":\"__default_statement_ID\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":[\"SNS:GetTopicAttributes\",\"SNS:SetTopicAttributes\",\"SNS:AddPermission\",\"SNS:RemovePermission\",\"SNS:DeleteTopic\",\"SNS:Subscribe\",\"SNS:ListSubscriptionsByTopic\",\"SNS:Publish\"],\"Resource\":\"${SNSTopic29}\",\"Condition\":{\"StringEquals\":{\"AWS:SourceOwner\":\"${AWS::AccountId}\"}}}]}"
            Topics: 
              - !Ref SNSTopic29

    SNSTopicPolicy30:
        Type: "AWS::SNS::TopicPolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2008-10-17\",\"Id\":\"__default_policy_ID\",\"Statement\":[{\"Sid\":\"__default_statement_ID\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":[\"SNS:GetTopicAttributes\",\"SNS:SetTopicAttributes\",\"SNS:AddPermission\",\"SNS:RemovePermission\",\"SNS:DeleteTopic\",\"SNS:Subscribe\",\"SNS:ListSubscriptionsByTopic\",\"SNS:Publish\"],\"Resource\":\"${SNSTopic30}\",\"Condition\":{\"StringEquals\":{\"AWS:SourceOwner\":\"${AWS::AccountId}\"}}}]}"
            Topics: 
              - !Ref SNSTopic30

    SNSTopicPolicy31:
        Type: "AWS::SNS::TopicPolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2008-10-17\",\"Id\":\"__default_policy_ID\",\"Statement\":[{\"Sid\":\"__default_statement_ID\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":[\"SNS:GetTopicAttributes\",\"SNS:SetTopicAttributes\",\"SNS:AddPermission\",\"SNS:RemovePermission\",\"SNS:DeleteTopic\",\"SNS:Subscribe\",\"SNS:ListSubscriptionsByTopic\",\"SNS:Publish\"],\"Resource\":\"${SNSTopic31}\",\"Condition\":{\"StringEquals\":{\"AWS:SourceOwner\":\"${AWS::AccountId}\"}}}]}"
            Topics: 
              - !Ref SNSTopic31

    SNSTopicPolicy32:
        Type: "AWS::SNS::TopicPolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2008-10-17\",\"Id\":\"__default_policy_ID\",\"Statement\":[{\"Sid\":\"__default_statement_ID\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":[\"SNS:GetTopicAttributes\",\"SNS:SetTopicAttributes\",\"SNS:AddPermission\",\"SNS:RemovePermission\",\"SNS:DeleteTopic\",\"SNS:Subscribe\",\"SNS:ListSubscriptionsByTopic\",\"SNS:Publish\"],\"Resource\":\"${SNSTopic32}\",\"Condition\":{\"StringEquals\":{\"AWS:SourceOwner\":\"${AWS::AccountId}\"}}}]}"
            Topics: 
              - !Ref SNSTopic32

    SNSTopicPolicy33:
        Type: "AWS::SNS::TopicPolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2008-10-17\",\"Id\":\"__default_policy_ID\",\"Statement\":[{\"Sid\":\"__default_statement_ID\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":[\"SNS:GetTopicAttributes\",\"SNS:SetTopicAttributes\",\"SNS:AddPermission\",\"SNS:RemovePermission\",\"SNS:DeleteTopic\",\"SNS:Subscribe\",\"SNS:ListSubscriptionsByTopic\",\"SNS:Publish\"],\"Resource\":\"${SNSTopic33}\",\"Condition\":{\"StringEquals\":{\"AWS:SourceOwner\":\"${AWS::AccountId}\"}}}]}"
            Topics: 
              - !Ref SNSTopic33

    SNSTopicPolicy34:
        Type: "AWS::SNS::TopicPolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2008-10-17\",\"Id\":\"__default_policy_ID\",\"Statement\":[{\"Sid\":\"__default_statement_ID\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":[\"SNS:GetTopicAttributes\",\"SNS:SetTopicAttributes\",\"SNS:AddPermission\",\"SNS:RemovePermission\",\"SNS:DeleteTopic\",\"SNS:Subscribe\",\"SNS:ListSubscriptionsByTopic\",\"SNS:Publish\"],\"Resource\":\"${SNSTopic34}\",\"Condition\":{\"StringEquals\":{\"AWS:SourceOwner\":\"${AWS::AccountId}\"}}}]}"
            Topics: 
              - !Ref SNSTopic34

    SNSTopicPolicy35:
        Type: "AWS::SNS::TopicPolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2008-10-17\",\"Id\":\"__default_policy_ID\",\"Statement\":[{\"Sid\":\"__default_statement_ID\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":[\"SNS:GetTopicAttributes\",\"SNS:SetTopicAttributes\",\"SNS:AddPermission\",\"SNS:RemovePermission\",\"SNS:DeleteTopic\",\"SNS:Subscribe\",\"SNS:ListSubscriptionsByTopic\",\"SNS:Publish\"],\"Resource\":\"${SNSTopic35}\",\"Condition\":{\"StringEquals\":{\"AWS:SourceOwner\":\"${AWS::AccountId}\"}}}]}"
            Topics: 
              - !Ref SNSTopic35

    SNSTopicPolicy36:
        Type: "AWS::SNS::TopicPolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2008-10-17\",\"Id\":\"__default_policy_ID\",\"Statement\":[{\"Sid\":\"__default_statement_ID\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":[\"SNS:GetTopicAttributes\",\"SNS:SetTopicAttributes\",\"SNS:AddPermission\",\"SNS:RemovePermission\",\"SNS:DeleteTopic\",\"SNS:Subscribe\",\"SNS:ListSubscriptionsByTopic\",\"SNS:Publish\"],\"Resource\":\"${SNSTopic36}\",\"Condition\":{\"StringEquals\":{\"AWS:SourceOwner\":\"${AWS::AccountId}\"}}}]}"
            Topics: 
              - !Ref SNSTopic36

    SNSTopicPolicy37:
        Type: "AWS::SNS::TopicPolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2008-10-17\",\"Id\":\"__default_policy_ID\",\"Statement\":[{\"Sid\":\"__default_statement_ID\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":[\"SNS:GetTopicAttributes\",\"SNS:SetTopicAttributes\",\"SNS:AddPermission\",\"SNS:RemovePermission\",\"SNS:DeleteTopic\",\"SNS:Subscribe\",\"SNS:ListSubscriptionsByTopic\",\"SNS:Publish\"],\"Resource\":\"${SNSTopic37}\",\"Condition\":{\"StringEquals\":{\"AWS:SourceOwner\":\"${AWS::AccountId}\"}}}]}"
            Topics: 
              - !Ref SNSTopic37

    SNSTopicPolicy38:
        Type: "AWS::SNS::TopicPolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2008-10-17\",\"Id\":\"__default_policy_ID\",\"Statement\":[{\"Sid\":\"__default_statement_ID\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":[\"SNS:GetTopicAttributes\",\"SNS:SetTopicAttributes\",\"SNS:AddPermission\",\"SNS:RemovePermission\",\"SNS:DeleteTopic\",\"SNS:Subscribe\",\"SNS:ListSubscriptionsByTopic\",\"SNS:Publish\"],\"Resource\":\"${SNSTopic38}\",\"Condition\":{\"StringEquals\":{\"AWS:SourceOwner\":\"${AWS::AccountId}\"}}}]}"
            Topics: 
              - !Ref SNSTopic38

    SNSTopicPolicy39:
        Type: "AWS::SNS::TopicPolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2008-10-17\",\"Id\":\"__default_policy_ID\",\"Statement\":[{\"Sid\":\"__default_statement_ID\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":[\"SNS:GetTopicAttributes\",\"SNS:SetTopicAttributes\",\"SNS:AddPermission\",\"SNS:RemovePermission\",\"SNS:DeleteTopic\",\"SNS:Subscribe\",\"SNS:ListSubscriptionsByTopic\",\"SNS:Publish\"],\"Resource\":\"${SNSTopic39}\",\"Condition\":{\"StringEquals\":{\"AWS:SourceOwner\":\"${AWS::AccountId}\"}}}]}"
            Topics: 
              - !Ref SNSTopic39

    SNSTopicPolicy40:
        Type: "AWS::SNS::TopicPolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2008-10-17\",\"Id\":\"__default_policy_ID\",\"Statement\":[{\"Sid\":\"__default_statement_ID\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":[\"SNS:GetTopicAttributes\",\"SNS:SetTopicAttributes\",\"SNS:AddPermission\",\"SNS:RemovePermission\",\"SNS:DeleteTopic\",\"SNS:Subscribe\",\"SNS:ListSubscriptionsByTopic\",\"SNS:Publish\"],\"Resource\":\"${SNSTopic40}\",\"Condition\":{\"StringEquals\":{\"AWS:SourceOwner\":\"${AWS::AccountId}\"}}}]}"
            Topics: 
              - !Ref SNSTopic40

    SNSSubscription:
        Type: "AWS::SNS::Subscription"
        Properties:
            TopicArn: !Ref SNSTopic
            Endpoint: !Ref SQSQueue
            Protocol: "sqs"
            RawMessageDelivery: "false"
            Region: !Ref AWS::Region

    SNSSubscription2:
        Type: "AWS::SNS::Subscription"
        Properties:
            TopicArn: !Ref SNSTopic2
            Endpoint: !Ref SQSQueue2
            Protocol: "sqs"
            RawMessageDelivery: "false"
            Region: !Ref AWS::Region

    SNSSubscription3:
        Type: "AWS::SNS::Subscription"
        Properties:
            TopicArn: !Ref SNSTopic3
            Endpoint: !Ref SQSQueue8
            Protocol: "sqs"
            RawMessageDelivery: "false"
            Region: !Ref AWS::Region

    SNSSubscription4:
        Type: "AWS::SNS::Subscription"
        Properties:
            TopicArn: !Ref SNSTopic4
            Endpoint: !Ref SQSQueue3
            Protocol: "sqs"
            RawMessageDelivery: "false"
            Region: !Ref AWS::Region

    SNSSubscription5:
        Type: "AWS::SNS::Subscription"
        Properties:
            TopicArn: !Ref SNSTopic5
            Endpoint: !Ref SQSQueue5
            Protocol: "sqs"
            RawMessageDelivery: "false"
            Region: !Ref AWS::Region

    SNSSubscription6:
        Type: "AWS::SNS::Subscription"
        Properties:
            TopicArn: !Ref SNSTopic7
            Endpoint: !Ref SQSQueue4
            Protocol: "sqs"
            RawMessageDelivery: "false"
            Region: !Ref AWS::Region

    SNSSubscription7:
        Type: "AWS::SNS::Subscription"
        Properties:
            TopicArn: !Ref SNSTopic6
            Endpoint: !Ref SQSQueue6
            Protocol: "sqs"
            RawMessageDelivery: "false"
            Region: !Ref AWS::Region

    SNSSubscription8:
        Type: "AWS::SNS::Subscription"
        Properties:
            TopicArn: !Ref SNSTopic8
            Endpoint: !Ref SQSQueue7
            Protocol: "sqs"
            RawMessageDelivery: "false"
            Region: !Ref AWS::Region

    SNSSubscription9:
        Type: "AWS::SNS::Subscription"
        Properties:
            TopicArn: !Ref SNSTopic9
            Endpoint: !Ref SQSQueue9
            Protocol: "sqs"
            RawMessageDelivery: "false"
            Region: !Ref AWS::Region

    SNSSubscription10:
        Type: "AWS::SNS::Subscription"
        Properties:
            TopicArn: !Ref SNSTopic10
            Endpoint: !Ref SQSQueue10
            Protocol: "sqs"
            RawMessageDelivery: "false"
            Region: !Ref AWS::Region

    SNSSubscription11:
        Type: "AWS::SNS::Subscription"
        Properties:
            TopicArn: !Ref SNSTopic11
            Endpoint: !Ref SQSQueue11
            Protocol: "sqs"
            RawMessageDelivery: "false"
            Region: !Ref AWS::Region

    SNSSubscription12:
        Type: "AWS::SNS::Subscription"
        Properties:
            TopicArn: !Ref SNSTopic12
            Endpoint: !Ref SQSQueue12
            Protocol: "sqs"
            RawMessageDelivery: "false"
            Region: !Ref AWS::Region

    SNSSubscription13:
        Type: "AWS::SNS::Subscription"
        Properties:
            TopicArn: !Ref SNSTopic13
            Endpoint: !Ref SQSQueue13
            Protocol: "sqs"
            RawMessageDelivery: "false"
            Region: !Ref AWS::Region

    SNSSubscription14:
        Type: "AWS::SNS::Subscription"
        Properties:
            TopicArn: !Ref SNSTopic15
            Endpoint: !Ref SQSQueue14
            Protocol: "sqs"
            RawMessageDelivery: "false"
            Region: !Ref AWS::Region

    SNSSubscription15:
        Type: "AWS::SNS::Subscription"
        Properties:
            TopicArn: !Ref SNSTopic14
            Endpoint: !Ref SQSQueue19
            Protocol: "sqs"
            RawMessageDelivery: "false"
            Region: !Ref AWS::Region

    SNSSubscription16:
        Type: "AWS::SNS::Subscription"
        Properties:
            TopicArn: !Ref SNSTopic16
            Endpoint: !Ref SQSQueue15
            Protocol: "sqs"
            RawMessageDelivery: "false"
            Region: !Ref AWS::Region

    SNSSubscription17:
        Type: "AWS::SNS::Subscription"
        Properties:
            TopicArn: !Ref SNSTopic17
            Endpoint: !Ref SQSQueue16
            Protocol: "sqs"
            RawMessageDelivery: "false"
            Region: !Ref AWS::Region

    SNSSubscription18:
        Type: "AWS::SNS::Subscription"
        Properties:
            TopicArn: !Ref SNSTopic18
            Endpoint: !Ref SQSQueue17
            Protocol: "sqs"
            RawMessageDelivery: "false"
            Region: !Ref AWS::Region

    SNSSubscription19:
        Type: "AWS::SNS::Subscription"
        Properties:
            TopicArn: !Ref SNSTopic19
            Endpoint: !Ref SQSQueue18
            Protocol: "sqs"
            RawMessageDelivery: "false"
            Region: !Ref AWS::Region

    SNSSubscription20:
        Type: "AWS::SNS::Subscription"
        Properties:
            TopicArn: !Ref SNSTopic20
            Endpoint: !Ref SQSQueue21
            Protocol: "sqs"
            RawMessageDelivery: "false"
            Region: !Ref AWS::Region

    SNSSubscription21:
        Type: "AWS::SNS::Subscription"
        Properties:
            TopicArn: !Ref SNSTopic22
            Endpoint: !Ref SQSQueue20
            Protocol: "sqs"
            RawMessageDelivery: "false"
            Region: !Ref AWS::Region

    SNSSubscription22:
        Type: "AWS::SNS::Subscription"
        Properties:
            TopicArn: !Ref SNSTopic21
            Endpoint: !Ref SQSQueue22
            Protocol: "sqs"
            RawMessageDelivery: "false"
            Region: !Ref AWS::Region

    SNSSubscription23:
        Type: "AWS::SNS::Subscription"
        Properties:
            TopicArn: !Ref SNSTopic23
            Endpoint: !Ref SQSQueue23
            Protocol: "sqs"
            RawMessageDelivery: "false"
            Region: !Ref AWS::Region

    SNSSubscription24:
        Type: "AWS::SNS::Subscription"
        Properties:
            TopicArn: !Ref SNSTopic24
            Endpoint: !Ref SQSQueue24
            Protocol: "sqs"
            RawMessageDelivery: "false"
            Region: !Ref AWS::Region

    SNSSubscription25:
        Type: "AWS::SNS::Subscription"
        Properties:
            TopicArn: !Ref SNSTopic25
            Endpoint: !Ref SQSQueue25
            Protocol: "sqs"
            RawMessageDelivery: "false"
            Region: !Ref AWS::Region

    SNSSubscription26:
        Type: "AWS::SNS::Subscription"
        Properties:
            TopicArn: !Ref SNSTopic26
            Endpoint: !Ref SQSQueue26
            Protocol: "sqs"
            RawMessageDelivery: "false"
            Region: !Ref AWS::Region

    SNSSubscription27:
        Type: "AWS::SNS::Subscription"
        Properties:
            TopicArn: !Ref SNSTopic27
            Endpoint: !Ref SQSQueue27
            Protocol: "sqs"
            RawMessageDelivery: "false"
            Region: !Ref AWS::Region

    SNSSubscription28:
        Type: "AWS::SNS::Subscription"
        Properties:
            TopicArn: !Ref SNSTopic28
            Endpoint: !Ref SQSQueue29
            Protocol: "sqs"
            RawMessageDelivery: "false"
            Region: !Ref AWS::Region

    SNSSubscription29:
        Type: "AWS::SNS::Subscription"
        Properties:
            TopicArn: !Ref SNSTopic29
            Endpoint: !Ref SQSQueue28
            Protocol: "sqs"
            RawMessageDelivery: "false"
            Region: !Ref AWS::Region

    SNSSubscription30:
        Type: "AWS::SNS::Subscription"
        Properties:
            TopicArn: !Ref SNSTopic30
            Endpoint: !Ref SQSQueue31
            Protocol: "sqs"
            RawMessageDelivery: "false"
            Region: !Ref AWS::Region

    SNSSubscription31:
        Type: "AWS::SNS::Subscription"
        Properties:
            TopicArn: !Ref SNSTopic31
            Endpoint: !Ref SQSQueue30
            Protocol: "sqs"
            RawMessageDelivery: "false"
            Region: !Ref AWS::Region

    SNSSubscription32:
        Type: "AWS::SNS::Subscription"
        Properties:
            TopicArn: !Ref SNSTopic32
            Endpoint: !Ref SQSQueue32
            Protocol: "sqs"
            RawMessageDelivery: "false"
            Region: !Ref AWS::Region

    SNSSubscription33:
        Type: "AWS::SNS::Subscription"
        Properties:
            TopicArn: !Ref SNSTopic33
            Endpoint: !Ref SQSQueue33
            Protocol: "sqs"
            RawMessageDelivery: "false"
            Region: !Ref AWS::Region

    SNSSubscription34:
        Type: "AWS::SNS::Subscription"
        Properties:
            TopicArn: !Ref SNSTopic35
            Endpoint: !Ref SQSQueue34
            Protocol: "sqs"
            RawMessageDelivery: "false"
            Region: !Ref AWS::Region

    SNSSubscription35:
        Type: "AWS::SNS::Subscription"
        Properties:
            TopicArn: !Ref SNSTopic34
            Endpoint: !Ref SQSQueue37
            Protocol: "sqs"
            RawMessageDelivery: "false"
            Region: !Ref AWS::Region

    SNSSubscription36:
        Type: "AWS::SNS::Subscription"
        Properties:
            TopicArn: !Ref SNSTopic36
            Endpoint: !Ref SQSQueue35
            Protocol: "sqs"
            RawMessageDelivery: "false"
            Region: !Ref AWS::Region

    SNSSubscription37:
        Type: "AWS::SNS::Subscription"
        Properties:
            TopicArn: !Ref SNSTopic37
            Endpoint: !Ref SQSQueue36
            Protocol: "sqs"
            RawMessageDelivery: "false"
            Region: !Ref AWS::Region

    SNSSubscription38:
        Type: "AWS::SNS::Subscription"
        Properties:
            TopicArn: !Ref SNSTopic38
            Endpoint: !Ref SQSQueue38
            Protocol: "sqs"
            RawMessageDelivery: "false"
            Region: !Ref AWS::Region

    SNSSubscription39:
        Type: "AWS::SNS::Subscription"
        Properties:
            TopicArn: !Ref SNSTopic39
            Endpoint: !Ref SQSQueue39
            Protocol: "sqs"
            RawMessageDelivery: "false"
            Region: !Ref AWS::Region

    SNSSubscription40:
        Type: "AWS::SNS::Subscription"
        Properties:
            TopicArn: !Ref SNSTopic40
            Endpoint: !Ref SQSQueue40
            Protocol: "sqs"
            RawMessageDelivery: "false"
            Region: !Ref AWS::Region

    SQSQueue:
        Type: "AWS::SQS::Queue"
        Properties:
            DelaySeconds: "0"
            MaximumMessageSize: "262144"
            MessageRetentionPeriod: "345600"
            ReceiveMessageWaitTimeSeconds: "0"
            VisibilityTimeout: "30"
            QueueName: "AmazonTextractQueue1677186234790"

    SQSQueue2:
        Type: "AWS::SQS::Queue"
        Properties:
            DelaySeconds: "0"
            MaximumMessageSize: "262144"
            MessageRetentionPeriod: "345600"
            ReceiveMessageWaitTimeSeconds: "0"
            VisibilityTimeout: "30"
            QueueName: "AmazonTextractQueue1677186300877"

    SQSQueue3:
        Type: "AWS::SQS::Queue"
        Properties:
            DelaySeconds: "0"
            MaximumMessageSize: "262144"
            MessageRetentionPeriod: "345600"
            ReceiveMessageWaitTimeSeconds: "0"
            VisibilityTimeout: "30"
            QueueName: "AmazonTextractQueue1677269173347"

    SQSQueue4:
        Type: "AWS::SQS::Queue"
        Properties:
            DelaySeconds: "0"
            MaximumMessageSize: "262144"
            MessageRetentionPeriod: "345600"
            ReceiveMessageWaitTimeSeconds: "0"
            VisibilityTimeout: "30"
            QueueName: "AmazonTextractQueue1677269344682"

    SQSQueue5:
        Type: "AWS::SQS::Queue"
        Properties:
            DelaySeconds: "0"
            MaximumMessageSize: "262144"
            MessageRetentionPeriod: "345600"
            ReceiveMessageWaitTimeSeconds: "0"
            VisibilityTimeout: "30"
            QueueName: "AmazonTextractQueue1677269233606"

    SQSQueue6:
        Type: "AWS::SQS::Queue"
        Properties:
            DelaySeconds: "0"
            MaximumMessageSize: "262144"
            MessageRetentionPeriod: "345600"
            ReceiveMessageWaitTimeSeconds: "0"
            VisibilityTimeout: "30"
            QueueName: "AmazonTextractQueue1677271604840"

    SQSQueue7:
        Type: "AWS::SQS::Queue"
        Properties:
            DelaySeconds: "0"
            MaximumMessageSize: "262144"
            MessageRetentionPeriod: "345600"
            ReceiveMessageWaitTimeSeconds: "0"
            VisibilityTimeout: "30"
            QueueName: "AmazonTextractQueue1677271662006"

    SQSQueue8:
        Type: "AWS::SQS::Queue"
        Properties:
            DelaySeconds: "0"
            MaximumMessageSize: "262144"
            MessageRetentionPeriod: "345600"
            ReceiveMessageWaitTimeSeconds: "0"
            VisibilityTimeout: "30"
            QueueName: "AmazonTextractQueue1677186421191"

    SQSQueue9:
        Type: "AWS::SQS::Queue"
        Properties:
            DelaySeconds: "0"
            MaximumMessageSize: "262144"
            MessageRetentionPeriod: "345600"
            ReceiveMessageWaitTimeSeconds: "0"
            VisibilityTimeout: "30"
            QueueName: "AmazonTextractQueue1677271785961"

    SQSQueue10:
        Type: "AWS::SQS::Queue"
        Properties:
            DelaySeconds: "0"
            MaximumMessageSize: "262144"
            MessageRetentionPeriod: "345600"
            ReceiveMessageWaitTimeSeconds: "0"
            VisibilityTimeout: "30"
            QueueName: "AmazonTextractQueue1677373580576"

    SQSQueue11:
        Type: "AWS::SQS::Queue"
        Properties:
            DelaySeconds: "0"
            MaximumMessageSize: "262144"
            MessageRetentionPeriod: "345600"
            ReceiveMessageWaitTimeSeconds: "0"
            VisibilityTimeout: "30"
            QueueName: "AmazonTextractQueue1677373635830"

    SQSQueue12:
        Type: "AWS::SQS::Queue"
        Properties:
            DelaySeconds: "0"
            MaximumMessageSize: "262144"
            MessageRetentionPeriod: "345600"
            ReceiveMessageWaitTimeSeconds: "0"
            VisibilityTimeout: "30"
            QueueName: "AmazonTextractQueue1677373755858"

    SQSQueue13:
        Type: "AWS::SQS::Queue"
        Properties:
            DelaySeconds: "0"
            MaximumMessageSize: "262144"
            MessageRetentionPeriod: "345600"
            ReceiveMessageWaitTimeSeconds: "0"
            VisibilityTimeout: "30"
            QueueName: "AmazonTextractQueue1677380439647"

    SQSQueue14:
        Type: "AWS::SQS::Queue"
        Properties:
            DelaySeconds: "0"
            MaximumMessageSize: "262144"
            MessageRetentionPeriod: "345600"
            ReceiveMessageWaitTimeSeconds: "0"
            VisibilityTimeout: "30"
            QueueName: "AmazonTextractQueue1677380622207"

    SQSQueue15:
        Type: "AWS::SQS::Queue"
        Properties:
            DelaySeconds: "0"
            MaximumMessageSize: "262144"
            MessageRetentionPeriod: "345600"
            ReceiveMessageWaitTimeSeconds: "0"
            VisibilityTimeout: "30"
            QueueName: "AmazonTextractQueue1677381670186"

    SQSQueue16:
        Type: "AWS::SQS::Queue"
        Properties:
            DelaySeconds: "0"
            MaximumMessageSize: "262144"
            MessageRetentionPeriod: "345600"
            ReceiveMessageWaitTimeSeconds: "0"
            VisibilityTimeout: "30"
            QueueName: "AmazonTextractQueue1677381841422"

    SQSQueue17:
        Type: "AWS::SQS::Queue"
        Properties:
            DelaySeconds: "0"
            MaximumMessageSize: "262144"
            MessageRetentionPeriod: "345600"
            ReceiveMessageWaitTimeSeconds: "0"
            VisibilityTimeout: "30"
            QueueName: "AmazonTextractQueue1677381731440"

    SQSQueue18:
        Type: "AWS::SQS::Queue"
        Properties:
            DelaySeconds: "0"
            MaximumMessageSize: "262144"
            MessageRetentionPeriod: "345600"
            ReceiveMessageWaitTimeSeconds: "0"
            VisibilityTimeout: "30"
            QueueName: "AmazonTextractQueue1677469341685"

    SQSQueue19:
        Type: "AWS::SQS::Queue"
        Properties:
            DelaySeconds: "0"
            MaximumMessageSize: "262144"
            MessageRetentionPeriod: "345600"
            ReceiveMessageWaitTimeSeconds: "0"
            VisibilityTimeout: "30"
            QueueName: "AmazonTextractQueue1677380507928"

    SQSQueue20:
        Type: "AWS::SQS::Queue"
        Properties:
            DelaySeconds: "0"
            MaximumMessageSize: "262144"
            MessageRetentionPeriod: "345600"
            ReceiveMessageWaitTimeSeconds: "0"
            VisibilityTimeout: "30"
            QueueName: "AmazonTextractQueue1677469395871"

    SQSQueue21:
        Type: "AWS::SQS::Queue"
        Properties:
            DelaySeconds: "0"
            MaximumMessageSize: "262144"
            MessageRetentionPeriod: "345600"
            ReceiveMessageWaitTimeSeconds: "0"
            VisibilityTimeout: "30"
            QueueName: "AmazonTextractQueue1677469522057"

    SQSQueue22:
        Type: "AWS::SQS::Queue"
        Properties:
            DelaySeconds: "0"
            MaximumMessageSize: "262144"
            MessageRetentionPeriod: "345600"
            ReceiveMessageWaitTimeSeconds: "0"
            VisibilityTimeout: "30"
            QueueName: "AmazonTextractQueue1677520620108"

    SQSQueue23:
        Type: "AWS::SQS::Queue"
        Properties:
            DelaySeconds: "0"
            MaximumMessageSize: "262144"
            MessageRetentionPeriod: "345600"
            ReceiveMessageWaitTimeSeconds: "0"
            VisibilityTimeout: "30"
            QueueName: "AmazonTextractQueue1677520682842"

    SQSQueue24:
        Type: "AWS::SQS::Queue"
        Properties:
            DelaySeconds: "0"
            MaximumMessageSize: "262144"
            MessageRetentionPeriod: "345600"
            ReceiveMessageWaitTimeSeconds: "0"
            VisibilityTimeout: "30"
            QueueName: "AmazonTextractQueue1677520823020"

    SQSQueue25:
        Type: "AWS::SQS::Queue"
        Properties:
            DelaySeconds: "0"
            MaximumMessageSize: "262144"
            MessageRetentionPeriod: "345600"
            ReceiveMessageWaitTimeSeconds: "0"
            VisibilityTimeout: "30"
            QueueName: "AmazonTextractQueue1677520843400"

    SQSQueue26:
        Type: "AWS::SQS::Queue"
        Properties:
            DelaySeconds: "0"
            MaximumMessageSize: "262144"
            MessageRetentionPeriod: "345600"
            ReceiveMessageWaitTimeSeconds: "0"
            VisibilityTimeout: "30"
            QueueName: "AmazonTextractQueue1677520909450"

    SQSQueue27:
        Type: "AWS::SQS::Queue"
        Properties:
            DelaySeconds: "0"
            MaximumMessageSize: "262144"
            MessageRetentionPeriod: "345600"
            ReceiveMessageWaitTimeSeconds: "0"
            VisibilityTimeout: "30"
            QueueName: "AmazonTextractQueue1677520930309"

    SQSQueue28:
        Type: "AWS::SQS::Queue"
        Properties:
            DelaySeconds: "0"
            MaximumMessageSize: "262144"
            MessageRetentionPeriod: "345600"
            ReceiveMessageWaitTimeSeconds: "0"
            VisibilityTimeout: "30"
            QueueName: "AmazonTextractQueue1677522042704"

    SQSQueue29:
        Type: "AWS::SQS::Queue"
        Properties:
            DelaySeconds: "0"
            MaximumMessageSize: "262144"
            MessageRetentionPeriod: "345600"
            ReceiveMessageWaitTimeSeconds: "0"
            VisibilityTimeout: "30"
            QueueName: "AmazonTextractQueue1677521024658"

    SQSQueue30:
        Type: "AWS::SQS::Queue"
        Properties:
            DelaySeconds: "0"
            MaximumMessageSize: "262144"
            MessageRetentionPeriod: "345600"
            ReceiveMessageWaitTimeSeconds: "0"
            VisibilityTimeout: "30"
            QueueName: "AmazonTextractQueue1677522230963"

    SQSQueue31:
        Type: "AWS::SQS::Queue"
        Properties:
            DelaySeconds: "0"
            MaximumMessageSize: "262144"
            MessageRetentionPeriod: "345600"
            ReceiveMessageWaitTimeSeconds: "0"
            VisibilityTimeout: "30"
            QueueName: "AmazonTextractQueue1677522103892"

    SQSQueue32:
        Type: "AWS::SQS::Queue"
        Properties:
            DelaySeconds: "0"
            MaximumMessageSize: "262144"
            MessageRetentionPeriod: "345600"
            ReceiveMessageWaitTimeSeconds: "0"
            VisibilityTimeout: "30"
            QueueName: "AmazonTextractQueue1677522778661"

    SQSQueue33:
        Type: "AWS::SQS::Queue"
        Properties:
            DelaySeconds: "0"
            MaximumMessageSize: "262144"
            MessageRetentionPeriod: "345600"
            ReceiveMessageWaitTimeSeconds: "0"
            VisibilityTimeout: "30"
            QueueName: "AmazonTextractQueue1677522838860"

    SQSQueue34:
        Type: "AWS::SQS::Queue"
        Properties:
            DelaySeconds: "0"
            MaximumMessageSize: "262144"
            MessageRetentionPeriod: "345600"
            ReceiveMessageWaitTimeSeconds: "0"
            VisibilityTimeout: "30"
            QueueName: "AmazonTextractQueue1677523330413"

    SQSQueue35:
        Type: "AWS::SQS::Queue"
        Properties:
            DelaySeconds: "0"
            MaximumMessageSize: "262144"
            MessageRetentionPeriod: "345600"
            ReceiveMessageWaitTimeSeconds: "0"
            VisibilityTimeout: "30"
            QueueName: "AmazonTextractQueue1677523385694"

    SQSQueue36:
        Type: "AWS::SQS::Queue"
        Properties:
            DelaySeconds: "0"
            MaximumMessageSize: "262144"
            MessageRetentionPeriod: "345600"
            ReceiveMessageWaitTimeSeconds: "0"
            VisibilityTimeout: "30"
            QueueName: "AmazonTextractQueue1677523519807"

    SQSQueue37:
        Type: "AWS::SQS::Queue"
        Properties:
            DelaySeconds: "0"
            MaximumMessageSize: "262144"
            MessageRetentionPeriod: "345600"
            ReceiveMessageWaitTimeSeconds: "0"
            VisibilityTimeout: "30"
            QueueName: "AmazonTextractQueue1677522967825"

    SQSQueue38:
        Type: "AWS::SQS::Queue"
        Properties:
            DelaySeconds: "0"
            MaximumMessageSize: "262144"
            MessageRetentionPeriod: "345600"
            ReceiveMessageWaitTimeSeconds: "0"
            VisibilityTimeout: "30"
            QueueName: "AmazonTextractQueue1677524221585"

    SQSQueue39:
        Type: "AWS::SQS::Queue"
        Properties:
            DelaySeconds: "0"
            MaximumMessageSize: "262144"
            MessageRetentionPeriod: "345600"
            ReceiveMessageWaitTimeSeconds: "0"
            VisibilityTimeout: "30"
            QueueName: "AmazonTextractQueue1677524280870"

    SQSQueue40:
        Type: "AWS::SQS::Queue"
        Properties:
            DelaySeconds: "0"
            MaximumMessageSize: "262144"
            MessageRetentionPeriod: "345600"
            ReceiveMessageWaitTimeSeconds: "0"
            VisibilityTimeout: "30"
            QueueName: "AmazonTextractQueue1677524392910"

    SQSQueuePolicy:
        Type: "AWS::SQS::QueuePolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"MyPolicy\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":\"SQS:SendMessage\",\"Resource\":\"${SQSQueue}\",\"Condition\":{\"ArnEquals\":{\"aws:SourceArn\":\"${SNSTopic}\"}}}]}"
            Queues: 
              - !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/${SQSQueue.QueueName}"

    SQSQueuePolicy2:
        Type: "AWS::SQS::QueuePolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"MyPolicy\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":\"SQS:SendMessage\",\"Resource\":\"${SQSQueue2}\",\"Condition\":{\"ArnEquals\":{\"aws:SourceArn\":\"${SNSTopic2}\"}}}]}"
            Queues: 
              - !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/${SQSQueue2.QueueName}"

    SQSQueuePolicy3:
        Type: "AWS::SQS::QueuePolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"MyPolicy\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":\"SQS:SendMessage\",\"Resource\":\"${SQSQueue3}\",\"Condition\":{\"ArnEquals\":{\"aws:SourceArn\":\"${SNSTopic4}\"}}}]}"
            Queues: 
              - !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/${SQSQueue3.QueueName}"

    SQSQueuePolicy4:
        Type: "AWS::SQS::QueuePolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"MyPolicy\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":\"SQS:SendMessage\",\"Resource\":\"${SQSQueue4}\",\"Condition\":{\"ArnEquals\":{\"aws:SourceArn\":\"${SNSTopic7}\"}}}]}"
            Queues: 
              - !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/${SQSQueue4.QueueName}"

    SQSQueuePolicy5:
        Type: "AWS::SQS::QueuePolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"MyPolicy\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":\"SQS:SendMessage\",\"Resource\":\"${SQSQueue5}\",\"Condition\":{\"ArnEquals\":{\"aws:SourceArn\":\"${SNSTopic5}\"}}}]}"
            Queues: 
              - !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/${SQSQueue5.QueueName}"

    SQSQueuePolicy6:
        Type: "AWS::SQS::QueuePolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"MyPolicy\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":\"SQS:SendMessage\",\"Resource\":\"${SQSQueue6}\",\"Condition\":{\"ArnEquals\":{\"aws:SourceArn\":\"${SNSTopic6}\"}}}]}"
            Queues: 
              - !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/${SQSQueue6.QueueName}"

    SQSQueuePolicy7:
        Type: "AWS::SQS::QueuePolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"MyPolicy\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":\"SQS:SendMessage\",\"Resource\":\"${SQSQueue7}\",\"Condition\":{\"ArnEquals\":{\"aws:SourceArn\":\"${SNSTopic8}\"}}}]}"
            Queues: 
              - !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/${SQSQueue7.QueueName}"

    SQSQueuePolicy8:
        Type: "AWS::SQS::QueuePolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"MyPolicy\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":\"SQS:SendMessage\",\"Resource\":\"${SQSQueue8}\",\"Condition\":{\"ArnEquals\":{\"aws:SourceArn\":\"${SNSTopic3}\"}}}]}"
            Queues: 
              - !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/${SQSQueue8.QueueName}"

    SQSQueuePolicy9:
        Type: "AWS::SQS::QueuePolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"MyPolicy\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":\"SQS:SendMessage\",\"Resource\":\"${SQSQueue9}\",\"Condition\":{\"ArnEquals\":{\"aws:SourceArn\":\"${SNSTopic9}\"}}}]}"
            Queues: 
              - !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/${SQSQueue9.QueueName}"

    SQSQueuePolicy10:
        Type: "AWS::SQS::QueuePolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"MyPolicy\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":\"SQS:SendMessage\",\"Resource\":\"${SQSQueue10}\",\"Condition\":{\"ArnEquals\":{\"aws:SourceArn\":\"${SNSTopic10}\"}}}]}"
            Queues: 
              - !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/${SQSQueue10.QueueName}"

    SQSQueuePolicy11:
        Type: "AWS::SQS::QueuePolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"MyPolicy\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":\"SQS:SendMessage\",\"Resource\":\"${SQSQueue11}\",\"Condition\":{\"ArnEquals\":{\"aws:SourceArn\":\"${SNSTopic11}\"}}}]}"
            Queues: 
              - !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/${SQSQueue11.QueueName}"

    SQSQueuePolicy12:
        Type: "AWS::SQS::QueuePolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"MyPolicy\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":\"SQS:SendMessage\",\"Resource\":\"${SQSQueue12}\",\"Condition\":{\"ArnEquals\":{\"aws:SourceArn\":\"${SNSTopic12}\"}}}]}"
            Queues: 
              - !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/${SQSQueue12.QueueName}"

    SQSQueuePolicy13:
        Type: "AWS::SQS::QueuePolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"MyPolicy\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":\"SQS:SendMessage\",\"Resource\":\"${SQSQueue13}\",\"Condition\":{\"ArnEquals\":{\"aws:SourceArn\":\"${SNSTopic13}\"}}}]}"
            Queues: 
              - !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/${SQSQueue13.QueueName}"

    SQSQueuePolicy14:
        Type: "AWS::SQS::QueuePolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"MyPolicy\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":\"SQS:SendMessage\",\"Resource\":\"${SQSQueue14}\",\"Condition\":{\"ArnEquals\":{\"aws:SourceArn\":\"${SNSTopic15}\"}}}]}"
            Queues: 
              - !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/${SQSQueue14.QueueName}"

    SQSQueuePolicy15:
        Type: "AWS::SQS::QueuePolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"MyPolicy\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":\"SQS:SendMessage\",\"Resource\":\"${SQSQueue15}\",\"Condition\":{\"ArnEquals\":{\"aws:SourceArn\":\"${SNSTopic16}\"}}}]}"
            Queues: 
              - !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/${SQSQueue15.QueueName}"

    SQSQueuePolicy16:
        Type: "AWS::SQS::QueuePolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"MyPolicy\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":\"SQS:SendMessage\",\"Resource\":\"${SQSQueue16}\",\"Condition\":{\"ArnEquals\":{\"aws:SourceArn\":\"${SNSTopic17}\"}}}]}"
            Queues: 
              - !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/${SQSQueue16.QueueName}"

    SQSQueuePolicy17:
        Type: "AWS::SQS::QueuePolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"MyPolicy\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":\"SQS:SendMessage\",\"Resource\":\"${SQSQueue17}\",\"Condition\":{\"ArnEquals\":{\"aws:SourceArn\":\"${SNSTopic18}\"}}}]}"
            Queues: 
              - !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/${SQSQueue17.QueueName}"

    SQSQueuePolicy18:
        Type: "AWS::SQS::QueuePolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"MyPolicy\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":\"SQS:SendMessage\",\"Resource\":\"${SQSQueue18}\",\"Condition\":{\"ArnEquals\":{\"aws:SourceArn\":\"${SNSTopic19}\"}}}]}"
            Queues: 
              - !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/${SQSQueue18.QueueName}"

    SQSQueuePolicy19:
        Type: "AWS::SQS::QueuePolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"MyPolicy\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":\"SQS:SendMessage\",\"Resource\":\"${SQSQueue19}\",\"Condition\":{\"ArnEquals\":{\"aws:SourceArn\":\"${SNSTopic14}\"}}}]}"
            Queues: 
              - !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/${SQSQueue19.QueueName}"

    SQSQueuePolicy20:
        Type: "AWS::SQS::QueuePolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"MyPolicy\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":\"SQS:SendMessage\",\"Resource\":\"${SQSQueue20}\",\"Condition\":{\"ArnEquals\":{\"aws:SourceArn\":\"${SNSTopic22}\"}}}]}"
            Queues: 
              - !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/${SQSQueue20.QueueName}"

    SQSQueuePolicy21:
        Type: "AWS::SQS::QueuePolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"MyPolicy\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":\"SQS:SendMessage\",\"Resource\":\"${SQSQueue21}\",\"Condition\":{\"ArnEquals\":{\"aws:SourceArn\":\"${SNSTopic20}\"}}}]}"
            Queues: 
              - !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/${SQSQueue21.QueueName}"

    SQSQueuePolicy22:
        Type: "AWS::SQS::QueuePolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"MyPolicy\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":\"SQS:SendMessage\",\"Resource\":\"${SQSQueue22}\",\"Condition\":{\"ArnEquals\":{\"aws:SourceArn\":\"${SNSTopic21}\"}}}]}"
            Queues: 
              - !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/${SQSQueue22.QueueName}"

    SQSQueuePolicy23:
        Type: "AWS::SQS::QueuePolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"MyPolicy\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":\"SQS:SendMessage\",\"Resource\":\"${SQSQueue23}\",\"Condition\":{\"ArnEquals\":{\"aws:SourceArn\":\"${SNSTopic23}\"}}}]}"
            Queues: 
              - !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/${SQSQueue23.QueueName}"

    SQSQueuePolicy24:
        Type: "AWS::SQS::QueuePolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"MyPolicy\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":\"SQS:SendMessage\",\"Resource\":\"${SQSQueue24}\",\"Condition\":{\"ArnEquals\":{\"aws:SourceArn\":\"${SNSTopic24}\"}}}]}"
            Queues: 
              - !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/${SQSQueue24.QueueName}"

    SQSQueuePolicy25:
        Type: "AWS::SQS::QueuePolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"MyPolicy\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":\"SQS:SendMessage\",\"Resource\":\"${SQSQueue25}\",\"Condition\":{\"ArnEquals\":{\"aws:SourceArn\":\"${SNSTopic25}\"}}}]}"
            Queues: 
              - !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/${SQSQueue25.QueueName}"

    SQSQueuePolicy26:
        Type: "AWS::SQS::QueuePolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"MyPolicy\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":\"SQS:SendMessage\",\"Resource\":\"${SQSQueue26}\",\"Condition\":{\"ArnEquals\":{\"aws:SourceArn\":\"${SNSTopic26}\"}}}]}"
            Queues: 
              - !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/${SQSQueue26.QueueName}"

    SQSQueuePolicy27:
        Type: "AWS::SQS::QueuePolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"MyPolicy\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":\"SQS:SendMessage\",\"Resource\":\"${SQSQueue27}\",\"Condition\":{\"ArnEquals\":{\"aws:SourceArn\":\"${SNSTopic27}\"}}}]}"
            Queues: 
              - !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/${SQSQueue27.QueueName}"

    SQSQueuePolicy28:
        Type: "AWS::SQS::QueuePolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"MyPolicy\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":\"SQS:SendMessage\",\"Resource\":\"${SQSQueue28}\",\"Condition\":{\"ArnEquals\":{\"aws:SourceArn\":\"${SNSTopic29}\"}}}]}"
            Queues: 
              - !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/${SQSQueue28.QueueName}"

    SQSQueuePolicy29:
        Type: "AWS::SQS::QueuePolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"MyPolicy\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":\"SQS:SendMessage\",\"Resource\":\"${SQSQueue29}\",\"Condition\":{\"ArnEquals\":{\"aws:SourceArn\":\"${SNSTopic28}\"}}}]}"
            Queues: 
              - !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/${SQSQueue29.QueueName}"

    SQSQueuePolicy30:
        Type: "AWS::SQS::QueuePolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"MyPolicy\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":\"SQS:SendMessage\",\"Resource\":\"${SQSQueue30}\",\"Condition\":{\"ArnEquals\":{\"aws:SourceArn\":\"${SNSTopic31}\"}}}]}"
            Queues: 
              - !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/${SQSQueue30.QueueName}"

    SQSQueuePolicy31:
        Type: "AWS::SQS::QueuePolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"MyPolicy\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":\"SQS:SendMessage\",\"Resource\":\"${SQSQueue31}\",\"Condition\":{\"ArnEquals\":{\"aws:SourceArn\":\"${SNSTopic30}\"}}}]}"
            Queues: 
              - !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/${SQSQueue31.QueueName}"

    SQSQueuePolicy32:
        Type: "AWS::SQS::QueuePolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"MyPolicy\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":\"SQS:SendMessage\",\"Resource\":\"${SQSQueue32}\",\"Condition\":{\"ArnEquals\":{\"aws:SourceArn\":\"${SNSTopic32}\"}}}]}"
            Queues: 
              - !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/${SQSQueue32.QueueName}"

    SQSQueuePolicy33:
        Type: "AWS::SQS::QueuePolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"MyPolicy\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":\"SQS:SendMessage\",\"Resource\":\"${SQSQueue33}\",\"Condition\":{\"ArnEquals\":{\"aws:SourceArn\":\"${SNSTopic33}\"}}}]}"
            Queues: 
              - !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/${SQSQueue33.QueueName}"

    SQSQueuePolicy34:
        Type: "AWS::SQS::QueuePolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"MyPolicy\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":\"SQS:SendMessage\",\"Resource\":\"${SQSQueue34}\",\"Condition\":{\"ArnEquals\":{\"aws:SourceArn\":\"${SNSTopic35}\"}}}]}"
            Queues: 
              - !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/${SQSQueue34.QueueName}"

    SQSQueuePolicy35:
        Type: "AWS::SQS::QueuePolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"MyPolicy\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":\"SQS:SendMessage\",\"Resource\":\"${SQSQueue35}\",\"Condition\":{\"ArnEquals\":{\"aws:SourceArn\":\"${SNSTopic36}\"}}}]}"
            Queues: 
              - !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/${SQSQueue35.QueueName}"

    SQSQueuePolicy36:
        Type: "AWS::SQS::QueuePolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"MyPolicy\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":\"SQS:SendMessage\",\"Resource\":\"${SQSQueue36}\",\"Condition\":{\"ArnEquals\":{\"aws:SourceArn\":\"${SNSTopic37}\"}}}]}"
            Queues: 
              - !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/${SQSQueue36.QueueName}"

    SQSQueuePolicy37:
        Type: "AWS::SQS::QueuePolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"MyPolicy\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":\"SQS:SendMessage\",\"Resource\":\"${SQSQueue37}\",\"Condition\":{\"ArnEquals\":{\"aws:SourceArn\":\"${SNSTopic34}\"}}}]}"
            Queues: 
              - !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/${SQSQueue37.QueueName}"

    SQSQueuePolicy38:
        Type: "AWS::SQS::QueuePolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"MyPolicy\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":\"SQS:SendMessage\",\"Resource\":\"${SQSQueue38}\",\"Condition\":{\"ArnEquals\":{\"aws:SourceArn\":\"${SNSTopic38}\"}}}]}"
            Queues: 
              - !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/${SQSQueue38.QueueName}"

    SQSQueuePolicy39:
        Type: "AWS::SQS::QueuePolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"MyPolicy\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":\"SQS:SendMessage\",\"Resource\":\"${SQSQueue39}\",\"Condition\":{\"ArnEquals\":{\"aws:SourceArn\":\"${SNSTopic39}\"}}}]}"
            Queues: 
              - !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/${SQSQueue39.QueueName}"

    SQSQueuePolicy40:
        Type: "AWS::SQS::QueuePolicy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"MyPolicy\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"*\"},\"Action\":\"SQS:SendMessage\",\"Resource\":\"${SQSQueue40}\",\"Condition\":{\"ArnEquals\":{\"aws:SourceArn\":\"${SNSTopic40}\"}}}]}"
            Queues: 
              - !Sub "https://sqs.${AWS::Region}.amazonaws.com/${AWS::AccountId}/${SQSQueue40.QueueName}"

    ElasticBeanstalkApplication:
        Type: "AWS::ElasticBeanstalk::Application"
        Properties:
            ApplicationName: "Node-Test"

    ElasticBeanstalkApplicationVersion:
        Type: "AWS::ElasticBeanstalk::ApplicationVersion"
        Properties:
            ApplicationName: "Node-Test"
            Description: "c6168e5ca2854693ecbd6cf23e395cbb9fb449a9"
            SourceBundle: 
                S3Bucket: !Ref S3Bucket
                S3Key: "textractjsondynamo/SourceArti/LMonbrD"

    ElasticBeanstalkApplicationVersion2:
        Type: "AWS::ElasticBeanstalk::ApplicationVersion"
        Properties:
            ApplicationName: "Node-Test"
            Description: "e9f4cdcf5dd0d3181723edf9f950619b19dbe99c"
            SourceBundle: 
                S3Bucket: !Ref S3Bucket
                S3Key: "textractjsondynamo/SourceArti/MK4hcTa"

    ElasticBeanstalkApplicationVersion3:
        Type: "AWS::ElasticBeanstalk::ApplicationVersion"
        Properties:
            ApplicationName: "Node-Test"
            Description: "248a83289ba37a5e38b457e2893b102dcb9276ea"
            SourceBundle: 
                S3Bucket: !Ref S3Bucket
                S3Key: "textractjsondynamo/SourceArti/PTNLR6h"

    ElasticBeanstalkApplicationVersion4:
        Type: "AWS::ElasticBeanstalk::ApplicationVersion"
        Properties:
            ApplicationName: "Node-Test"
            Description: "d730e20d67fde3341aafdb0ed8aed702f5d085a7"
            SourceBundle: 
                S3Bucket: !Ref S3Bucket
                S3Key: "textractjsondynamo/SourceArti/7LzyXn9"

    ElasticBeanstalkApplicationVersion5:
        Type: "AWS::ElasticBeanstalk::ApplicationVersion"
        Properties:
            ApplicationName: "Node-Test"
            Description: "08360e1d22be91b86af8372c2569b19c8e0a4f08"
            SourceBundle: 
                S3Bucket: !Ref S3Bucket
                S3Key: "textractjsondynamo/SourceArti/2R5BEER"

    ElasticBeanstalkApplicationVersion6:
        Type: "AWS::ElasticBeanstalk::ApplicationVersion"
        Properties:
            ApplicationName: "Node-Test"
            Description: "b5e08cc005e240ea5dbc8a913f1ad89f2d1b46ce"
            SourceBundle: 
                S3Bucket: !Ref S3Bucket
                S3Key: "textractjsondynamo/SourceArti/2BPyTqp"

    ElasticBeanstalkApplicationVersion7:
        Type: "AWS::ElasticBeanstalk::ApplicationVersion"
        Properties:
            ApplicationName: "Node-Test"
            Description: "d6acf96714a8feb7900e12e1234ed1886f9f2bea"
            SourceBundle: 
                S3Bucket: !Ref S3Bucket
                S3Key: "textractjsondynamo/SourceArti/80YMgl6"

    ElasticBeanstalkApplicationVersion8:
        Type: "AWS::ElasticBeanstalk::ApplicationVersion"
        Properties:
            ApplicationName: "Node-Test"
            Description: "8bfffa053bdaca45494d960e4ca175069f2c17c2"
            SourceBundle: 
                S3Bucket: !Ref S3Bucket
                S3Key: "textractjsondynamo/SourceArti/CjqBDYb"

    ElasticBeanstalkApplicationVersion9:
        Type: "AWS::ElasticBeanstalk::ApplicationVersion"
        Properties:
            ApplicationName: "Node-Test"
            Description: "496dc8ae09014de9df70cac2064bfe11a0dc8402"
            SourceBundle: 
                S3Bucket: !Ref S3Bucket
                S3Key: "textractjsondynamo/SourceArti/RtFfuMc"

    ElasticBeanstalkApplicationVersion10:
        Type: "AWS::ElasticBeanstalk::ApplicationVersion"
        Properties:
            ApplicationName: "Node-Test"
            Description: "9c7f02733f598cd3436e41e9e123efb014ef9654"
            SourceBundle: 
                S3Bucket: !Ref S3Bucket
                S3Key: "textractjsondynamo/SourceArti/zkQsPRE"

    ElasticBeanstalkApplicationVersion11:
        Type: "AWS::ElasticBeanstalk::ApplicationVersion"
        Properties:
            ApplicationName: "Node-Test"
            Description: "062fa29f61696741d0a6010c6ddfa94a928a545c"
            SourceBundle: 
                S3Bucket: !Ref S3Bucket
                S3Key: "textractjsondynamo/SourceArti/LYZJ18g"

    ElasticBeanstalkApplicationVersion12:
        Type: "AWS::ElasticBeanstalk::ApplicationVersion"
        Properties:
            ApplicationName: "Node-Test"
            Description: "c96b83f188ef66664d4052fa38b1f721bf080fc1"
            SourceBundle: 
                S3Bucket: !Ref S3Bucket
                S3Key: "textractjsondynamo/SourceArti/tk7MIh6"

    ElasticBeanstalkApplicationVersion13:
        Type: "AWS::ElasticBeanstalk::ApplicationVersion"
        Properties:
            ApplicationName: "Node-Test"
            Description: "8129de92a2ffe8d10b41b1fe9228245367a7c4c4"
            SourceBundle: 
                S3Bucket: !Ref S3Bucket
                S3Key: "textractjsondynamo/SourceArti/zjyffkD"

    ElasticBeanstalkApplicationVersion14:
        Type: "AWS::ElasticBeanstalk::ApplicationVersion"
        Properties:
            ApplicationName: "Node-Test"
            Description: "3ffacbb7aacd008b9cbb185227377617a8ecf3a6"
            SourceBundle: 
                S3Bucket: !Ref S3Bucket
                S3Key: "textractjsondynamo/SourceArti/IMnCeE4"

    ElasticBeanstalkApplicationVersion15:
        Type: "AWS::ElasticBeanstalk::ApplicationVersion"
        Properties:
            ApplicationName: "Node-Test"
            Description: "608da858492a140bb86de47f9be5ead81984b554"
            SourceBundle: 
                S3Bucket: !Ref S3Bucket
                S3Key: "textractjsondynamo/SourceArti/5djl44M"

    ElasticBeanstalkApplicationVersion16:
        Type: "AWS::ElasticBeanstalk::ApplicationVersion"
        Properties:
            ApplicationName: "Node-Test"
            Description: "24fa72b36c0d929af18a48be281ac5a244781540"
            SourceBundle: 
                S3Bucket: !Ref S3Bucket
                S3Key: "textractjsondynamo/SourceArti/G6bZAfX"

    ElasticBeanstalkApplicationVersion17:
        Type: "AWS::ElasticBeanstalk::ApplicationVersion"
        Properties:
            ApplicationName: "Node-Test"
            Description: "39557714ae43de065dea1d8fb4b6512041f93f45"
            SourceBundle: 
                S3Bucket: !Ref S3Bucket
                S3Key: "textractjsondynamo/SourceArti/8RNGR38"

    ElasticBeanstalkApplicationVersion18:
        Type: "AWS::ElasticBeanstalk::ApplicationVersion"
        Properties:
            ApplicationName: "Node-Test"
            Description: "7ed01d72104632a506b67013bf944064b9763549"
            SourceBundle: 
                S3Bucket: !Ref S3Bucket
                S3Key: "textractjsondynamo/SourceArti/drHVFoS"

    ElasticBeanstalkApplicationVersion19:
        Type: "AWS::ElasticBeanstalk::ApplicationVersion"
        Properties:
            ApplicationName: "Node-Test"
            Description: "5e7909b87d4daa7c9e15d8198858ec9af9fc8dfd"
            SourceBundle: 
                S3Bucket: !Ref S3Bucket
                S3Key: "textractjsondynamo/SourceArti/1ILYkfm"

    ElasticBeanstalkApplicationVersion20:
        Type: "AWS::ElasticBeanstalk::ApplicationVersion"
        Properties:
            ApplicationName: "Node-Test"
            Description: "8130dc68cb590f0794bafed4b01644665ef7baad"
            SourceBundle: 
                S3Bucket: !Ref S3Bucket
                S3Key: "textractjsondynamo/SourceArti/AO1MzCS"

    ElasticBeanstalkApplicationVersion21:
        Type: "AWS::ElasticBeanstalk::ApplicationVersion"
        Properties:
            ApplicationName: "Node-Test"
            Description: "2ee57133cd1a80f1586719b786110fd9d12088b5"
            SourceBundle: 
                S3Bucket: !Ref S3Bucket
                S3Key: "textractjsondynamo/SourceArti/Hgvpl4b"

    ElasticBeanstalkApplicationVersion22:
        Type: "AWS::ElasticBeanstalk::ApplicationVersion"
        Properties:
            ApplicationName: "Node-Test"
            Description: "c8f00f7b7b8de7eefa440a04f74aae9af100eba6"
            SourceBundle: 
                S3Bucket: !Ref S3Bucket
                S3Key: "textractjsondynamo/SourceArti/9AtscZP"

    ElasticBeanstalkApplicationVersion23:
        Type: "AWS::ElasticBeanstalk::ApplicationVersion"
        Properties:
            ApplicationName: "Node-Test"
            Description: "155acf902d21bbfd13f91609c9aff45e7c6bc4d7"
            SourceBundle: 
                S3Bucket: !Ref S3Bucket
                S3Key: "textractjsondynamo/SourceArti/eXN3oBj"

    ElasticBeanstalkApplicationVersion24:
        Type: "AWS::ElasticBeanstalk::ApplicationVersion"
        Properties:
            ApplicationName: "Node-Test"
            Description: "4b2976d24900582a1462c14a93341831a04cac02"
            SourceBundle: 
                S3Bucket: !Ref S3Bucket
                S3Key: "textractjsondynamo/SourceArti/eYdTxid"

    ElasticBeanstalkApplicationVersion25:
        Type: "AWS::ElasticBeanstalk::ApplicationVersion"
        Properties:
            ApplicationName: "Node-Test"
            Description: "7d4954a21f517c7a1798fd9c5c9b90e3a4e2de59"
            SourceBundle: 
                S3Bucket: !Ref S3Bucket
                S3Key: "textractjsondynamo/SourceArti/GsQFkpS"

    ElasticBeanstalkApplicationVersion26:
        Type: "AWS::ElasticBeanstalk::ApplicationVersion"
        Properties:
            ApplicationName: "Node-Test"
            Description: "45d8be490b81765c13b92a29fe6a0b8a6e852989"
            SourceBundle: 
                S3Bucket: !Ref S3Bucket
                S3Key: "textractjsondynamo/SourceArti/dcLlduB"

    ElasticBeanstalkApplicationVersion27:
        Type: "AWS::ElasticBeanstalk::ApplicationVersion"
        Properties:
            ApplicationName: "Node-Test"
            Description: "ecf0394a81c0f2626e333c164162372e079fad6a"
            SourceBundle: 
                S3Bucket: !Ref S3Bucket
                S3Key: "textractjsondynamo/SourceArti/BKgk2x9"

    ElasticBeanstalkApplicationVersion28:
        Type: "AWS::ElasticBeanstalk::ApplicationVersion"
        Properties:
            ApplicationName: "Node-Test"
            Description: "a7b641f4c2d5f0ab1073a839ad420039db2286fe"
            SourceBundle: 
                S3Bucket: !Ref S3Bucket
                S3Key: "textractjsondynamo/SourceArti/9p1IgIU"

    ElasticBeanstalkApplicationVersion29:
        Type: "AWS::ElasticBeanstalk::ApplicationVersion"
        Properties:
            ApplicationName: "Node-Test"
            Description: "40ea2bd9d7060ee959a1f04f96702c890fc35476"
            SourceBundle: 
                S3Bucket: !Ref S3Bucket
                S3Key: "textractjsondynamo/SourceArti/pzJe02M"

    ElasticBeanstalkApplicationVersion30:
        Type: "AWS::ElasticBeanstalk::ApplicationVersion"
        Properties:
            ApplicationName: "Node-Test"
            Description: "015d444bfe3a24a69d58463db5d82cf80ea821d8"
            SourceBundle: 
                S3Bucket: !Ref S3Bucket
                S3Key: "textractjsondynamo/SourceArti/71KdAld"

    ElasticBeanstalkApplicationVersion31:
        Type: "AWS::ElasticBeanstalk::ApplicationVersion"
        Properties:
            ApplicationName: "Node-Test"
            Description: "eee01d88ddaec17f5fa93072ed4dfaa24e609a3e"
            SourceBundle: 
                S3Bucket: !Ref S3Bucket
                S3Key: "textractjsondynamo/SourceArti/X61leTW"

    ElasticBeanstalkApplicationVersion32:
        Type: "AWS::ElasticBeanstalk::ApplicationVersion"
        Properties:
            ApplicationName: "Node-Test"
            Description: "d894515803f5bb5f26b7ddf24653dfdeecee40ff"
            SourceBundle: 
                S3Bucket: !Ref S3Bucket
                S3Key: "textractjsondynamo/SourceArti/X57L3em"

    ElasticBeanstalkApplicationVersion33:
        Type: "AWS::ElasticBeanstalk::ApplicationVersion"
        Properties:
            ApplicationName: "Node-Test"
            Description: "f1aa8da237bc8b019422e75c6bdd058f9b9b3ac1"
            SourceBundle: 
                S3Bucket: !Ref S3Bucket
                S3Key: "textractjsondynamo/SourceArti/AHhLBxb"

    ElasticBeanstalkApplicationVersion34:
        Type: "AWS::ElasticBeanstalk::ApplicationVersion"
        Properties:
            ApplicationName: "Node-Test"
            SourceBundle: 
                S3Bucket: !Ref S3Bucket5
                S3Key: "frontend/package.zip"

    ElasticBeanstalkEnvironment:
        Type: "AWS::ElasticBeanstalk::Environment"
        Properties:
            EnvironmentName: "Nodetest-env"
            ApplicationName: "Node-Test"
            VersionLabel: "code-pipeline-1677550890715-c6168e5ca2854693ecbd6cf23e395cbb9fb449a9"
            SolutionStackName: "64bit Amazon Linux 2 v5.6.4 running Node.js 16"
            PlatformArn: !Sub "arn:aws:elasticbeanstalk:${AWS::Region}::platform/Node.js 16 running on 64bit Amazon Linux 2/5.6.4"
            Tier: 
                Name: "WebServer"
                Type: "Standard"
                Version: "1.0"
            CNAMEPrefix: "Nodetest-env"
            Tags: 
              - 
                Key: "elasticbeanstalk:environment-name"
                Value: "Nodetest-env"
              - 
                Key: "elasticbeanstalk:environment-id"
                Value: "e-nym28hev8j"
              - 
                Key: "Name"
                Value: "Nodetest-env"

    ElasticBeanstalkConfigurationTemplate:
        Type: "AWS::ElasticBeanstalk::ConfigurationTemplate"
        Properties:
            ApplicationName: "Node-Test"
            SolutionStackName: "64bit Amazon Linux 2 v5.6.4 running Node.js 16"
            PlatformArn: !Sub "arn:aws:elasticbeanstalk:${AWS::Region}::platform/Node.js 16 running on 64bit Amazon Linux 2/5.6.4"
            EnvironmentId: "Nodetest-env"
            OptionSettings: 
              - 
                ResourceName: "AWSEBAutoScalingGroup"
                Namespace: "aws:autoscaling:asg"
                OptionName: "Availability Zones"
                Value: "Any"
              - 
                ResourceName: "AWSEBAutoScalingGroup"
                Namespace: "aws:autoscaling:asg"
                OptionName: "Cooldown"
                Value: "360"
              - 
                ResourceName: "AWSEBAutoScalingGroup"
                Namespace: "aws:autoscaling:asg"
                OptionName: "Custom Availability Zones"
                Value: ""
              - 
                ResourceName: "AWSEBAutoScalingGroup"
                Namespace: "aws:autoscaling:asg"
                OptionName: "EnableCapacityRebalancing"
                Value: "false"
              - 
                ResourceName: "AWSEBAutoScalingGroup"
                Namespace: "aws:autoscaling:asg"
                OptionName: "MaxSize"
                Value: "4"
              - 
                ResourceName: "AWSEBAutoScalingGroup"
                Namespace: "aws:autoscaling:asg"
                OptionName: "MinSize"
                Value: "1"
              - 
                ResourceName: "AWSEBEC2LaunchTemplate"
                Namespace: "aws:autoscaling:launchconfiguration"
                OptionName: "BlockDeviceMappings"
              - 
                Namespace: "aws:autoscaling:launchconfiguration"
                OptionName: "DisableIMDSv1"
                Value: "true"
              - 
                ResourceName: "AWSEBEC2LaunchTemplate"
                Namespace: "aws:autoscaling:launchconfiguration"
                OptionName: "EC2KeyName"
              - 
                ResourceName: "AWSEBEC2LaunchTemplate"
                Namespace: "aws:autoscaling:launchconfiguration"
                OptionName: "IamInstanceProfile"
                Value: !Ref IAMRole2
              - 
                ResourceName: "AWSEBEC2LaunchTemplate"
                Namespace: "aws:autoscaling:launchconfiguration"
                OptionName: "ImageId"
                Value: "ami-0b71f75b9b4d041a4"
              - 
                Namespace: "aws:autoscaling:launchconfiguration"
                OptionName: "InstanceType"
                Value: "t2.micro"
              - 
                ResourceName: "AWSEBEC2LaunchTemplate"
                Namespace: "aws:autoscaling:launchconfiguration"
                OptionName: "MonitoringInterval"
                Value: "5 minute"
              - 
                ResourceName: "AWSEBEC2LaunchTemplate"
                Namespace: "aws:autoscaling:launchconfiguration"
                OptionName: "RootVolumeIOPS"
              - 
                ResourceName: "AWSEBEC2LaunchTemplate"
                Namespace: "aws:autoscaling:launchconfiguration"
                OptionName: "RootVolumeSize"
              - 
                ResourceName: "AWSEBEC2LaunchTemplate"
                Namespace: "aws:autoscaling:launchconfiguration"
                OptionName: "RootVolumeThroughput"
              - 
                ResourceName: "AWSEBEC2LaunchTemplate"
                Namespace: "aws:autoscaling:launchconfiguration"
                OptionName: "RootVolumeType"
              - 
                Namespace: "aws:autoscaling:launchconfiguration"
                OptionName: "SSHSourceRestriction"
                Value: "tcp,22,22,0.0.0.0/0"
              - 
                ResourceName: "AWSEBEC2LaunchTemplate"
                Namespace: "aws:autoscaling:launchconfiguration"
                OptionName: "SecurityGroups"
                Value: "awseb-e-nym28hev8j-stack-AWSEBSecurityGroup-11EQYAV8WOXN7"
              - 
                ResourceName: "AWSEBCloudwatchAlarmLow"
                Namespace: "aws:autoscaling:trigger"
                OptionName: "BreachDuration"
                Value: "5"
              - 
                ResourceName: "AWSEBCloudwatchAlarmLow"
                Namespace: "aws:autoscaling:trigger"
                OptionName: "EvaluationPeriods"
                Value: "1"
              - 
                ResourceName: "AWSEBAutoScalingScaleDownPolicy"
                Namespace: "aws:autoscaling:trigger"
                OptionName: "LowerBreachScaleIncrement"
                Value: "-1"
              - 
                ResourceName: "AWSEBCloudwatchAlarmLow"
                Namespace: "aws:autoscaling:trigger"
                OptionName: "LowerThreshold"
                Value: "2000000"
              - 
                ResourceName: "AWSEBCloudwatchAlarmLow"
                Namespace: "aws:autoscaling:trigger"
                OptionName: "MeasureName"
                Value: "NetworkOut"
              - 
                ResourceName: "AWSEBCloudwatchAlarmLow"
                Namespace: "aws:autoscaling:trigger"
                OptionName: "Period"
                Value: "5"
              - 
                ResourceName: "AWSEBCloudwatchAlarmLow"
                Namespace: "aws:autoscaling:trigger"
                OptionName: "Statistic"
                Value: "Average"
              - 
                ResourceName: "AWSEBCloudwatchAlarmLow"
                Namespace: "aws:autoscaling:trigger"
                OptionName: "Unit"
                Value: "Bytes"
              - 
                ResourceName: "AWSEBAutoScalingScaleUpPolicy"
                Namespace: "aws:autoscaling:trigger"
                OptionName: "UpperBreachScaleIncrement"
                Value: "1"
              - 
                ResourceName: "AWSEBCloudwatchAlarmHigh"
                Namespace: "aws:autoscaling:trigger"
                OptionName: "UpperThreshold"
                Value: "6000000"
              - 
                ResourceName: "AWSEBAutoScalingGroup"
                Namespace: "aws:autoscaling:updatepolicy:rollingupdate"
                OptionName: "MaxBatchSize"
              - 
                ResourceName: "AWSEBAutoScalingGroup"
                Namespace: "aws:autoscaling:updatepolicy:rollingupdate"
                OptionName: "MinInstancesInService"
              - 
                ResourceName: "AWSEBAutoScalingGroup"
                Namespace: "aws:autoscaling:updatepolicy:rollingupdate"
                OptionName: "PauseTime"
              - 
                ResourceName: "AWSEBAutoScalingGroup"
                Namespace: "aws:autoscaling:updatepolicy:rollingupdate"
                OptionName: "RollingUpdateEnabled"
                Value: "false"
              - 
                ResourceName: "AWSEBAutoScalingGroup"
                Namespace: "aws:autoscaling:updatepolicy:rollingupdate"
                OptionName: "RollingUpdateType"
                Value: "Time"
              - 
                ResourceName: "AWSEBAutoScalingGroup"
                Namespace: "aws:autoscaling:updatepolicy:rollingupdate"
                OptionName: "Timeout"
                Value: "PT30M"
              - 
                Namespace: "aws:cloudformation:template:parameter"
                OptionName: "AppSource"
                Value: !Sub "https://elasticbeanstalk-platform-assets-${AWS::Region}.s3.${AWS::Region}.amazonaws.com/stalks/eb_nodejs16_amazon_linux_2_1.0.1854.0_20230127020806/sampleapp/EBSampleApp-Nodejs.zip"
              - 
                Namespace: "aws:cloudformation:template:parameter"
                OptionName: "EnvironmentVariables"
              - 
                Namespace: "aws:cloudformation:template:parameter"
                OptionName: "HooksPkgUrl"
                Value: !Sub "https://elasticbeanstalk-platform-assets-${AWS::Region}.s3.${AWS::Region}.amazonaws.com/stalks/eb_nodejs16_amazon_linux_2_1.0.1854.0_20230127020806/lib/hooks.tar.gz"
              - 
                Namespace: "aws:cloudformation:template:parameter"
                OptionName: "InstancePort"
                Value: "80"
              - 
                Namespace: "aws:cloudformation:template:parameter"
                OptionName: "InstanceTypeFamily"
                Value: "t2"
              - 
                Namespace: "aws:cloudformation:template:parameter"
                OptionName: "StaticFiles"
              - 
                Namespace: "aws:ec2:instances"
                OptionName: "EnableSpot"
                Value: "false"
              - 
                Namespace: "aws:ec2:instances"
                OptionName: "InstanceTypes"
                Value: "t2.micro, t2.small"
              - 
                Namespace: "aws:ec2:instances"
                OptionName: "SpotFleetOnDemandAboveBasePercentage"
                Value: "70"
              - 
                Namespace: "aws:ec2:instances"
                OptionName: "SpotFleetOnDemandBase"
                Value: "0"
              - 
                Namespace: "aws:ec2:instances"
                OptionName: "SpotMaxPrice"
              - 
                Namespace: "aws:ec2:instances"
                OptionName: "SupportedArchitectures"
                Value: "x86_64"
              - 
                ResourceName: "AWSEBEC2LaunchTemplate"
                Namespace: "aws:ec2:vpc"
                OptionName: "AssociatePublicIpAddress"
              - 
                Namespace: "aws:ec2:vpc"
                OptionName: "ELBScheme"
                Value: "public"
              - 
                Namespace: "aws:ec2:vpc"
                OptionName: "ELBSubnets"
              - 
                ResourceName: "AWSEBAutoScalingGroup"
                Namespace: "aws:ec2:vpc"
                OptionName: "Subnets"
              - 
                ResourceName: "AWSEBLoadBalancerSecurityGroup"
                Namespace: "aws:ec2:vpc"
                OptionName: "VPCId"
              - 
                Namespace: "aws:elasticbeanstalk:application"
                OptionName: "Application Healthcheck URL"
                Value: ""
              - 
                Namespace: "aws:elasticbeanstalk:cloudwatch:logs"
                OptionName: "DeleteOnTerminate"
                Value: "false"
              - 
                Namespace: "aws:elasticbeanstalk:cloudwatch:logs"
                OptionName: "RetentionInDays"
                Value: "7"
              - 
                Namespace: "aws:elasticbeanstalk:cloudwatch:logs"
                OptionName: "StreamLogs"
                Value: "false"
              - 
                Namespace: "aws:elasticbeanstalk:cloudwatch:logs:health"
                OptionName: "DeleteOnTerminate"
                Value: "false"
              - 
                Namespace: "aws:elasticbeanstalk:cloudwatch:logs:health"
                OptionName: "HealthStreamingEnabled"
                Value: "false"
              - 
                Namespace: "aws:elasticbeanstalk:cloudwatch:logs:health"
                OptionName: "RetentionInDays"
                Value: "7"
              - 
                Namespace: "aws:elasticbeanstalk:command"
                OptionName: "BatchSize"
                Value: "100"
              - 
                Namespace: "aws:elasticbeanstalk:command"
                OptionName: "BatchSizeType"
                Value: "Percentage"
              - 
                Namespace: "aws:elasticbeanstalk:command"
                OptionName: "DeploymentPolicy"
                Value: "AllAtOnce"
              - 
                Namespace: "aws:elasticbeanstalk:command"
                OptionName: "IgnoreHealthCheck"
                Value: "false"
              - 
                Namespace: "aws:elasticbeanstalk:command"
                OptionName: "Timeout"
                Value: "600"
              - 
                Namespace: "aws:elasticbeanstalk:control"
                OptionName: "DefaultSSHPort"
                Value: "22"
              - 
                Namespace: "aws:elasticbeanstalk:control"
                OptionName: "LaunchTimeout"
                Value: "0"
              - 
                Namespace: "aws:elasticbeanstalk:control"
                OptionName: "LaunchType"
                Value: "Migration"
              - 
                Namespace: "aws:elasticbeanstalk:control"
                OptionName: "RollbackLaunchOnFailure"
                Value: "false"
              - 
                Namespace: "aws:elasticbeanstalk:environment"
                OptionName: "EnvironmentType"
                Value: "LoadBalanced"
              - 
                Namespace: "aws:elasticbeanstalk:environment"
                OptionName: "ExternalExtensionsS3Bucket"
              - 
                Namespace: "aws:elasticbeanstalk:environment"
                OptionName: "ExternalExtensionsS3Key"
              - 
                Namespace: "aws:elasticbeanstalk:environment"
                OptionName: "LoadBalancerIsShared"
                Value: "false"
              - 
                Namespace: "aws:elasticbeanstalk:environment"
                OptionName: "LoadBalancerType"
                Value: "application"
              - 
                Namespace: "aws:elasticbeanstalk:environment"
                OptionName: "ServiceRole"
                Value: !GetAtt IAMRole3.Arn
              - 
                ResourceName: "AWSEBV2LoadBalancerTargetGroup"
                Namespace: "aws:elasticbeanstalk:environment:process:default"
                OptionName: "DeregistrationDelay"
                Value: "20"
              - 
                ResourceName: "AWSEBV2LoadBalancerTargetGroup"
                Namespace: "aws:elasticbeanstalk:environment:process:default"
                OptionName: "HealthCheckInterval"
                Value: "15"
              - 
                ResourceName: "AWSEBV2LoadBalancerTargetGroup"
                Namespace: "aws:elasticbeanstalk:environment:process:default"
                OptionName: "HealthCheckPath"
                Value: "/"
              - 
                ResourceName: "AWSEBV2LoadBalancerTargetGroup"
                Namespace: "aws:elasticbeanstalk:environment:process:default"
                OptionName: "HealthCheckTimeout"
                Value: "5"
              - 
                ResourceName: "AWSEBV2LoadBalancerTargetGroup"
                Namespace: "aws:elasticbeanstalk:environment:process:default"
                OptionName: "HealthyThresholdCount"
                Value: "3"
              - 
                ResourceName: "AWSEBV2LoadBalancerTargetGroup"
                Namespace: "aws:elasticbeanstalk:environment:process:default"
                OptionName: "MatcherHTTPCode"
              - 
                ResourceName: "AWSEBV2LoadBalancerTargetGroup"
                Namespace: "aws:elasticbeanstalk:environment:process:default"
                OptionName: "Port"
                Value: "80"
              - 
                ResourceName: "AWSEBV2LoadBalancerTargetGroup"
                Namespace: "aws:elasticbeanstalk:environment:process:default"
                OptionName: "Protocol"
                Value: "HTTP"
              - 
                ResourceName: "AWSEBV2LoadBalancerTargetGroup"
                Namespace: "aws:elasticbeanstalk:environment:process:default"
                OptionName: "StickinessEnabled"
                Value: "false"
              - 
                ResourceName: "AWSEBV2LoadBalancerTargetGroup"
                Namespace: "aws:elasticbeanstalk:environment:process:default"
                OptionName: "StickinessLBCookieDuration"
                Value: "86400"
              - 
                ResourceName: "AWSEBV2LoadBalancerTargetGroup"
                Namespace: "aws:elasticbeanstalk:environment:process:default"
                OptionName: "StickinessType"
                Value: "lb_cookie"
              - 
                ResourceName: "AWSEBV2LoadBalancerTargetGroup"
                Namespace: "aws:elasticbeanstalk:environment:process:default"
                OptionName: "UnhealthyThresholdCount"
                Value: "5"
              - 
                Namespace: "aws:elasticbeanstalk:environment:proxy"
                OptionName: "ProxyServer"
                Value: "nginx"
              - 
                Namespace: "aws:elasticbeanstalk:healthreporting:system"
                OptionName: "ConfigDocument"
                Value: "{\"Version\":1,\"CloudWatchMetrics\":{\"Instance\":{\"CPUIrq\":null,\"LoadAverage5min\":null,\"ApplicationRequests5xx\":null,\"ApplicationRequests4xx\":null,\"CPUUser\":null,\"LoadAverage1min\":null,\"ApplicationLatencyP50\":null,\"CPUIdle\":null,\"InstanceHealth\":null,\"ApplicationLatencyP95\":null,\"ApplicationLatencyP85\":null,\"RootFilesystemUtil\":null,\"ApplicationLatencyP90\":null,\"CPUSystem\":null,\"ApplicationLatencyP75\":null,\"CPUSoftirq\":null,\"ApplicationLatencyP10\":null,\"ApplicationLatencyP99\":null,\"ApplicationRequestsTotal\":null,\"ApplicationLatencyP99.9\":null,\"ApplicationRequests3xx\":null,\"ApplicationRequests2xx\":null,\"CPUIowait\":null,\"CPUNice\":null},\"Environment\":{\"InstancesSevere\":null,\"InstancesDegraded\":null,\"ApplicationRequests5xx\":null,\"ApplicationRequests4xx\":null,\"ApplicationLatencyP50\":null,\"ApplicationLatencyP95\":null,\"ApplicationLatencyP85\":null,\"InstancesUnknown\":null,\"ApplicationLatencyP90\":null,\"InstancesInfo\":null,\"InstancesPending\":null,\"ApplicationLatencyP75\":null,\"ApplicationLatencyP10\":null,\"ApplicationLatencyP99\":null,\"ApplicationRequestsTotal\":null,\"InstancesNoData\":null,\"ApplicationLatencyP99.9\":null,\"ApplicationRequests3xx\":null,\"ApplicationRequests2xx\":null,\"InstancesOk\":null,\"InstancesWarning\":null}}}"
              - 
                Namespace: "aws:elasticbeanstalk:healthreporting:system"
                OptionName: "EnhancedHealthAuthEnabled"
                Value: "true"
              - 
                Namespace: "aws:elasticbeanstalk:healthreporting:system"
                OptionName: "HealthCheckSuccessThreshold"
                Value: "Ok"
              - 
                Namespace: "aws:elasticbeanstalk:healthreporting:system"
                OptionName: "SystemType"
                Value: "enhanced"
              - 
                Namespace: "aws:elasticbeanstalk:hostmanager"
                OptionName: "LogPublicationControl"
                Value: "false"
              - 
                Namespace: "aws:elasticbeanstalk:managedactions"
                OptionName: "ManagedActionsEnabled"
                Value: "false"
              - 
                Namespace: "aws:elasticbeanstalk:managedactions"
                OptionName: "PreferredStartTime"
              - 
                Namespace: "aws:elasticbeanstalk:managedactions"
                OptionName: "ServiceRoleForManagedUpdates"
                Value: !GetAtt IAMRole3.Arn
              - 
                Namespace: "aws:elasticbeanstalk:managedactions:platformupdate"
                OptionName: "InstanceRefreshEnabled"
                Value: "false"
              - 
                Namespace: "aws:elasticbeanstalk:managedactions:platformupdate"
                OptionName: "UpdateLevel"
              - 
                Namespace: "aws:elasticbeanstalk:monitoring"
                OptionName: "Automatically Terminate Unhealthy Instances"
                Value: "true"
              - 
                Namespace: "aws:elasticbeanstalk:sns:topics"
                OptionName: "Notification Endpoint"
              - 
                Namespace: "aws:elasticbeanstalk:sns:topics"
                OptionName: "Notification Protocol"
                Value: "email"
              - 
                Namespace: "aws:elasticbeanstalk:sns:topics"
                OptionName: "Notification Topic ARN"
              - 
                Namespace: "aws:elasticbeanstalk:sns:topics"
                OptionName: "Notification Topic Name"
              - 
                Namespace: "aws:elasticbeanstalk:trafficsplitting"
                OptionName: "EvaluationTime"
              - 
                Namespace: "aws:elasticbeanstalk:trafficsplitting"
                OptionName: "NewVersionPercent"
              - 
                Namespace: "aws:elasticbeanstalk:xray"
                OptionName: "XRayEnabled"
                Value: "false"
              - 
                ResourceName: "AWSEBV2LoadBalancerListener"
                Namespace: "aws:elbv2:listener:default"
                OptionName: "DefaultProcess"
                Value: "default"
              - 
                ResourceName: "AWSEBV2LoadBalancerListener"
                Namespace: "aws:elbv2:listener:default"
                OptionName: "ListenerEnabled"
                Value: "true"
              - 
                ResourceName: "AWSEBV2LoadBalancerListener"
                Namespace: "aws:elbv2:listener:default"
                OptionName: "Protocol"
                Value: "HTTP"
              - 
                ResourceName: "AWSEBV2LoadBalancerListener"
                Namespace: "aws:elbv2:listener:default"
                OptionName: "Rules"
              - 
                ResourceName: "AWSEBV2LoadBalancerListener"
                Namespace: "aws:elbv2:listener:default"
                OptionName: "SSLCertificateArns"
              - 
                ResourceName: "AWSEBV2LoadBalancerListener"
                Namespace: "aws:elbv2:listener:default"
                OptionName: "SSLPolicy"
              - 
                ResourceName: "AWSEBV2LoadBalancer"
                Namespace: "aws:elbv2:loadbalancer"
                OptionName: "AccessLogsS3Bucket"
              - 
                ResourceName: "AWSEBV2LoadBalancer"
                Namespace: "aws:elbv2:loadbalancer"
                OptionName: "AccessLogsS3Enabled"
                Value: "false"
              - 
                ResourceName: "AWSEBV2LoadBalancer"
                Namespace: "aws:elbv2:loadbalancer"
                OptionName: "AccessLogsS3Prefix"
              - 
                ResourceName: "AWSEBV2LoadBalancer"
                Namespace: "aws:elbv2:loadbalancer"
                OptionName: "IdleTimeout"
              - 
                ResourceName: "AWSEBV2LoadBalancer"
                Namespace: "aws:elbv2:loadbalancer"
                OptionName: "SecurityGroups"
                Value: !Sub "${ElasticLoadBalancingV2LoadBalancer.SecurityGroups}"
              - 
                Namespace: "aws:rds:dbinstance"
                OptionName: "HasCoupledDatabase"
                Value: "false"

    CloudWatchAlarm:
        Type: "AWS::CloudWatch::Alarm"
        Properties:
            AlarmName: !Sub "TargetTracking-table/${DynamoDBTable}-AlarmHigh-142bfc07-6ac3-4769-9c8a-40d560d9ef7d"
            AlarmDescription: !Sub "DO NOT EDIT OR DELETE. For TargetTrackingScaling policy arn:aws:autoscaling:${AWS::Region}:${AWS::AccountId}:scalingPolicy:4a7289b2-9aa6-4a48-baf5-ffa246e4398c:resource/dynamodb/table/${DynamoDBTable}:policyName/$${DynamoDBTable}-scaling-policy:createdBy/24f9b6e8-b31d-4068-b37a-eccb2da1fe41."
            ActionsEnabled: true
            AlarmActions: 
              - !Sub "arn:aws:autoscaling:${AWS::Region}:${AWS::AccountId}:scalingPolicy:4a7289b2-9aa6-4a48-baf5-ffa246e4398c:resource/dynamodb/table/${DynamoDBTable}:policyName/$${DynamoDBTable}-scaling-policy:createdBy/24f9b6e8-b31d-4068-b37a-eccb2da1fe41"
            MetricName: "ConsumedReadCapacityUnits"
            Namespace: "AWS/DynamoDB"
            Statistic: "Sum"
            Dimensions: 
              - 
                Name: "TableName"
                Value: !Ref DynamoDBTable
            Period: 60
            EvaluationPeriods: 2
            Threshold: 42
            ComparisonOperator: "GreaterThanThreshold"

    CloudWatchAlarm2:
        Type: "AWS::CloudWatch::Alarm"
        Properties:
            AlarmName: !Sub "TargetTracking-table/${DynamoDBTable}-AlarmHigh-91fb4ae6-61ac-4710-8474-8e844e7ed853"
            AlarmDescription: !Sub "DO NOT EDIT OR DELETE. For TargetTrackingScaling policy arn:aws:autoscaling:${AWS::Region}:${AWS::AccountId}:scalingPolicy:989782f4-1bec-4949-9182-f458531e3a86:resource/dynamodb/table/${DynamoDBTable}:policyName/$${DynamoDBTable}-scaling-policy:createdBy/4b6f18be-afb3-4038-9602-fb8880021b87."
            ActionsEnabled: true
            AlarmActions: 
              - !Sub "arn:aws:autoscaling:${AWS::Region}:${AWS::AccountId}:scalingPolicy:989782f4-1bec-4949-9182-f458531e3a86:resource/dynamodb/table/${DynamoDBTable}:policyName/$${DynamoDBTable}-scaling-policy:createdBy/4b6f18be-afb3-4038-9602-fb8880021b87"
            MetricName: "ConsumedWriteCapacityUnits"
            Namespace: "AWS/DynamoDB"
            Statistic: "Sum"
            Dimensions: 
              - 
                Name: "TableName"
                Value: !Ref DynamoDBTable
            Period: 60
            EvaluationPeriods: 2
            Threshold: 42
            ComparisonOperator: "GreaterThanThreshold"

    CloudWatchAlarm3:
        Type: "AWS::CloudWatch::Alarm"
        Properties:
            AlarmName: !Sub "TargetTracking-table/${DynamoDBTable}-AlarmLow-262d1499-9237-4550-b943-782e9cbee89e"
            AlarmDescription: !Sub "DO NOT EDIT OR DELETE. For TargetTrackingScaling policy arn:aws:autoscaling:${AWS::Region}:${AWS::AccountId}:scalingPolicy:989782f4-1bec-4949-9182-f458531e3a86:resource/dynamodb/table/${DynamoDBTable}:policyName/$${DynamoDBTable}-scaling-policy:createdBy/4b6f18be-afb3-4038-9602-fb8880021b87."
            ActionsEnabled: true
            AlarmActions: 
              - !Sub "arn:aws:autoscaling:${AWS::Region}:${AWS::AccountId}:scalingPolicy:989782f4-1bec-4949-9182-f458531e3a86:resource/dynamodb/table/${DynamoDBTable}:policyName/$${DynamoDBTable}-scaling-policy:createdBy/4b6f18be-afb3-4038-9602-fb8880021b87"
            MetricName: "ConsumedWriteCapacityUnits"
            Namespace: "AWS/DynamoDB"
            Statistic: "Sum"
            Dimensions: 
              - 
                Name: "TableName"
                Value: !Ref DynamoDBTable
            Period: 60
            EvaluationPeriods: 15
            Threshold: 30
            ComparisonOperator: "LessThanThreshold"

    CloudWatchAlarm4:
        Type: "AWS::CloudWatch::Alarm"
        Properties:
            AlarmName: !Sub "TargetTracking-table/${DynamoDBTable}-AlarmLow-5a2cb679-f600-45aa-8ffb-14c9120f7257"
            AlarmDescription: !Sub "DO NOT EDIT OR DELETE. For TargetTrackingScaling policy arn:aws:autoscaling:${AWS::Region}:${AWS::AccountId}:scalingPolicy:4a7289b2-9aa6-4a48-baf5-ffa246e4398c:resource/dynamodb/table/${DynamoDBTable}:policyName/$${DynamoDBTable}-scaling-policy:createdBy/24f9b6e8-b31d-4068-b37a-eccb2da1fe41."
            ActionsEnabled: true
            AlarmActions: 
              - !Sub "arn:aws:autoscaling:${AWS::Region}:${AWS::AccountId}:scalingPolicy:4a7289b2-9aa6-4a48-baf5-ffa246e4398c:resource/dynamodb/table/${DynamoDBTable}:policyName/$${DynamoDBTable}-scaling-policy:createdBy/24f9b6e8-b31d-4068-b37a-eccb2da1fe41"
            MetricName: "ConsumedReadCapacityUnits"
            Namespace: "AWS/DynamoDB"
            Statistic: "Sum"
            Dimensions: 
              - 
                Name: "TableName"
                Value: !Ref DynamoDBTable
            Period: 60
            EvaluationPeriods: 15
            Threshold: 30
            ComparisonOperator: "LessThanThreshold"

    CloudWatchAlarm5:
        Type: "AWS::CloudWatch::Alarm"
        Properties:
            AlarmName: !Sub "TargetTracking-table/${DynamoDBTable}-ProvisionedCapacityHigh-3d9c76c1-0499-4697-9864-8cee087f887a"
            AlarmDescription: !Sub "DO NOT EDIT OR DELETE. For TargetTrackingScaling policy arn:aws:autoscaling:${AWS::Region}:${AWS::AccountId}:scalingPolicy:4a7289b2-9aa6-4a48-baf5-ffa246e4398c:resource/dynamodb/table/${DynamoDBTable}:policyName/$${DynamoDBTable}-scaling-policy:createdBy/24f9b6e8-b31d-4068-b37a-eccb2da1fe41."
            ActionsEnabled: true
            AlarmActions: 
              - !Sub "arn:aws:autoscaling:${AWS::Region}:${AWS::AccountId}:scalingPolicy:4a7289b2-9aa6-4a48-baf5-ffa246e4398c:resource/dynamodb/table/${DynamoDBTable}:policyName/$${DynamoDBTable}-scaling-policy:createdBy/24f9b6e8-b31d-4068-b37a-eccb2da1fe41"
            MetricName: "ProvisionedReadCapacityUnits"
            Namespace: "AWS/DynamoDB"
            Statistic: "Average"
            Dimensions: 
              - 
                Name: "TableName"
                Value: !Ref DynamoDBTable
            Period: 300
            EvaluationPeriods: 3
            Threshold: 1
            ComparisonOperator: "GreaterThanThreshold"

    CloudWatchAlarm6:
        Type: "AWS::CloudWatch::Alarm"
        Properties:
            AlarmName: !Sub "TargetTracking-table/${DynamoDBTable}-ProvisionedCapacityHigh-69db0e50-0068-4b5c-8317-4e04b0f0179e"
            AlarmDescription: !Sub "DO NOT EDIT OR DELETE. For TargetTrackingScaling policy arn:aws:autoscaling:${AWS::Region}:${AWS::AccountId}:scalingPolicy:989782f4-1bec-4949-9182-f458531e3a86:resource/dynamodb/table/${DynamoDBTable}:policyName/$${DynamoDBTable}-scaling-policy:createdBy/4b6f18be-afb3-4038-9602-fb8880021b87."
            ActionsEnabled: true
            AlarmActions: 
              - !Sub "arn:aws:autoscaling:${AWS::Region}:${AWS::AccountId}:scalingPolicy:989782f4-1bec-4949-9182-f458531e3a86:resource/dynamodb/table/${DynamoDBTable}:policyName/$${DynamoDBTable}-scaling-policy:createdBy/4b6f18be-afb3-4038-9602-fb8880021b87"
            MetricName: "ProvisionedWriteCapacityUnits"
            Namespace: "AWS/DynamoDB"
            Statistic: "Average"
            Dimensions: 
              - 
                Name: "TableName"
                Value: !Ref DynamoDBTable
            Period: 300
            EvaluationPeriods: 3
            Threshold: 1
            ComparisonOperator: "GreaterThanThreshold"

    CloudWatchAlarm7:
        Type: "AWS::CloudWatch::Alarm"
        Properties:
            AlarmName: !Sub "TargetTracking-table/${DynamoDBTable}-ProvisionedCapacityLow-386a36e8-4497-4d84-8bc5-fb2209a8fdd7"
            AlarmDescription: !Sub "DO NOT EDIT OR DELETE. For TargetTrackingScaling policy arn:aws:autoscaling:${AWS::Region}:${AWS::AccountId}:scalingPolicy:4a7289b2-9aa6-4a48-baf5-ffa246e4398c:resource/dynamodb/table/${DynamoDBTable}:policyName/$${DynamoDBTable}-scaling-policy:createdBy/24f9b6e8-b31d-4068-b37a-eccb2da1fe41."
            ActionsEnabled: true
            AlarmActions: 
              - !Sub "arn:aws:autoscaling:${AWS::Region}:${AWS::AccountId}:scalingPolicy:4a7289b2-9aa6-4a48-baf5-ffa246e4398c:resource/dynamodb/table/${DynamoDBTable}:policyName/$${DynamoDBTable}-scaling-policy:createdBy/24f9b6e8-b31d-4068-b37a-eccb2da1fe41"
            MetricName: "ProvisionedReadCapacityUnits"
            Namespace: "AWS/DynamoDB"
            Statistic: "Average"
            Dimensions: 
              - 
                Name: "TableName"
                Value: !Ref DynamoDBTable
            Period: 300
            EvaluationPeriods: 3
            Threshold: 1
            ComparisonOperator: "LessThanThreshold"

    CloudWatchAlarm8:
        Type: "AWS::CloudWatch::Alarm"
        Properties:
            AlarmName: !Sub "TargetTracking-table/${DynamoDBTable}-ProvisionedCapacityLow-a530f558-0371-46e7-b58a-5fc47b95f933"
            AlarmDescription: !Sub "DO NOT EDIT OR DELETE. For TargetTrackingScaling policy arn:aws:autoscaling:${AWS::Region}:${AWS::AccountId}:scalingPolicy:989782f4-1bec-4949-9182-f458531e3a86:resource/dynamodb/table/${DynamoDBTable}:policyName/$${DynamoDBTable}-scaling-policy:createdBy/4b6f18be-afb3-4038-9602-fb8880021b87."
            ActionsEnabled: true
            AlarmActions: 
              - !Sub "arn:aws:autoscaling:${AWS::Region}:${AWS::AccountId}:scalingPolicy:989782f4-1bec-4949-9182-f458531e3a86:resource/dynamodb/table/${DynamoDBTable}:policyName/$${DynamoDBTable}-scaling-policy:createdBy/4b6f18be-afb3-4038-9602-fb8880021b87"
            MetricName: "ProvisionedWriteCapacityUnits"
            Namespace: "AWS/DynamoDB"
            Statistic: "Average"
            Dimensions: 
              - 
                Name: "TableName"
                Value: !Ref DynamoDBTable
            Period: 300
            EvaluationPeriods: 3
            Threshold: 1
            ComparisonOperator: "LessThanThreshold"

    CloudWatchAlarm9:
        Type: "AWS::CloudWatch::Alarm"
        Properties:
            AlarmName: !Sub "TargetTracking-table/${DynamoDBTable}v2-AlarmHigh-3003aadc-522b-4f08-8504-98915cdef611"
            AlarmDescription: !Sub "DO NOT EDIT OR DELETE. For TargetTrackingScaling policy arn:aws:autoscaling:${AWS::Region}:${AWS::AccountId}:scalingPolicy:2fed48d2-e1f2-41f0-8cf5-e22bef1084bd:resource/dynamodb/table/${DynamoDBTable}v2:policyName/$${DynamoDBTable}v2-scaling-policy:createdBy/f990abf6-d4c0-449c-9aef-549394dbcb5e."
            ActionsEnabled: true
            AlarmActions: 
              - !Sub "arn:aws:autoscaling:${AWS::Region}:${AWS::AccountId}:scalingPolicy:2fed48d2-e1f2-41f0-8cf5-e22bef1084bd:resource/dynamodb/table/${DynamoDBTable}v2:policyName/$${DynamoDBTable}v2-scaling-policy:createdBy/f990abf6-d4c0-449c-9aef-549394dbcb5e"
            MetricName: "ConsumedReadCapacityUnits"
            Namespace: "AWS/DynamoDB"
            Statistic: "Sum"
            Dimensions: 
              - 
                Name: "TableName"
                Value: !Sub "${DynamoDBTable}v2"
            Period: 60
            EvaluationPeriods: 2
            Threshold: 42
            ComparisonOperator: "GreaterThanThreshold"

    CloudWatchAlarm10:
        Type: "AWS::CloudWatch::Alarm"
        Properties:
            AlarmName: !Sub "TargetTracking-table/${DynamoDBTable}v2-AlarmHigh-62808d14-0998-46ca-a179-b552117c20a3"
            AlarmDescription: !Sub "DO NOT EDIT OR DELETE. For TargetTrackingScaling policy arn:aws:autoscaling:${AWS::Region}:${AWS::AccountId}:scalingPolicy:32716f68-0f25-4e05-bd69-9a693dd5ece6:resource/dynamodb/table/${DynamoDBTable}v2:policyName/$${DynamoDBTable}v2-scaling-policy:createdBy/8b4a2ed6-a64c-46a7-a820-ef6e0426cf61."
            ActionsEnabled: true
            AlarmActions: 
              - !Sub "arn:aws:autoscaling:${AWS::Region}:${AWS::AccountId}:scalingPolicy:32716f68-0f25-4e05-bd69-9a693dd5ece6:resource/dynamodb/table/${DynamoDBTable}v2:policyName/$${DynamoDBTable}v2-scaling-policy:createdBy/8b4a2ed6-a64c-46a7-a820-ef6e0426cf61"
            MetricName: "ConsumedWriteCapacityUnits"
            Namespace: "AWS/DynamoDB"
            Statistic: "Sum"
            Dimensions: 
              - 
                Name: "TableName"
                Value: !Sub "${DynamoDBTable}v2"
            Period: 60
            EvaluationPeriods: 2
            Threshold: 42
            ComparisonOperator: "GreaterThanThreshold"

    CloudWatchAlarm11:
        Type: "AWS::CloudWatch::Alarm"
        Properties:
            AlarmName: !Sub "TargetTracking-table/${DynamoDBTable}v2-AlarmLow-23414cae-78a1-44a5-860a-e67ec59207dd"
            AlarmDescription: !Sub "DO NOT EDIT OR DELETE. For TargetTrackingScaling policy arn:aws:autoscaling:${AWS::Region}:${AWS::AccountId}:scalingPolicy:32716f68-0f25-4e05-bd69-9a693dd5ece6:resource/dynamodb/table/${DynamoDBTable}v2:policyName/$${DynamoDBTable}v2-scaling-policy:createdBy/8b4a2ed6-a64c-46a7-a820-ef6e0426cf61."
            ActionsEnabled: true
            AlarmActions: 
              - !Sub "arn:aws:autoscaling:${AWS::Region}:${AWS::AccountId}:scalingPolicy:32716f68-0f25-4e05-bd69-9a693dd5ece6:resource/dynamodb/table/${DynamoDBTable}v2:policyName/$${DynamoDBTable}v2-scaling-policy:createdBy/8b4a2ed6-a64c-46a7-a820-ef6e0426cf61"
            MetricName: "ConsumedWriteCapacityUnits"
            Namespace: "AWS/DynamoDB"
            Statistic: "Sum"
            Dimensions: 
              - 
                Name: "TableName"
                Value: !Sub "${DynamoDBTable}v2"
            Period: 60
            EvaluationPeriods: 15
            Threshold: 30
            ComparisonOperator: "LessThanThreshold"

    CloudWatchAlarm12:
        Type: "AWS::CloudWatch::Alarm"
        Properties:
            AlarmName: !Sub "TargetTracking-table/${DynamoDBTable}v2-AlarmLow-8f296386-c06f-42b7-b3ef-719b2413d704"
            AlarmDescription: !Sub "DO NOT EDIT OR DELETE. For TargetTrackingScaling policy arn:aws:autoscaling:${AWS::Region}:${AWS::AccountId}:scalingPolicy:2fed48d2-e1f2-41f0-8cf5-e22bef1084bd:resource/dynamodb/table/${DynamoDBTable}v2:policyName/$${DynamoDBTable}v2-scaling-policy:createdBy/f990abf6-d4c0-449c-9aef-549394dbcb5e."
            ActionsEnabled: true
            AlarmActions: 
              - !Sub "arn:aws:autoscaling:${AWS::Region}:${AWS::AccountId}:scalingPolicy:2fed48d2-e1f2-41f0-8cf5-e22bef1084bd:resource/dynamodb/table/${DynamoDBTable}v2:policyName/$${DynamoDBTable}v2-scaling-policy:createdBy/f990abf6-d4c0-449c-9aef-549394dbcb5e"
            MetricName: "ConsumedReadCapacityUnits"
            Namespace: "AWS/DynamoDB"
            Statistic: "Sum"
            Dimensions: 
              - 
                Name: "TableName"
                Value: !Sub "${DynamoDBTable}v2"
            Period: 60
            EvaluationPeriods: 15
            Threshold: 30
            ComparisonOperator: "LessThanThreshold"

    CloudWatchAlarm13:
        Type: "AWS::CloudWatch::Alarm"
        Properties:
            AlarmName: !Sub "TargetTracking-table/${DynamoDBTable}v2-ProvisionedCapacityHigh-598ef343-e3a6-412d-bdcc-f257450d4d4f"
            AlarmDescription: !Sub "DO NOT EDIT OR DELETE. For TargetTrackingScaling policy arn:aws:autoscaling:${AWS::Region}:${AWS::AccountId}:scalingPolicy:2fed48d2-e1f2-41f0-8cf5-e22bef1084bd:resource/dynamodb/table/${DynamoDBTable}v2:policyName/$${DynamoDBTable}v2-scaling-policy:createdBy/f990abf6-d4c0-449c-9aef-549394dbcb5e."
            ActionsEnabled: true
            AlarmActions: 
              - !Sub "arn:aws:autoscaling:${AWS::Region}:${AWS::AccountId}:scalingPolicy:2fed48d2-e1f2-41f0-8cf5-e22bef1084bd:resource/dynamodb/table/${DynamoDBTable}v2:policyName/$${DynamoDBTable}v2-scaling-policy:createdBy/f990abf6-d4c0-449c-9aef-549394dbcb5e"
            MetricName: "ProvisionedReadCapacityUnits"
            Namespace: "AWS/DynamoDB"
            Statistic: "Average"
            Dimensions: 
              - 
                Name: "TableName"
                Value: !Sub "${DynamoDBTable}v2"
            Period: 300
            EvaluationPeriods: 3
            Threshold: 1
            ComparisonOperator: "GreaterThanThreshold"

    CloudWatchAlarm14:
        Type: "AWS::CloudWatch::Alarm"
        Properties:
            AlarmName: !Sub "TargetTracking-table/${DynamoDBTable}v2-ProvisionedCapacityHigh-97cc1c88-b2d9-4ae3-a2b2-5fe5aacaa801"
            AlarmDescription: !Sub "DO NOT EDIT OR DELETE. For TargetTrackingScaling policy arn:aws:autoscaling:${AWS::Region}:${AWS::AccountId}:scalingPolicy:32716f68-0f25-4e05-bd69-9a693dd5ece6:resource/dynamodb/table/${DynamoDBTable}v2:policyName/$${DynamoDBTable}v2-scaling-policy:createdBy/8b4a2ed6-a64c-46a7-a820-ef6e0426cf61."
            ActionsEnabled: true
            AlarmActions: 
              - !Sub "arn:aws:autoscaling:${AWS::Region}:${AWS::AccountId}:scalingPolicy:32716f68-0f25-4e05-bd69-9a693dd5ece6:resource/dynamodb/table/${DynamoDBTable}v2:policyName/$${DynamoDBTable}v2-scaling-policy:createdBy/8b4a2ed6-a64c-46a7-a820-ef6e0426cf61"
            MetricName: "ProvisionedWriteCapacityUnits"
            Namespace: "AWS/DynamoDB"
            Statistic: "Average"
            Dimensions: 
              - 
                Name: "TableName"
                Value: !Sub "${DynamoDBTable}v2"
            Period: 300
            EvaluationPeriods: 3
            Threshold: 1
            ComparisonOperator: "GreaterThanThreshold"

    CloudWatchAlarm15:
        Type: "AWS::CloudWatch::Alarm"
        Properties:
            AlarmName: !Sub "TargetTracking-table/${DynamoDBTable}v2-ProvisionedCapacityLow-955f05e4-769a-4d92-a3df-cfb9ca8862d6"
            AlarmDescription: !Sub "DO NOT EDIT OR DELETE. For TargetTrackingScaling policy arn:aws:autoscaling:${AWS::Region}:${AWS::AccountId}:scalingPolicy:32716f68-0f25-4e05-bd69-9a693dd5ece6:resource/dynamodb/table/${DynamoDBTable}v2:policyName/$${DynamoDBTable}v2-scaling-policy:createdBy/8b4a2ed6-a64c-46a7-a820-ef6e0426cf61."
            ActionsEnabled: true
            AlarmActions: 
              - !Sub "arn:aws:autoscaling:${AWS::Region}:${AWS::AccountId}:scalingPolicy:32716f68-0f25-4e05-bd69-9a693dd5ece6:resource/dynamodb/table/${DynamoDBTable}v2:policyName/$${DynamoDBTable}v2-scaling-policy:createdBy/8b4a2ed6-a64c-46a7-a820-ef6e0426cf61"
            MetricName: "ProvisionedWriteCapacityUnits"
            Namespace: "AWS/DynamoDB"
            Statistic: "Average"
            Dimensions: 
              - 
                Name: "TableName"
                Value: !Sub "${DynamoDBTable}v2"
            Period: 300
            EvaluationPeriods: 3
            Threshold: 1
            ComparisonOperator: "LessThanThreshold"

    CloudWatchAlarm16:
        Type: "AWS::CloudWatch::Alarm"
        Properties:
            AlarmName: !Sub "TargetTracking-table/${DynamoDBTable}v2-ProvisionedCapacityLow-cbfd6a64-815a-4322-8a71-abb353ba531d"
            AlarmDescription: !Sub "DO NOT EDIT OR DELETE. For TargetTrackingScaling policy arn:aws:autoscaling:${AWS::Region}:${AWS::AccountId}:scalingPolicy:2fed48d2-e1f2-41f0-8cf5-e22bef1084bd:resource/dynamodb/table/${DynamoDBTable}v2:policyName/$${DynamoDBTable}v2-scaling-policy:createdBy/f990abf6-d4c0-449c-9aef-549394dbcb5e."
            ActionsEnabled: true
            AlarmActions: 
              - !Sub "arn:aws:autoscaling:${AWS::Region}:${AWS::AccountId}:scalingPolicy:2fed48d2-e1f2-41f0-8cf5-e22bef1084bd:resource/dynamodb/table/${DynamoDBTable}v2:policyName/$${DynamoDBTable}v2-scaling-policy:createdBy/f990abf6-d4c0-449c-9aef-549394dbcb5e"
            MetricName: "ProvisionedReadCapacityUnits"
            Namespace: "AWS/DynamoDB"
            Statistic: "Average"
            Dimensions: 
              - 
                Name: "TableName"
                Value: !Sub "${DynamoDBTable}v2"
            Period: 300
            EvaluationPeriods: 3
            Threshold: 1
            ComparisonOperator: "LessThanThreshold"

    CloudWatchAlarm17:
        Type: "AWS::CloudWatch::Alarm"
        Properties:
            AlarmName: "awseb-e-nym28hev8j-stack-AWSEBCloudwatchAlarmHigh-140UBVWBBZ26Y"
            AlarmDescription: "ElasticBeanstalk Default Scale Up alarm"
            ActionsEnabled: true
            AlarmActions: 
              - !Sub "arn:aws:autoscaling:${AWS::Region}:${AWS::AccountId}:scalingPolicy:a318dc17-17aa-492b-91ef-462e7470417c:autoScalingGroupName/${AutoScalingAutoScalingGroup}:policyName/awseb-e-nym28hev8j-stack-AWSEBAutoScalingScaleUpPolicy-neXliIHEOJLy"
            MetricName: "NetworkOut"
            Namespace: "AWS/EC2"
            Statistic: "Average"
            Dimensions: 
              - 
                Name: "AutoScalingGroupName"
                Value: !Ref AutoScalingAutoScalingGroup
            Period: 300
            EvaluationPeriods: 1
            Threshold: 6000000
            ComparisonOperator: "GreaterThanThreshold"

    CloudWatchAlarm18:
        Type: "AWS::CloudWatch::Alarm"
        Properties:
            AlarmName: "awseb-e-nym28hev8j-stack-AWSEBCloudwatchAlarmLow-D8YH6BS3M8OY"
            AlarmDescription: "ElasticBeanstalk Default Scale Down alarm"
            ActionsEnabled: true
            AlarmActions: 
              - !Sub "arn:aws:autoscaling:${AWS::Region}:${AWS::AccountId}:scalingPolicy:ddc8adb4-c55c-4245-86e4-f5a613c1d54f:autoScalingGroupName/${AutoScalingAutoScalingGroup}:policyName/awseb-e-nym28hev8j-stack-AWSEBAutoScalingScaleDownPolicy-fryRF2HGxn6u"
            MetricName: "NetworkOut"
            Namespace: "AWS/EC2"
            Statistic: "Average"
            Dimensions: 
              - 
                Name: "AutoScalingGroupName"
                Value: !Ref AutoScalingAutoScalingGroup
            Period: 300
            EvaluationPeriods: 1
            Threshold: 2000000
            ComparisonOperator: "LessThanThreshold"

    LogsLogGroup:
        Type: "AWS::Logs::LogGroup"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction}"

    LogsLogGroup2:
        Type: "AWS::Logs::LogGroup"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction4}"

    LogsLogGroup3:
        Type: "AWS::Logs::LogGroup"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction2}"

    LogsLogGroup4:
        Type: "AWS::Logs::LogGroup"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction3}"

    LogsLogStream:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction}"
            LogStreamName: "2023/02/27/[$LATEST]3dc10d16f1424064a80087c78f338087"

    LogsLogStream2:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction}"
            LogStreamName: "2023/02/28/[$LATEST]a86fa91dd66c4b6eb25dd97b7ee393a4"

    LogsLogStream3:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction4}"
            LogStreamName: "2023/02/27/[$LATEST]082f5f2af7dd44e5b3d10082fe0aae4f"

    LogsLogStream4:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction4}"
            LogStreamName: "2023/02/27/[$LATEST]0992f9c2af554b12978ac23d40ba81c4"

    LogsLogStream5:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction4}"
            LogStreamName: "2023/02/27/[$LATEST]1da5ad0745304a0bb964142e74ca93d6"

    LogsLogStream6:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction4}"
            LogStreamName: "2023/02/27/[$LATEST]36fc4734577147bea2d6c6cf49b813c1"

    LogsLogStream7:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction4}"
            LogStreamName: "2023/02/27/[$LATEST]434d14769ee04fab8b4ad64aaeca28b9"

    LogsLogStream8:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction4}"
            LogStreamName: "2023/02/27/[$LATEST]725e84833b8945be8f005fddc1c0d31a"

    LogsLogStream9:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction4}"
            LogStreamName: "2023/02/27/[$LATEST]9dddd3b798324a7996f4c0a764bbb145"

    LogsLogStream10:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction4}"
            LogStreamName: "2023/02/27/[$LATEST]a5bd98c0f86d4e6c845a1208627ff934"

    LogsLogStream11:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction4}"
            LogStreamName: "2023/02/27/[$LATEST]b2209f38c3ab48ae9202a7866576250b"

    LogsLogStream12:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction4}"
            LogStreamName: "2023/02/27/[$LATEST]b9bb0aba56ee4dfe9bc78c89b17de2d0"

    LogsLogStream13:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction4}"
            LogStreamName: "2023/02/27/[$LATEST]caf6dcefe01d4066939a71b1491d3530"

    LogsLogStream14:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction4}"
            LogStreamName: "2023/02/27/[$LATEST]cb8ffbd7414c4e188bcaf3f7703f3e09"

    LogsLogStream15:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction4}"
            LogStreamName: "2023/02/27/[$LATEST]dc4c9b35d0a646068dcdcd9442fd3fa6"

    LogsLogStream16:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction4}"
            LogStreamName: "2023/02/28/[$LATEST]00d00931086644f6b5a5ad4a7e79dd35"

    LogsLogStream17:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction4}"
            LogStreamName: "2023/02/28/[$LATEST]026b4fce06ea415884c45f6b9bea8b97"

    LogsLogStream18:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction4}"
            LogStreamName: "2023/02/28/[$LATEST]03cfe3765c9a42a989f8a38fe314fb88"

    LogsLogStream19:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction4}"
            LogStreamName: "2023/02/28/[$LATEST]0c89f06c43d94a019b438fba946cf8a7"

    LogsLogStream20:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction4}"
            LogStreamName: "2023/02/28/[$LATEST]0ec0f61aa5694e50af0ee72060f5d4b4"

    LogsLogStream21:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction4}"
            LogStreamName: "2023/02/28/[$LATEST]11b54a02c0724e469bca919b23a48f6d"

    LogsLogStream22:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction4}"
            LogStreamName: "2023/02/28/[$LATEST]14d3a2eb16a04dd7beb8b1dd0fff90ad"

    LogsLogStream23:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction4}"
            LogStreamName: "2023/02/28/[$LATEST]1691066e489c4f2d88c372dd0d14f71c"

    LogsLogStream24:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction4}"
            LogStreamName: "2023/02/28/[$LATEST]19ca2a829ac9413a93d83b8cd3503576"

    LogsLogStream25:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction4}"
            LogStreamName: "2023/02/28/[$LATEST]1e0c403d095847c3a868ed253f8fe5f9"

    LogsLogStream26:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction4}"
            LogStreamName: "2023/02/28/[$LATEST]218a901c56394f35b363a287a06d55b3"

    LogsLogStream27:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction4}"
            LogStreamName: "2023/02/28/[$LATEST]22d69b11ea724e46a09309d5370d9007"

    LogsLogStream28:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction4}"
            LogStreamName: "2023/02/28/[$LATEST]25ca5e3b931b4c6a9c9af2bcb48557e6"

    LogsLogStream29:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction4}"
            LogStreamName: "2023/02/28/[$LATEST]2a903616c05c4423a843e851bd9f603e"

    LogsLogStream30:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction4}"
            LogStreamName: "2023/02/28/[$LATEST]2bb13aa1ec7c4f80861d3bb25c1a7827"

    LogsLogStream31:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction4}"
            LogStreamName: "2023/02/28/[$LATEST]2d0d262198264b609f74279ea0500b16"

    LogsLogStream32:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction4}"
            LogStreamName: "2023/02/28/[$LATEST]2d6477fb2f4f4b4389b74034225fdb03"

    LogsLogStream33:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction4}"
            LogStreamName: "2023/02/28/[$LATEST]2e09fab6005c4e0ca74d6eea2df772aa"

    LogsLogStream34:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction4}"
            LogStreamName: "2023/02/28/[$LATEST]30ffa09ef2d741ceb5b59b2f4897f70d"

    LogsLogStream35:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction4}"
            LogStreamName: "2023/02/28/[$LATEST]326482275e36430ca0d6f37cf6a78415"

    LogsLogStream36:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction4}"
            LogStreamName: "2023/02/28/[$LATEST]33d42c258c29401083f63a1b6aa5d526"

    LogsLogStream37:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction4}"
            LogStreamName: "2023/02/28/[$LATEST]342137e79b934b37b0d44562254e23a5"

    LogsLogStream38:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction4}"
            LogStreamName: "2023/02/28/[$LATEST]34ad5682b1084bffbc9201bf399c6eac"

    LogsLogStream39:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction4}"
            LogStreamName: "2023/02/28/[$LATEST]375a90f8d6544e5099d1fe4b27c1f339"

    LogsLogStream40:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction4}"
            LogStreamName: "2023/02/28/[$LATEST]393b7e49dbbf4593b737787776f546a9"

    LogsLogStream41:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction4}"
            LogStreamName: "2023/02/28/[$LATEST]39a783d8c52e457cbab3576628157f69"

    LogsLogStream42:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction4}"
            LogStreamName: "2023/02/28/[$LATEST]48bf42201a5748c6bd068433158bcc57"

    LogsLogStream43:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction4}"
            LogStreamName: "2023/02/28/[$LATEST]55f18b0223de401b998fc98ee9b860ca"

    LogsLogStream44:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction4}"
            LogStreamName: "2023/02/28/[$LATEST]5c4a7d94a79c491c963729c6351a4e89"

    LogsLogStream45:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction4}"
            LogStreamName: "2023/02/28/[$LATEST]60e5eca70131471297b53c6b05a35536"

    LogsLogStream46:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction4}"
            LogStreamName: "2023/02/28/[$LATEST]615be6479aae40da840e4166964eafcb"

    LogsLogStream47:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction4}"
            LogStreamName: "2023/02/28/[$LATEST]64d8366b5f364a9a823250ca33f0dd4c"

    LogsLogStream48:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction4}"
            LogStreamName: "2023/02/28/[$LATEST]6612d63e123848b6b0a8c9d4945920f0"

    LogsLogStream49:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction4}"
            LogStreamName: "2023/02/28/[$LATEST]691099642dbd478fb25757e0306436ac"

    LogsLogStream50:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction4}"
            LogStreamName: "2023/02/28/[$LATEST]692970cdbe804b6d892a7f6c8ec18179"

    LogsLogStream51:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction4}"
            LogStreamName: "2023/02/28/[$LATEST]69a2e402d6dc486caeb72428b63776f5"

    LogsLogStream52:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction4}"
            LogStreamName: "2023/02/28/[$LATEST]6db2c14a3bb549ccae836daa3c9f3612"

    LogsLogStream53:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction2}"
            LogStreamName: "2023/02/22/[$LATEST]ef9589baabce46cb87cda7e2863947d0"

    LogsLogStream54:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction2}"
            LogStreamName: "2023/02/22/[$LATEST]fdc7ea46800c4de78e831beb43558039"

    LogsLogStream55:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction2}"
            LogStreamName: "2023/02/23/[$LATEST]c2965e0726a24083b44ad58e456f5548"

    LogsLogStream56:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction2}"
            LogStreamName: "2023/02/24/[$LATEST]3224fd2f306944ffa40c275c26f86571"

    LogsLogStream57:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction2}"
            LogStreamName: "2023/02/24/[$LATEST]cf03a2633ff94ee2ba2fe52850a1e083"

    LogsLogStream58:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction2}"
            LogStreamName: "2023/02/26/[$LATEST]637e0714862140298da75f65b8eccc93"

    LogsLogStream59:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction2}"
            LogStreamName: "2023/02/26/[$LATEST]725e62e83b514c29b43ce47f2d28187e"

    LogsLogStream60:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction2}"
            LogStreamName: "2023/02/26/[$LATEST]bc8f831f4f934a419b3d9daab1d44351"

    LogsLogStream61:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction2}"
            LogStreamName: "2023/02/27/[$LATEST]0d70fd8d70274b598852af5df3c6b33d"

    LogsLogStream62:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction2}"
            LogStreamName: "2023/02/27/[$LATEST]17a648a0eb9a468282661e16088be261"

    LogsLogStream63:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction2}"
            LogStreamName: "2023/02/27/[$LATEST]18c0f766b309454bb78f73acdb752c4a"

    LogsLogStream64:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction2}"
            LogStreamName: "2023/02/27/[$LATEST]41a11e6caa2a4a9da41671f6d164cf6f"

    LogsLogStream65:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction2}"
            LogStreamName: "2023/02/27/[$LATEST]4709debf014f4a2abbfdcac18c500a84"

    LogsLogStream66:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction2}"
            LogStreamName: "2023/02/27/[$LATEST]5a0bfa382e3e4d5291f277ea800fc06b"

    LogsLogStream67:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction2}"
            LogStreamName: "2023/02/27/[$LATEST]8c04013d5c734ad39191baa718d0a387"

    LogsLogStream68:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction2}"
            LogStreamName: "2023/02/27/[$LATEST]d25c42efaabe4b22b10113a9d47b15c5"

    LogsLogStream69:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction2}"
            LogStreamName: "2023/02/27/[$LATEST]e67845623bfd4681baa91190cac175d8"

    LogsLogStream70:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction3}"
            LogStreamName: "2023/02/28/[$LATEST]1ce1c1f96bb642939729f38b292f7a1d"

    LogsLogStream71:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction3}"
            LogStreamName: "2023/02/28/[$LATEST]1de5731d32204cbcb63f341d773df7e1"

    LogsLogStream72:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction3}"
            LogStreamName: "2023/02/28/[$LATEST]1ebb3a5909624be1a21c41d36673e42c"

    LogsLogStream73:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction3}"
            LogStreamName: "2023/02/28/[$LATEST]2d89e61a494e4c77a15ca717eba3639f"

    LogsLogStream74:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction3}"
            LogStreamName: "2023/02/28/[$LATEST]2f8c0815b91742d38426a3d6f2809469"

    LogsLogStream75:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction3}"
            LogStreamName: "2023/02/28/[$LATEST]4c673a6197e343b98541ce2a25ab9c23"

    LogsLogStream76:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction3}"
            LogStreamName: "2023/02/28/[$LATEST]58a1de7596554137b319e3b20adece01"

    LogsLogStream77:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction3}"
            LogStreamName: "2023/02/28/[$LATEST]6f27f4792ca946179b6b9c1fad408ea6"

    LogsLogStream78:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction3}"
            LogStreamName: "2023/02/28/[$LATEST]7c7ca87e388341ed8f972c5364e43526"

    LogsLogStream79:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction3}"
            LogStreamName: "2023/02/28/[$LATEST]91971bf893f7472f8dd3b5d4a2b3287d"

    LogsLogStream80:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction3}"
            LogStreamName: "2023/02/28/[$LATEST]a9f7e4f3c65046779ed2d181f2ca9fef"

    LogsLogStream81:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction3}"
            LogStreamName: "2023/02/28/[$LATEST]b7a111977e0c4562b7e97e43f65737a1"

    LogsLogStream82:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction3}"
            LogStreamName: "2023/02/28/[$LATEST]c50a3828985b41b791b3ddf72f02713e"

    LogsLogStream83:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction3}"
            LogStreamName: "2023/02/28/[$LATEST]d57ecadea46e42fab6909c02af43bf48"

    LogsLogStream84:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction3}"
            LogStreamName: "2023/02/28/[$LATEST]e6b86203fd104f159a4bf2fe83a81b42"

    LogsLogStream85:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction3}"
            LogStreamName: "2023/02/28/[$LATEST]e9f4f2896b4f4759af717daa0487bfb2"

    DynamoDBTable:
        Type: "AWS::DynamoDB::Table"
        Properties:
            AttributeDefinitions: 
              - 
                AttributeName: "id"
                AttributeType: "S"
            TableName: "s3-json-textract-table"
            Tags: 
              - 
                Key: "resource"
                Value: "dynamodb"
            KeySchema: 
              - 
                AttributeName: "id"
                KeyType: "HASH"
            ProvisionedThroughput: 
                ReadCapacityUnits: 1
                WriteCapacityUnits: 1

    DynamoDBTable2:
        Type: "AWS::DynamoDB::Table"
        Properties:
            AttributeDefinitions: 
              - 
                AttributeName: "Document Name"
                AttributeType: "S"
              - 
                AttributeName: "ID"
                AttributeType: "S"
            TableName: !Sub "${DynamoDBTable}v2"
            KeySchema: 
              - 
                AttributeName: "ID"
                KeyType: "HASH"
              - 
                AttributeName: "Document Name"
                KeyType: "RANGE"
            ProvisionedThroughput: 
                ReadCapacityUnits: 1
                WriteCapacityUnits: 1

    ApplicationAutoScalingScalableTarget:
        Type: "AWS::ApplicationAutoScaling::ScalableTarget"
        Properties:
            MaxCapacity: 10
            MinCapacity: 1
            ResourceId: !Sub "table/${DynamoDBTable}"
            RoleARN: !Sub "arn:aws:iam::${AWS::AccountId}:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable"
            ScalableDimension: "dynamodb:table:WriteCapacityUnits"
            ServiceNamespace: "dynamodb"
            SuspendedState: 
                DynamicScalingInSuspended: false
                DynamicScalingOutSuspended: false
                ScheduledScalingSuspended: false

    ApplicationAutoScalingScalableTarget2:
        Type: "AWS::ApplicationAutoScaling::ScalableTarget"
        Properties:
            MaxCapacity: 10
            MinCapacity: 1
            ResourceId: !Sub "table/${DynamoDBTable}"
            RoleARN: !Sub "arn:aws:iam::${AWS::AccountId}:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable"
            ScalableDimension: "dynamodb:table:ReadCapacityUnits"
            ServiceNamespace: "dynamodb"
            SuspendedState: 
                DynamicScalingInSuspended: false
                DynamicScalingOutSuspended: false
                ScheduledScalingSuspended: false

    ApplicationAutoScalingScalableTarget3:
        Type: "AWS::ApplicationAutoScaling::ScalableTarget"
        Properties:
            MaxCapacity: 10
            MinCapacity: 1
            ResourceId: !Sub "table/${DynamoDBTable}v2"
            RoleARN: !Sub "arn:aws:iam::${AWS::AccountId}:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable"
            ScalableDimension: "dynamodb:table:ReadCapacityUnits"
            ServiceNamespace: "dynamodb"
            SuspendedState: 
                DynamicScalingInSuspended: false
                DynamicScalingOutSuspended: false
                ScheduledScalingSuspended: false

    ApplicationAutoScalingScalableTarget4:
        Type: "AWS::ApplicationAutoScaling::ScalableTarget"
        Properties:
            MaxCapacity: 10
            MinCapacity: 1
            ResourceId: !Sub "table/${DynamoDBTable}v2"
            RoleARN: !Sub "arn:aws:iam::${AWS::AccountId}:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable"
            ScalableDimension: "dynamodb:table:WriteCapacityUnits"
            ServiceNamespace: "dynamodb"
            SuspendedState: 
                DynamicScalingInSuspended: false
                DynamicScalingOutSuspended: false
                ScheduledScalingSuspended: false

    CodeCommitRepository:
        Type: "AWS::CodeCommit::Repository"
        Properties:
            RepositoryName: "TestRepo"

    CodePipelinePipeline:
        Type: "AWS::CodePipeline::Pipeline"
        Properties:
            Name: "textractjsondynamo"
            RoleArn: !GetAtt IAMRole4.Arn
            ArtifactStore: 
                Location: !Ref S3Bucket
                Type: "S3"
            Stages: 
              - 
                Name: "Source"
                Actions: 
                  - 
                    Name: "Source"
                    ActionTypeId: 
                        Category: "Source"
                        Owner: "AWS"
                        Provider: "CodeStarSourceConnection"
                        Version: "1"
                    Configuration: 
                        BranchName: "main"
                        ConnectionArn: !Sub "arn:aws:codestar-connections:${AWS::Region}:${AWS::AccountId}:connection/c00e306b-083e-4599-b09b-a8153417e8bd"
                        DetectChanges: "true"
                        FullRepositoryId: "connellian/frontend"
                        OutputArtifactFormat: "CODE_ZIP"
                    OutputArtifacts: 
                      - 
                        Name: "SourceArtifact"
                    Region: !Ref AWS::Region
                    Namespace: "SourceVariables"
                    RunOrder: 1
              - 
                Name: "Deploy"
                Actions: 
                  - 
                    Name: "Deploy"
                    ActionTypeId: 
                        Category: "Deploy"
                        Owner: "AWS"
                        Provider: "ElasticBeanstalk"
                        Version: "1"
                    Configuration: 
                        ApplicationName: "Node-Test"
                        EnvironmentName: "Nodetest-env"
                    InputArtifacts: 
                      - 
                        Name: "SourceArtifact"
                    Region: !Ref AWS::Region
                    Namespace: "DeployVariables"
                    RunOrder: 1

    CognitoIdentityPool:
        Type: "AWS::Cognito::IdentityPool"
        Properties:
            IdentityPoolName: "S3UploadUsers"
            AllowUnauthenticatedIdentities: false
            CognitoIdentityProviders: 
              - 
                ProviderName: !Sub "cognito-idp.${AWS::Region}.amazonaws.com/${CognitoUserPool}"
                ClientId: "3fk8gkl494ebsevkii3da1c3tv"
                ServerSideTokenCheck: false

    CognitoIdentityPoolRoleAttachment:
        Type: "AWS::Cognito::IdentityPoolRoleAttachment"
        Properties:
            IdentityPoolId: !Sub "${AWS::Region}:7df287ef-92c7-4c5d-a89f-f8f0135c277f"
            Roles: 
                authenticated: !GetAtt IAMRole9.Arn
                unauthenticated: !GetAtt IAMRole7.Arn

    CognitoUserPool:
        Type: "AWS::Cognito::UserPool"
        Properties:
            UserPoolName: "UserTestPool"
            Policies: 
                PasswordPolicy: 
                    MinimumLength: 8
                    RequireUppercase: true
                    RequireLowercase: true
                    RequireNumbers: true
                    RequireSymbols: true
                    TemporaryPasswordValidityDays: 7
            LambdaConfig: {}
            Schema: 
              - 
                Name: "sub"
                AttributeDataType: "String"
                DeveloperOnlyAttribute: false
                Mutable: false
                Required: true
                StringAttributeConstraints: 
                    MinLength: "1"
                    MaxLength: "2048"
              - 
                Name: "name"
                AttributeDataType: "String"
                DeveloperOnlyAttribute: false
                Mutable: true
                Required: false
                StringAttributeConstraints: 
                    MinLength: "0"
                    MaxLength: "2048"
              - 
                Name: "given_name"
                AttributeDataType: "String"
                DeveloperOnlyAttribute: false
                Mutable: true
                Required: true
                StringAttributeConstraints: 
                    MinLength: "0"
                    MaxLength: "2048"
              - 
                Name: "family_name"
                AttributeDataType: "String"
                DeveloperOnlyAttribute: false
                Mutable: true
                Required: true
                StringAttributeConstraints: 
                    MinLength: "0"
                    MaxLength: "2048"
              - 
                Name: "middle_name"
                AttributeDataType: "String"
                DeveloperOnlyAttribute: false
                Mutable: true
                Required: false
                StringAttributeConstraints: 
                    MinLength: "0"
                    MaxLength: "2048"
              - 
                Name: "nickname"
                AttributeDataType: "String"
                DeveloperOnlyAttribute: false
                Mutable: true
                Required: false
                StringAttributeConstraints: 
                    MinLength: "0"
                    MaxLength: "2048"
              - 
                Name: "preferred_username"
                AttributeDataType: "String"
                DeveloperOnlyAttribute: false
                Mutable: true
                Required: false
                StringAttributeConstraints: 
                    MinLength: "0"
                    MaxLength: "2048"
              - 
                Name: "profile"
                AttributeDataType: "String"
                DeveloperOnlyAttribute: false
                Mutable: true
                Required: false
                StringAttributeConstraints: 
                    MinLength: "0"
                    MaxLength: "2048"
              - 
                Name: "picture"
                AttributeDataType: "String"
                DeveloperOnlyAttribute: false
                Mutable: true
                Required: false
                StringAttributeConstraints: 
                    MinLength: "0"
                    MaxLength: "2048"
              - 
                Name: "website"
                AttributeDataType: "String"
                DeveloperOnlyAttribute: false
                Mutable: true
                Required: false
                StringAttributeConstraints: 
                    MinLength: "0"
                    MaxLength: "2048"
              - 
                Name: "email"
                AttributeDataType: "String"
                DeveloperOnlyAttribute: false
                Mutable: true
                Required: true
                StringAttributeConstraints: 
                    MinLength: "0"
                    MaxLength: "2048"
              - 
                Name: "email_verified"
                AttributeDataType: "Boolean"
                DeveloperOnlyAttribute: false
                Mutable: true
                Required: false
              - 
                Name: "gender"
                AttributeDataType: "String"
                DeveloperOnlyAttribute: false
                Mutable: true
                Required: false
                StringAttributeConstraints: 
                    MinLength: "0"
                    MaxLength: "2048"
              - 
                Name: "birthdate"
                AttributeDataType: "String"
                DeveloperOnlyAttribute: false
                Mutable: true
                Required: false
                StringAttributeConstraints: 
                    MinLength: "10"
                    MaxLength: "10"
              - 
                Name: "zoneinfo"
                AttributeDataType: "String"
                DeveloperOnlyAttribute: false
                Mutable: true
                Required: false
                StringAttributeConstraints: 
                    MinLength: "0"
                    MaxLength: "2048"
              - 
                Name: "locale"
                AttributeDataType: "String"
                DeveloperOnlyAttribute: false
                Mutable: true
                Required: false
                StringAttributeConstraints: 
                    MinLength: "0"
                    MaxLength: "2048"
              - 
                Name: "phone_number"
                AttributeDataType: "String"
                DeveloperOnlyAttribute: false
                Mutable: true
                Required: false
                StringAttributeConstraints: 
                    MinLength: "0"
                    MaxLength: "2048"
              - 
                Name: "phone_number_verified"
                AttributeDataType: "Boolean"
                DeveloperOnlyAttribute: false
                Mutable: true
                Required: false
              - 
                Name: "address"
                AttributeDataType: "String"
                DeveloperOnlyAttribute: false
                Mutable: true
                Required: false
                StringAttributeConstraints: 
                    MinLength: "0"
                    MaxLength: "2048"
              - 
                Name: "updated_at"
                AttributeDataType: "Number"
                DeveloperOnlyAttribute: false
                Mutable: true
                Required: false
                NumberAttributeConstraints: 
                    MinValue: "0"
            AutoVerifiedAttributes: 
              - "email"
            UsernameAttributes: 
              - "email"
            MfaConfiguration: "OFF"
            EmailConfiguration: 
                EmailSendingAccount: "COGNITO_DEFAULT"
            AdminCreateUserConfig: 
                AllowAdminCreateUserOnly: false
            UserPoolTags: {}
            AccountRecoverySetting: 
                RecoveryMechanisms: 
                  - 
                    Priority: 1
                    Name: "verified_email"
            UsernameConfiguration: 
                CaseSensitive: false
            VerificationMessageTemplate: 
                DefaultEmailOption: "CONFIRM_WITH_CODE"

    CognitoUserPoolClient:
        Type: "AWS::Cognito::UserPoolClient"
        Properties:
            UserPoolId: !Ref CognitoUserPool
            ClientName: "Demo_User_App"
            RefreshTokenValidity: 30
            ReadAttributes: 
              - "address"
              - "birthdate"
              - "email"
              - "email_verified"
              - "family_name"
              - "gender"
              - "given_name"
              - "locale"
              - "middle_name"
              - "name"
              - "nickname"
              - "phone_number"
              - "phone_number_verified"
              - "picture"
              - "preferred_username"
              - "profile"
              - "updated_at"
              - "website"
              - "zoneinfo"
            WriteAttributes: 
              - "address"
              - "birthdate"
              - "email"
              - "family_name"
              - "gender"
              - "given_name"
              - "locale"
              - "middle_name"
              - "name"
              - "nickname"
              - "phone_number"
              - "picture"
              - "preferred_username"
              - "profile"
              - "updated_at"
              - "website"
              - "zoneinfo"
            ExplicitAuthFlows: 
              - "ALLOW_CUSTOM_AUTH"
              - "ALLOW_REFRESH_TOKEN_AUTH"
              - "ALLOW_USER_SRP_AUTH"
            PreventUserExistenceErrors: "ENABLED"
            SupportedIdentityProviders: 
              - "COGNITO"
            CallbackURLs: 
              - !Sub "https://${EC2Instance2.PublicIp}/loggedin.html"
            LogoutURLs: 
              - !Sub "https://${EC2Instance2.PublicIp}/loggedout.html"
            AllowedOAuthFlows: 
              - "code"
            AllowedOAuthScopes: 
              - "email"
              - "openid"
              - "phone"
            AllowedOAuthFlowsUserPoolClient: true
            IdTokenValidity: 60
            AccessTokenValidity: 60
            TokenValidityUnits: 
                AccessToken: "minutes"
                IdToken: "minutes"
                RefreshToken: "days"

    CognitoUserPoolUser:
        Type: "AWS::Cognito::UserPoolUser"
        Properties:
            Username: "e0c26443-edd3-43a3-bfaa-c4bdc8d162f7"
            UserPoolId: !Ref CognitoUserPool
            UserAttributes: 
              - 
                Name: "sub"
                Value: "e0c26443-edd3-43a3-bfaa-c4bdc8d162f7"
              - 
                Name: "email_verified"
                Value: "true"
              - 
                Name: "given_name"
                Value: "Test"
              - 
                Name: "family_name"
                Value: "Test"
              - 
                Name: "email"
                Value: "connellian@yahoo.com"

    CognitoUserPoolUser2:
        Type: "AWS::Cognito::UserPoolUser"
        Properties:
            Username: "029815e7-3f63-4621-8f41-864e003bdf6c"
            UserPoolId: !Ref CognitoUserPool
            UserAttributes: 
              - 
                Name: "sub"
                Value: "029815e7-3f63-4621-8f41-864e003bdf6c"
              - 
                Name: "email_verified"
                Value: "true"
              - 
                Name: "given_name"
                Value: "keith"
              - 
                Name: "family_name"
                Value: "masoner"
              - 
                Name: "email"
                Value: "keithkyles@hotmail.com"

    CognitoUserPoolUser3:
        Type: "AWS::Cognito::UserPoolUser"
        Properties:
            Username: "46310dba-3c98-4524-9245-86d5fa375fea"
            UserPoolId: !Ref CognitoUserPool
            UserAttributes: 
              - 
                Name: "sub"
                Value: "46310dba-3c98-4524-9245-86d5fa375fea"
              - 
                Name: "email_verified"
                Value: "true"
              - 
                Name: "given_name"
                Value: "Ian"
              - 
                Name: "family_name"
                Value: "Connell"
              - 
                Name: "email"
                Value: "ianconn69@gmail.com"

    CognitoUserPoolUser4:
        Type: "AWS::Cognito::UserPoolUser"
        Properties:
            Username: "20432adc-6d6b-48f0-bbaa-e7872744184c"
            UserPoolId: !Ref CognitoUserPool
            UserAttributes: 
              - 
                Name: "sub"
                Value: "20432adc-6d6b-48f0-bbaa-e7872744184c"
              - 
                Name: "email_verified"
                Value: "true"
              - 
                Name: "given_name"
                Value: "Atif"
              - 
                Name: "family_name"
                Value: "Choudary"
              - 
                Name: "email"
                Value: "Choudaryatif@yahoo.com"

    CognitoUserPoolDomain:
        Type: "AWS::Cognito::UserPoolDomain"
        Properties:
            Domain: "user-login"
            UserPoolId: !Ref CognitoUserPool

    CognitoUserPoolUICustomizationAttachment:
        Type: "AWS::Cognito::UserPoolUICustomizationAttachment"

    XRayGroup:
        Type: "AWS::XRay::Group"
        Properties:
            GroupName: "Default"
            InsightsConfiguration: 
                InsightsEnabled: false
                NotificationsEnabled: false

    ResourceGroupsGroup:
        Type: "AWS::ResourceGroups::Group"
        Properties:
            Name: "Team_1_Deployments"
            ResourceQuery: 
                Type: "TAG_FILTERS_1_0"
                Query: 
                    ResourceTypeFilters: 
                      - "AWS::AllSupported"
                    TagFilters: 
                      - 
                        Key: "Resource "
                        Values: 
                          - "Resource Group"

    AppRunnerObservabilityConfiguration:
        Type: "AWS::AppRunner::ObservabilityConfiguration"
        Properties:
            ObservabilityConfigurationName: "DefaultConfiguration"
            TraceConfiguration: 
                Vendor: "AWSXRAY"

